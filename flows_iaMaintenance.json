[
    {
        "id": "3e8cb0b4d690161c",
        "type": "tab",
        "label": "Ambiente para Testes",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "db17a995a09e80d5",
        "type": "tab",
        "label": "Arkmeds",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "8d95a7b948833323",
        "type": "tab",
        "label": "Brownfield",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "da850aca2b690860",
        "type": "tab",
        "label": "Telegram",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "0ac66d5d81f31d24",
        "type": "tab",
        "label": "Python",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "4775a8cea2097778",
        "type": "tab",
        "label": "Notificações",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "6ade3aca4a2ae889",
        "type": "tab",
        "label": "Injects",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "73a12f5b27a97da1",
        "type": "group",
        "z": "8d95a7b948833323",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "d9c57225bce8f72c",
            "6c925db3da475408",
            "f2437abf214f00e9",
            "453e0b843fc15f18",
            "7ebbd73b8eb97286",
            "6c38c6d6d627b2fe",
            "ddf5bf871e97d8c5",
            "35261a274d126ca8",
            "c0d48184165b7341",
            "2db2cacba23cb898",
            "5b672f0b267ad4d9",
            "291ba03c40b8240c"
        ],
        "x": 34,
        "y": 29,
        "w": 1262,
        "h": 1278
    },
    {
        "id": "4b48a58bc4aeeb24",
        "type": "group",
        "z": "8d95a7b948833323",
        "name": "Atualiza manualmente a média de hoje [-0]",
        "style": {
            "stroke": "none",
            "fill": "#d1d1d1",
            "fill-opacity": "0.2",
            "label": true,
            "color": "#0070c0"
        },
        "nodes": [
            "f95c7a84acb38afe",
            "70f45a2f1ba1dd51",
            "054e00923b449c7f",
            "e44db20fbabf8456",
            "579d82fa607fb815",
            "7f1ebf0394b0723d"
        ],
        "x": 94,
        "y": 819,
        "w": 862,
        "h": 142
    },
    {
        "id": "02520d58c819c2fb",
        "type": "group",
        "z": "db17a995a09e80d5",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "c80f2b2ecd9c93ca",
            "b2f19ebf29b2535e",
            "bd94eaecd1098066",
            "1dc7c2499547b265",
            "1d5633e00cc525b0",
            "c3a65364ba478214",
            "1e353503c7d5a7f5",
            "847899c9c153b13a",
            "1560058f244ee20c",
            "93cb7c5296db8bb3"
        ],
        "x": 24,
        "y": 29,
        "w": 1170,
        "h": 2078
    },
    {
        "id": "cb23c87fddd6df73",
        "type": "group",
        "z": "db17a995a09e80d5",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "703621f98d52f91f",
            "f1b091c120a3648f",
            "4d11a8aeb7a45d28",
            "c8f0f8bce80d5401"
        ],
        "x": 1224,
        "y": 29,
        "w": 1008,
        "h": 968
    },
    {
        "id": "fc88ae2fa290fc8c",
        "type": "group",
        "z": "db17a995a09e80d5",
        "name": "Atualizar Relatório de Logs Arkmeds",
        "style": {
            "stroke": "none",
            "fill": "#3f93cf",
            "fill-opacity": "0.2",
            "label": true,
            "color": "#0070c0"
        },
        "nodes": [
            "dde31913093c8747",
            "dca237285d12b6a6",
            "c1744dadba35c776",
            "1a5df243ef709f02",
            "4586a1fc7e46c18c",
            "099372498ccb1992"
        ],
        "x": 2264,
        "y": 29,
        "w": 582,
        "h": 172
    },
    {
        "id": "b2f19ebf29b2535e",
        "type": "group",
        "z": "db17a995a09e80d5",
        "g": "02520d58c819c2fb",
        "name": "Interfaces para Notificação",
        "style": {
            "label": true,
            "stroke": "none",
            "fill": "#addb7b",
            "fill-opacity": "0.2",
            "color": "#548235"
        },
        "nodes": [
            "6aa46ead0da450d8",
            "826b5b89fabd6271",
            "7d9e4733eddce5f1",
            "419eedf71ae600a7",
            "cb3c7a2bd6d1af7c",
            "0dc3ca5256481932"
        ],
        "x": 54,
        "y": 1659,
        "w": 602,
        "h": 162
    },
    {
        "id": "bd94eaecd1098066",
        "type": "group",
        "z": "db17a995a09e80d5",
        "g": "02520d58c819c2fb",
        "name": "Detecção de Erros",
        "style": {
            "label": true,
            "stroke": "none",
            "fill": "#ffbfbf",
            "fill-opacity": "0.2",
            "color": "#ff0000"
        },
        "nodes": [
            "8771c0ac3797dc34",
            "a615625fd1bea032",
            "1a341ff46a8e19c0",
            "3ae636b17db0f4ec",
            "935180ee345666d1",
            "40cbc80bbf8b75ab",
            "6301eb4da85ccffb",
            "d1dfe8805aa73a50",
            "dfb0a888bea6b44e",
            "0e594c57ce43e7b1",
            "c2d46ced07fe8625"
        ],
        "x": 54,
        "y": 1839,
        "w": 882,
        "h": 242
    },
    {
        "id": "1dc7c2499547b265",
        "type": "group",
        "z": "db17a995a09e80d5",
        "g": "02520d58c819c2fb",
        "name": "Payload de Criação e Fechamento",
        "style": {
            "stroke": "none",
            "fill": "#d1d1d1",
            "fill-opacity": "0.2",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "94fbe4ab44b81958",
            "1aaf9776e7165aa8",
            "40c06b6165282145",
            "3292300064ade38b",
            "e3148e90c3127d6b",
            "3b598c4b1f4bde48",
            "60a4af64dfb36bf9",
            "59e2abc8575e2f1a",
            "04d42251bbee0f88",
            "a0c307d284401ec3",
            "a9d9d73f30d836ed",
            "cfdd64a07739c594",
            "1e1c10d2161f2f04"
        ],
        "x": 54,
        "y": 519,
        "w": 712,
        "h": 282
    },
    {
        "id": "1d5633e00cc525b0",
        "type": "group",
        "z": "db17a995a09e80d5",
        "g": "02520d58c819c2fb",
        "name": "Consultar Apontamentos e Verificação de Preenchimento",
        "style": {
            "stroke": "none",
            "fill": "#d1d1d1",
            "fill-opacity": "0.2",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "371f9a81523929f0",
            "a14e65abac3dee4f",
            "ecec19c7df953f7b",
            "6a20ce62affdb252",
            "222df44bc87cd841",
            "5fbe52198c763185",
            "269670dde77a5611",
            "8bc14cba8695789b",
            "2667c05d09220a3c",
            "a65080e2459d2018",
            "ebb3d95f6d0edba2",
            "d68eec13861d8d10",
            "d5d440de230b3b98",
            "5dd0263b7cf89901",
            "aae46db9be628f16",
            "59ba2ec1a2f362b3",
            "35b3454c4c10de1c"
        ],
        "x": 54,
        "y": 819,
        "w": 1114,
        "h": 252
    },
    {
        "id": "c3a65364ba478214",
        "type": "group",
        "z": "db17a995a09e80d5",
        "g": "02520d58c819c2fb",
        "name": "Informação das OS",
        "style": {
            "stroke": "none",
            "fill": "#d1d1d1",
            "fill-opacity": "0.2",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "b5299a710758fbf8",
            "e7395d9dea27d55c",
            "c12063e17a1eba5e",
            "09a9bd674942e742",
            "5035fe08c29ec737",
            "f51b36177a2b98f0",
            "1a49c2783d2d52e5",
            "07e6d4a101079a25",
            "e0f3c5f9d4a5f982",
            "7564baec94258c76",
            "50eb21b9f678c77c",
            "842b2a23a7b39b20",
            "1a9382724de651ed",
            "2153157473422fca",
            "eeed2d1a0a259b8d",
            "67ad5ac869474599",
            "fdc413dc2317b4da",
            "6dd750488e297ca9",
            "ac4220f3a9f53107"
        ],
        "x": 56,
        "y": 99,
        "w": 710,
        "h": 402
    },
    {
        "id": "f1b091c120a3648f",
        "type": "group",
        "z": "db17a995a09e80d5",
        "g": "cb23c87fddd6df73",
        "name": "WebSocket e HTTP - Consulta de Dados",
        "style": {
            "stroke": "none",
            "fill": "#d1d1d1",
            "fill-opacity": "0.2",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "74cb8f2ed73f9335",
            "9ea398c19d05c980",
            "914e5fada4202248",
            "89fc7ec86b89e887",
            "e7f128c68361411f",
            "dc7435824a755001",
            "f69d99a8d93faed1",
            "8ad7b9441779d0c2",
            "bb9cf10b7ccb78ce",
            "94ad1891c3a7c24c",
            "99d0a9ec12b85135",
            "6fcf0937c3b8864d",
            "2a27c023db2018c4",
            "c3e68591c0c228dc",
            "b4d018291ef29b0f",
            "102bc5a9f659026b",
            "6aee48081a887b17"
        ],
        "x": 1254,
        "y": 109,
        "w": 952,
        "h": 342
    },
    {
        "id": "4d11a8aeb7a45d28",
        "type": "group",
        "z": "db17a995a09e80d5",
        "g": "cb23c87fddd6df73",
        "name": "WebSocket e HTTP - Teste de Consulta de Dados",
        "style": {
            "stroke": "none",
            "fill": "#ffffbf",
            "fill-opacity": "0.3",
            "label": true,
            "color": "#ffC000"
        },
        "nodes": [
            "769155e879bb88f3",
            "990091ac3266acbe",
            "e1ad605f4133035d",
            "82d10a9b5efbe421",
            "ef986c57344de299",
            "7ca3be1989278656",
            "bf450a92e0b12d85",
            "dfc78b8c3672bdf9",
            "c375ee7f7d70d8b1",
            "38e9249afccb2733",
            "0b19777c5cf447cb",
            "a1a466a3f1b34390",
            "cfe7a5ad07132705",
            "83d2937a7d258271",
            "77ab8fe446e283e1"
        ],
        "x": 1254,
        "y": 609,
        "w": 952,
        "h": 362
    },
    {
        "id": "7ebbd73b8eb97286",
        "type": "group",
        "z": "8d95a7b948833323",
        "g": "73a12f5b27a97da1",
        "name": "Exclui manualmente os registros de dados sem produção [sp] e atualiza a média do dia atual [-0]",
        "style": {
            "stroke": "none",
            "fill": "#d1d1d1",
            "fill-opacity": "0.2",
            "label": true,
            "color": "#0070c0"
        },
        "nodes": [
            "f055f07b0ea3a07c",
            "7cafbca0e23e8014",
            "e289c1b828bd8c1c",
            "12cd515cda97e8ed",
            "97fd8041d640dfe5",
            "99f33592778fc1e0",
            "19863325513562b9"
        ],
        "x": 94,
        "y": 1139,
        "w": 1032,
        "h": 142
    },
    {
        "id": "6c38c6d6d627b2fe",
        "type": "group",
        "z": "8d95a7b948833323",
        "g": "73a12f5b27a97da1",
        "name": "Atualiza manualmente a média dos últimos 30 dias [-30]",
        "style": {
            "stroke": "none",
            "fill": "#d1d1d1",
            "fill-opacity": "0.2",
            "label": true,
            "color": "#0070c0"
        },
        "nodes": [
            "9dedcf3bf32a65b2",
            "5d241a6ec037c168",
            "35346f01d6bc8c43",
            "81bc2b2c91deea08",
            "105e66d5b9b52d8d",
            "94afafd8b29e24a5"
        ],
        "x": 94,
        "y": 979,
        "w": 862,
        "h": 142
    },
    {
        "id": "ddf5bf871e97d8c5",
        "type": "group",
        "z": "8d95a7b948833323",
        "g": "73a12f5b27a97da1",
        "name": "Atualiza média do dia atual [-0] e envia alertas",
        "style": {
            "stroke": "none",
            "fill": "#d1d1d1",
            "fill-opacity": "0.2",
            "label": true,
            "color": "#0070c0"
        },
        "nodes": [
            "7a70066f86c06821",
            "74a0eda06b86e321",
            "47b3c16ad07d79cd",
            "ef112969a0e90c86",
            "3eb2779ba9c273db",
            "070f245056124caa"
        ],
        "x": 94,
        "y": 509,
        "w": 672,
        "h": 152
    },
    {
        "id": "35261a274d126ca8",
        "type": "group",
        "z": "8d95a7b948833323",
        "g": "73a12f5b27a97da1",
        "name": "Exclui registros de dados sem produção [sp]",
        "style": {
            "stroke": "none",
            "fill": "#d1d1d1",
            "fill-opacity": "0.2",
            "label": true,
            "color": "#0070c0"
        },
        "nodes": [
            "ba2cf73d0d78aeb1",
            "063afd3e386a68c9",
            "51d215a0c6cb8442",
            "1e5a029b2e415bdb",
            "4494d74c78d1d0ed"
        ],
        "x": 94,
        "y": 339,
        "w": 562,
        "h": 152
    },
    {
        "id": "c0d48184165b7341",
        "type": "group",
        "z": "8d95a7b948833323",
        "g": "73a12f5b27a97da1",
        "name": "Atualiza média do dia anterior [-1]",
        "style": {
            "stroke": "none",
            "fill": "#d1d1d1",
            "fill-opacity": "0.2",
            "label": true,
            "color": "#0070c0"
        },
        "nodes": [
            "497e56d1e1d9b6b0",
            "4cacd576c28ead7f",
            "3c8820ad99ee3db1",
            "5ba75b8c442a0c20",
            "a75b78c59e9d7222",
            "4f65489ce1232e59"
        ],
        "x": 94,
        "y": 169,
        "w": 742,
        "h": 152
    },
    {
        "id": "2db2cacba23cb898",
        "type": "group",
        "z": "8d95a7b948833323",
        "g": "73a12f5b27a97da1",
        "name": "Alerta: Crítico",
        "style": {
            "stroke": "none",
            "fill": "#ffbfbf",
            "fill-opacity": "0.2",
            "label": true,
            "color": "#ff0000"
        },
        "nodes": [
            "6d1d5bbdd60f2a6b",
            "54e1ad945ea5b379",
            "01e7a752af3bd7dc",
            "409acffb7e211c8c",
            "231e5c59a185a65c"
        ],
        "x": 784,
        "y": 449,
        "w": 432,
        "h": 162
    },
    {
        "id": "5b672f0b267ad4d9",
        "type": "group",
        "z": "8d95a7b948833323",
        "g": "73a12f5b27a97da1",
        "name": "Alerta: Em Atenção",
        "style": {
            "stroke": "none",
            "fill": "#ffffbf",
            "label": true,
            "color": "#ffC000",
            "label-position": "sw"
        },
        "nodes": [
            "e4c2922081a3b86f",
            "21ce7c1aaf5de215",
            "82c0e052b19673c4",
            "cff80d70cc20995f",
            "b377e7cce68c25e4"
        ],
        "x": 784,
        "y": 629,
        "w": 432,
        "h": 170
    },
    {
        "id": "1e353503c7d5a7f5",
        "type": "group",
        "z": "db17a995a09e80d5",
        "g": "02520d58c819c2fb",
        "name": "Notificações",
        "style": {
            "label": true,
            "stroke": "none",
            "fill-opacity": "0.2",
            "color": "#000000",
            "fill": "#d1d1d1"
        },
        "nodes": [
            "16843bbcc8335ea9",
            "d98c67133d1d7860",
            "8fbe7a2633fdee5a",
            "de733619add88692",
            "0478213813f2fc82",
            "53078b96d697c293",
            "f10c4a32d50d0b7c",
            "b99010c1793013f9",
            "fb3466a059791285",
            "38a3f45aa246f64e",
            "6d253f176aab9d61",
            "67e7786c62217870",
            "448faa56970794e6",
            "bab1cf069f168b28"
        ],
        "x": 674,
        "y": 1399,
        "w": 482,
        "h": 422
    },
    {
        "id": "847899c9c153b13a",
        "type": "group",
        "z": "db17a995a09e80d5",
        "g": "02520d58c819c2fb",
        "name": "Encerra a Nota e Ordem PM no SAP",
        "style": {
            "stroke": "none",
            "stroke-opacity": "0.2",
            "label": true,
            "color": "#000000",
            "fill": "#d1d1d1",
            "fill-opacity": "0.2"
        },
        "nodes": [
            "c7d142042721a53f",
            "986c7569121fc47f",
            "9ee4394ec7e81995",
            "e19b64dccce24d25",
            "9fa0fcf948866254",
            "fb4a60e5d145c094",
            "2bea327854a95299",
            "98c90450f164cc67",
            "ded54106f6023e63",
            "b279171d10da1723"
        ],
        "x": 52,
        "y": 1399,
        "w": 602,
        "h": 242
    },
    {
        "id": "1560058f244ee20c",
        "type": "group",
        "z": "db17a995a09e80d5",
        "g": "02520d58c819c2fb",
        "name": "Cria a Nota e Ordem PM no SAP",
        "style": {
            "stroke": "none",
            "fill": "#d1d1d1",
            "fill-opacity": "0.2",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "bfe7ac7469a154a8",
            "a6f4998136899eae",
            "07f4989453fdc148",
            "942f6e90501e1364",
            "78568c7a1f075228",
            "ccaefa7822bcb7f2",
            "a19bf4dd68956226",
            "93364db42ab509e9",
            "de795e3e561ff543",
            "24a4914024c7a2c8",
            "9ac50c232d8be377",
            "af3f7a1f9400afdc",
            "519725c9379c8e73",
            "ac7b93be9728a08a",
            "18b385342493ad2c"
        ],
        "x": 52,
        "y": 1089,
        "w": 912,
        "h": 292
    },
    {
        "id": "93cb7c5296db8bb3",
        "type": "group",
        "z": "db17a995a09e80d5",
        "g": "02520d58c819c2fb",
        "name": "Logs",
        "style": {
            "stroke": "none",
            "fill": "#3f93cf",
            "fill-opacity": "0.2",
            "label": true,
            "color": "#0070c0"
        },
        "nodes": [
            "a243abd2d866f1a0",
            "7bc1e117f262c327",
            "255657b8ba2a04d6",
            "37d73d71dfa9d42d"
        ],
        "x": 784,
        "y": 99,
        "w": 362,
        "h": 122
    },
    {
        "id": "c8f0f8bce80d5401",
        "type": "group",
        "z": "db17a995a09e80d5",
        "g": "cb23c87fddd6df73",
        "name": "Logs",
        "style": {
            "stroke": "none",
            "fill": "#3f93cf",
            "fill-opacity": "0.2",
            "label": true,
            "color": "#0070c0"
        },
        "nodes": [
            "9cb9ebaa30da80db",
            "7e31536ff1732f03",
            "80db7fcc2e9223f5",
            "c165123647228aed"
        ],
        "x": 1254,
        "y": 469,
        "w": 372,
        "h": 122
    },
    {
        "id": "712b53e5.990dfc",
        "type": "mqtt-broker",
        "name": "mqtt-arkmeds",
        "broker": "a2df0hwbwondoq-ats.iot.us-east-1.amazonaws.com",
        "port": "8883",
        "tls": "b3f2fe09a0fb1ea9",
        "clientid": "",
        "autoConnect": true,
        "usetls": true,
        "protocolVersion": "3",
        "keepalive": "15",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "226030c1c2110779",
        "type": "tls-config",
        "name": "certificados_mwm",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "ca589198f9b35a5a3ab49622139abf6b0d18312222ece7344b6e52efebca7d16-certificate.pem.crt",
        "keyname": "ca589198f9b35a5a3ab49622139abf6b0d18312222ece7344b6e52efebca7d16-private.pem.key",
        "caname": "AmazonRootCA1.pem",
        "servername": "",
        "verifyservercert": true,
        "alpnprotocol": ""
    },
    {
        "id": "03a4ac58cbc92240",
        "type": "mqtt-broker",
        "name": "mqtt-mwm",
        "broker": "ak19ymfzoy6ky-ats.iot.us-east-1.amazonaws.com",
        "port": "8883",
        "tls": "226030c1c2110779",
        "clientid": "",
        "autoConnect": true,
        "usetls": true,
        "protocolVersion": "4",
        "keepalive": "15",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "b3f2fe09a0fb1ea9",
        "type": "tls-config",
        "name": "certificados_arkmeds",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "088402ffec9824824790c0f866dfab18e08abf00f04607e982c3c5f72f7a6eed-certificate.pem.crt",
        "keyname": "088402ffec9824824790c0f866dfab18e08abf00f04607e982c3c5f72f7a6eed-private.pem.key",
        "caname": "AmazonRootCA1 (2).pem",
        "servername": "",
        "verifyservercert": true,
        "alpnprotocol": ""
    },
    {
        "id": "df8c0b88.91b0a8",
        "type": "MSSQL-CN",
        "name": "SPSQL2016",
        "server": "SPSQL2016",
        "port": "",
        "encyption": false,
        "trustServerCertificate": false,
        "database": "Indicadores",
        "useUTC": false,
        "connectTimeout": "",
        "requestTimeout": "100000",
        "cancelTimeout": "",
        "pool": "",
        "parseJSON": false,
        "enableArithAbort": true
    },
    {
        "id": "3deb2ea155d454a2",
        "type": "chatbot-telegram-node",
        "botname": "IA_MWM",
        "usernames": "",
        "polling": "1000",
        "store": "",
        "log": "",
        "debug": true,
        "skipMediaFiles": false,
        "webHook": "",
        "connectMode": "polling",
        "storeMessages": true,
        "enableMissionControl": false,
        "inspectMessages": true,
        "chatbotId": ""
    },
    {
        "id": "4cfddd026b08c0a4",
        "type": "telegram bot",
        "botname": "IA MWM",
        "usernames": "",
        "chatids": "",
        "baseapiurl": "",
        "updatemode": "polling",
        "pollinterval": "300",
        "usesocks": false,
        "sockshost": "",
        "socksprotocol": "socks5",
        "socksport": "6667",
        "socksusername": "anonymous",
        "sockspassword": "",
        "bothost": "",
        "botpath": "",
        "localbotport": "8443",
        "publicbotport": "8443",
        "privatekey": "",
        "certificate": "",
        "useselfsignedcertificate": false,
        "sslterminated": false,
        "verboselogging": false
    },
    {
        "id": "966fdd501622374e",
        "type": "websocket-client",
        "path": "ws://editor.mark.expert:1880/ws/mwm",
        "tls": "",
        "wholemsg": "false",
        "hb": "30",
        "subprotocol": ""
    },
    {
        "id": "63cf48572007af4d",
        "type": "inject",
        "z": "3e8cb0b4d690161c",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 100,
        "wires": [
            [
                "464da50bac06f3c2"
            ]
        ]
    },
    {
        "id": "464da50bac06f3c2",
        "type": "function",
        "z": "3e8cb0b4d690161c",
        "name": "criarOS",
        "func": "\nmsg.payload =\n{\n    \"documento_arkmeds\": \"0000000100\",\n        \"tipo_de_nota\": \"M2\",\n            \"texto_breve\": \"Teste de Criação - App Mark - PRD\",\n                \"equipamento\": \"M01526\",\n                    \"notificador\": \"T00RWB\",\n                        \"grupo_planejamento\": \"210\",\n                            \"centro_grupo_planejamento\": \"M100\",\n                                \"centro_trabalho\": \"PC05\",\n                                    \"centro_centro_trabalho\": \"M100\",\n                                        \"tipo_ordem\": \"PM01\",\n                                            \"numero_pessoal\": \"501138\"\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 100,
        "wires": [
            [
                "d0025dd4291054b0"
            ]
        ]
    },
    {
        "id": "d0025dd4291054b0",
        "type": "http request",
        "z": "3e8cb0b4d690161c",
        "name": "post_SAP_PRD",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://pi.mwm.com.br/RESTAdapter/01NotaOrdemCriacao",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "basic",
        "senderr": false,
        "headers": [],
        "x": 440,
        "y": 100,
        "wires": [
            [
                "79895ee2c3888046"
            ]
        ],
        "info": "---\r\nAmbiente de Produção para a integração do aplicativo da Arkmeds com o SAP\r\n---\r\n\r\nAbaixo seguem os dados técnicos de acesso ao serviço REST JSON, sendo que, num primeiro momento, o serviço estará disponível somente nos ambientes de desenvolvimento (DEV) e qualidade (QAS):\r\n\r\n    Endpoint(DEV): https://pod.mwm.com.br:50000/RESTAdapter/NotificationAndOrderCreate\r\n    Endpoint(QAS): https://pides.mwm.com.br/RESTAdapter/NotificationAndOrderCreate\r\n    Endpoint(PRD): https://pop.mwm.com.br:50200/RESTAdapter/NotificationAndOrderCreate\r\n\r\n    Usuário (para todos os ambientes): INTARKMEDS\r\n    Senha (para todos os ambientes): 99QCDpAj\r\n"
    },
    {
        "id": "79895ee2c3888046",
        "type": "debug",
        "z": "3e8cb0b4d690161c",
        "name": "debugCriar",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 100,
        "wires": []
    },
    {
        "id": "9068ca30105ccba7",
        "type": "comment",
        "z": "3e8cb0b4d690161c",
        "name": "Teste de criação de OS",
        "info": "Teste para abertura de OS\n\nUtilizando o mesmo payload do teste realizado no SoapUI.",
        "x": 140,
        "y": 60,
        "wires": []
    },
    {
        "id": "20fbc9b83017fa3f",
        "type": "inject",
        "z": "3e8cb0b4d690161c",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 230,
        "wires": [
            [
                "86bcaeed2e97f171"
            ]
        ]
    },
    {
        "id": "86bcaeed2e97f171",
        "type": "function",
        "z": "3e8cb0b4d690161c",
        "name": "encerrarOS",
        "func": "\nmsg.payload =\n{\n    \"documento_arkmeds\": \"0000000100\",\n        \"texto_breve\": \"Teste de Edição - App Mark - PRD\",\n            \"equipamento\": \"M01527\",\n                \"texto_longo_situacao\":\n    {\n        \"linha\":\n        [\n            \"1ª linha\",\n            \"\",\n            \"3ª linha\"\n        ]\n    },\n    \"notificador\": \"B00FCV\",\n        \"grupo_planejamento\": \"210\",\n            \"centro_grupo_planejamento\": \"M100\",\n                \"centro_trabalho\": \"PC02\",\n                    \"centro_centro_trabalho\": \"M100\",\n                        \"prioridade\": \"1\",\n                            \"parada\": \"X\",\n                                \"data_inicio_avaria\": \"10/01/2024\",\n                                    \"hora_inicio_avaria\": \"09:00:00\",\n                                        \"data_fim_avaria\": \"10/01/2024\",\n                                            \"hora_fim_avaria\": \"17:05:09\",\n                                                \"item_texto\": \"texto curto item V2\",\n                                                    \"item_texto_causa\": \"causa: quebra de peça V2\",\n                                                        \"acao_historico\":\n    {\n        \"texto_acao\": \"Historico\",\n            \"historico_texto_longo\":\n        {\n            \"linha\":\n            [\n                \"1ª linha\",\n                \"2ª linha\"\n            ]\n        }\n    },\n    \"numero_pessoal\": \"501138\",\n        \"confirmacoes\": {\n            \"item\": [\n                {\n                    \"confirm_data_inicio_trabalho\": \"10/01/2024\",\n                    \"confirm_hora_inicio_trabalho\": \"09:00:00\",\n                    \"confirm_data_fim_trabalho\": \"10/01/2024\",\n                    \"confirm_hora_fim_trabalho\": \"10:05:09\",\n                    \"confirm_centro_trabalho\": \"PC02\",\n                    \"confirm_centro_centro_trabalho\": \"M100\",\n                    \"confirm_numero_pessoal\": \"501138\"\n                },\n                {\n                    \"confirm_data_inicio_trabalho\": \"11/01/2024\",\n                    \"confirm_hora_inicio_trabalho\": \"10:20:00\",\n                    \"confirm_data_fim_trabalho\": \"11/01/2024\",\n                    \"confirm_hora_fim_trabalho\": \"17:05:09\",\n                    \"confirm_centro_trabalho\": \"PC03\",\n                    \"confirm_centro_centro_trabalho\": \"M100\",\n                    \"confirm_numero_pessoal\": \"501138\"\n                }\n            ]\n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 230,
        "wires": [
            [
                "32589488dce4e3f2"
            ]
        ]
    },
    {
        "id": "32589488dce4e3f2",
        "type": "http request",
        "z": "3e8cb0b4d690161c",
        "name": "post_SAP_PRD",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://pi.mwm.com.br/RESTAdapter/02NotaOrdemAlteracao",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "basic",
        "senderr": false,
        "headers": [],
        "x": 440,
        "y": 230,
        "wires": [
            [
                "d56e9901dfa33070"
            ]
        ],
        "info": "---\r\nAmbiente de Produção para a integração do aplicativo da Arkmeds com o SAP\r\n---\r\n\r\nAbaixo seguem os dados técnicos de acesso ao serviço REST JSON, sendo que, num primeiro momento, o serviço estará disponível somente nos ambientes de desenvolvimento (DEV) e qualidade (QAS):\r\n\r\n    Endpoint(DEV): https://pod.mwm.com.br:50000/RESTAdapter/NotificationAndOrderCreate\r\n    Endpoint(QAS): https://pides.mwm.com.br/RESTAdapter/NotificationAndOrderCreate\r\n    Endpoint(PRD): https://pop.mwm.com.br:50200/RESTAdapter/NotificationAndOrderCreate\r\n\r\n    Usuário (para todos os ambientes): INTARKMEDS\r\n    Senha (para todos os ambientes): 99QCDpAj\r\n"
    },
    {
        "id": "d56e9901dfa33070",
        "type": "debug",
        "z": "3e8cb0b4d690161c",
        "name": "debugEditar",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 230,
        "wires": []
    },
    {
        "id": "b059c52c38382950",
        "type": "comment",
        "z": "3e8cb0b4d690161c",
        "name": "Teste de enceramento de OS",
        "info": "Teste para abertura de OS\n\nUtilizando o mesmo payload do teste realizado no SoapUI.",
        "x": 160,
        "y": 190,
        "wires": []
    },
    {
        "id": "0e419ed5057b2008",
        "type": "function",
        "z": "3e8cb0b4d690161c",
        "name": "function 7",
        "func": "msg.payloadSAP = { \"documento_arkmeds\": \"10720392\", \"tipo_de_nota\": \"M2\", \"texto_breve\": \"Acompanhar Técnico Especializado (Terceiro)\", \"texto_longo_situacao\": { \"linha\": [[\"gdefeito no IHM da Ega\", \"\", \"\", \"hgg\"]] }, \"notificador\": \"Rogerio Fernando Rodrigues\", \"equipamento\": \"M00588\", \"grupo_planejamento\": \"210\", \"centro_grupo_planejamento\": \"M100\", \"centro_trabalho\": \"PI03\", \"centro_centro_trabalho\": \"M100\", \"prioridade\": \"3\", \"parada\": \"0\", \"data_inicio_avaria\": \"09/10/2023\", \"hora_inicio_avaria\": \"10:58:00\", \"data_fim_avaria\": \"22/01/2024\", \"hora_fim_avaria\": \"14:27:42\", \"item_texto\": \"Defeito no comando bi manual\", \"item_texto_causa\": \"Acompanhar Técnico Especializado (Terceiro)\", \"acao_historico\": { \"texto_acao\": \"Histórico\", \"historico_texto_longo\": { \"linha\": [[\"Causa: Acompanhar Técnico Especializado (Terceiro)\", \"Efeito: Defeito no comando bi manual\", \"Ação: sasadads gsgsg\"]] } }, \"tipo_ordem\": \"PM01\", \"numero_pessoal\": \"501138\", \"confirmacoes\": { \"item\": [{ \"confirm_data_inicio_trabalho\": \"17/11/2023\", \"confirm_hora_inicio_trabalho\": \"15:09:21\", \"confirm_data_fim_trabalho\": \"17/11/2023\", \"confirm_hora_fim_trabalho\": \"15:10:30\", \"confirm_centro_trabalho\": \"1\", \"confirm_centro_centro_trabalho\": \"M100\", \"confirm_numero_pessoal\": \"1\" }, { \"confirm_data_inicio_trabalho\": \"17/11/2023\", \"confirm_hora_inicio_trabalho\": \"14:55:43\", \"confirm_data_fim_trabalho\": \"17/11/2023\", \"confirm_hora_fim_trabalho\": \"15:08:58\", \"confirm_centro_trabalho\": \"1\", \"confirm_centro_centro_trabalho\": \"M100\", \"confirm_numero_pessoal\": \"1\" }, { \"confirm_data_inicio_trabalho\": \"17/11/2023\", \"confirm_hora_inicio_trabalho\": \"14:49:06\", \"confirm_data_fim_trabalho\": \"17/11/2023\", \"confirm_hora_fim_trabalho\": \"14:51:25\", \"confirm_centro_trabalho\": \"1\", \"confirm_centro_centro_trabalho\": \"M100\", \"confirm_numero_pessoal\": \"1\" }, { \"confirm_data_inicio_trabalho\": \"09/10/2023\", \"confirm_hora_inicio_trabalho\": \"10:58:49\", \"confirm_data_fim_trabalho\": \"09/10/2023\", \"confirm_hora_fim_trabalho\": \"10:58:50\", \"confirm_centro_trabalho\": \"1\", \"confirm_centro_centro_trabalho\": \"M100\", \"confirm_numero_pessoal\": \"1\" }] } }\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 370,
        "wires": [
            [
                "7e26bcf9bea2f4fd"
            ]
        ]
    },
    {
        "id": "7e26bcf9bea2f4fd",
        "type": "function",
        "z": "3e8cb0b4d690161c",
        "name": "function 8",
        "func": "msg.payload = msg.payloadSAP\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 370,
        "wires": [
            [
                "f35d3b50c265fbd7"
            ]
        ]
    },
    {
        "id": "d5b08a35d74e0bdf",
        "type": "debug",
        "z": "3e8cb0b4d690161c",
        "name": "debug 11",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 370,
        "wires": []
    },
    {
        "id": "0d8e39efc7b4481c",
        "type": "inject",
        "z": "3e8cb0b4d690161c",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 370,
        "wires": [
            [
                "0e419ed5057b2008"
            ]
        ]
    },
    {
        "id": "f35d3b50c265fbd7",
        "type": "function",
        "z": "3e8cb0b4d690161c",
        "name": "verificarPreenchimento",
        "func": "\nvar erro = \"\";\n\n                                        if (msg.payload.texto_breve.length == 0) { erro = erro + \"Origem do Problema / \"; }\n                // if (msg.payload.texto_longo_situacao.linha[0][0].length == 0) { erro = erro + \"Observações Apresentadas / \"; } //Não deve ser obrigatório.\n                                        if (msg.payload.notificador.length == 0) { erro = erro + \"Notificador / \"; }\n                                        if (msg.payload.equipamento.length == 0) { erro = erro + \"Equipamento / \"; }\n                                 if (msg.payload.grupo_planejamento.length == 0) { erro = erro + \"Tipo de Serviço / \"; }\n                                \n                                    if (msg.payload.centro_trabalho.length == 0) { erro = erro + \"Quadro de Trabalho / \"; }\n\n                                         if (msg.payload.prioridade.length == 0) { erro = erro + \"Prioridade / \"; }\n                                             if (msg.payload.parada.length == 0) { erro = erro + \"Criticidade / \"; }\n\n                                 if (msg.payload.data_inicio_avaria.length == 0) { erro = erro + \"Data de Abertura / \"; }\n                                    if (msg.payload.data_fim_avaria.length == 0) { erro = erro + \"Data de Fechamento / \"; }\n\n                                         if (msg.payload.item_texto.length == 0) { erro = erro + \"Problema Relatado (Efeito) / \"; }\n                                   if (msg.payload.item_texto_causa.length == 0) { erro = erro + \"Origem do Problema (Causa) / \"; }                                   \n                             //if (msg.orderWebHook.descricao_servico.length == 0) { erro = erro + \"Descrição do Serviço (Ação) / \"; } \n\n                                     if (msg.payload.numero_pessoal.length == 0) { erro = erro + \"Número de Registro (RE do Usuário) / \"; }\n\nif (msg.payload.confirmacoes.item == \"\") {\n                                                                                   erro = erro + \"Registro de Horas / \";\n} else {\n  if (msg.payload.confirmacoes.item[0].confirm_data_inicio_trabalho.length == 0) { erro = erro + \"Data e hora de Início no Campo Registro de Horas / \"; } \n     if (msg.payload.confirmacoes.item[0].confirm_data_fim_trabalho.length == 0) { erro = erro + \"Data e hora de Fim no Campo Registro de Horas / \"; }\n       if (msg.payload.confirmacoes.item[0].confirm_centro_trabalho.length == 0) { erro = erro + \"Portaria (Oficina do Usuário) / \"; }\n        if (msg.payload.confirmacoes.item[0].confirm_numero_pessoal.length == 0) { erro = erro + \"Número de Registro (RE do Usuário) / \"; }\n}\n\nif (msg.payload.parada == \"0\") {\n    msg.payload.parada = undefined;\n}\n\nif (erro == \"\") {\n   erro = null;\n   msg.payload.verificacao = erro;\n} else {\n   msg.payload.verificacao = \"Campo(s) sem preenchimento: \" + erro.slice(0, -3) + \".\";\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 370,
        "wires": [
            [
                "d5b08a35d74e0bdf",
                "ac1c9eb01a52faa8"
            ]
        ]
    },
    {
        "id": "fcef5020dc9d3ae7",
        "type": "inject",
        "z": "3e8cb0b4d690161c",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 140,
        "wires": [
            [
                "e6e4ecbce25f3abd"
            ]
        ]
    },
    {
        "id": "e6e4ecbce25f3abd",
        "type": "function",
        "z": "3e8cb0b4d690161c",
        "name": "criarOS",
        "func": "\nmsg.payload =\n{\n    \"documento_arkmeds\": \"0000000102\",\n        \"tipo_de_nota\": \"M2\",\n            \"texto_breve\": \"Teste de Criação - App Mark - PRD\",\n                \"equipamento\": \"M01526\",\n                    \"notificador\": \"T00RWB\",\n                        \"grupo_planejamento\": \"210\",\n                            \"centro_grupo_planejamento\": \"M100\",\n                                \"centro_trabalho\": \"PC05\",\n                                    \"centro_centro_trabalho\": \"M100\",\n                                        \"tipo_ordem\": \"PM01\",\n                                            \"numero_pessoal\": \"501138\"\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 140,
        "wires": [
            [
                "bc6c6f7c71224553"
            ]
        ]
    },
    {
        "id": "bc6c6f7c71224553",
        "type": "http request",
        "z": "3e8cb0b4d690161c",
        "name": "post_SAP_Q03",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://pides.mwm.com.br/RESTAdapter/01NotaOrdemCriacao",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "basic",
        "senderr": false,
        "headers": [],
        "x": 440,
        "y": 140,
        "wires": [
            [
                "c21acc0a536eb2da"
            ]
        ],
        "info": "---\r\nAmbiente de Produção para a integração do aplicativo da Arkmeds com o SAP\r\n---\r\n\r\nAbaixo seguem os dados técnicos de acesso ao serviço REST JSON, sendo que, num primeiro momento, o serviço estará disponível somente nos ambientes de desenvolvimento (DEV) e qualidade (QAS):\r\n\r\n    Endpoint(DEV): https://pod.mwm.com.br:50000/RESTAdapter/NotificationAndOrderCreate\r\n    Endpoint(QAS): https://pides.mwm.com.br/RESTAdapter/NotificationAndOrderCreate\r\n    Endpoint(PRD): https://pop.mwm.com.br:50200/RESTAdapter/NotificationAndOrderCreate\r\n\r\n    Usuário (para todos os ambientes): INTARKMEDS\r\n    Senha (para todos os ambientes): 99QCDpAj\r\n"
    },
    {
        "id": "c21acc0a536eb2da",
        "type": "debug",
        "z": "3e8cb0b4d690161c",
        "name": "debugCriar",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 140,
        "wires": []
    },
    {
        "id": "02969e5ad2352494",
        "type": "inject",
        "z": "3e8cb0b4d690161c",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 270,
        "wires": [
            [
                "912f729f62ae5060"
            ]
        ]
    },
    {
        "id": "912f729f62ae5060",
        "type": "function",
        "z": "3e8cb0b4d690161c",
        "name": "encerrarOS",
        "func": "\nmsg.payload =\n{\n    \"documento_arkmeds\": \"10720301\",\n        \"texto_breve\": \"Teste de Edição - App Mark - PRD\",\n            \"equipamento\": \"M01527\",\n                \"texto_longo_situacao\":\n    {\n        \"linha\":\n        [\n            \"1ª linha\",\n            \"\",\n            \"3ª linha\"\n        ]\n    },\n    \"notificador\": \"B00FCV\",\n        \"grupo_planejamento\": \"210\",\n            \"centro_grupo_planejamento\": \"M100\",\n                \"centro_trabalho\": \"PC02\",\n                    \"centro_centro_trabalho\": \"M100\",\n                        \"prioridade\": \"1\",\n                            \"parada\": \"X\",\n                                \"data_inicio_avaria\": \"10/05/2023\",\n                                    \"hora_inicio_avaria\": \"09:00:00\",\n                                        \"data_fim_avaria\": \"11/05/2023\",\n                                            \"hora_fim_avaria\": \"17:05:09\",\n                                                \"item_texto\": \"texto curto item V2\",\n                                                    \"item_texto_causa\": \"causa: quebra de peça V2\",\n                                                        \"acao_historico\":\n    {\n        \"texto_acao\": \"Historico\",\n            \"historico_texto_longo\":\n        {\n            \"linha\":\n            [\n                \"1ª linha\",\n                \"2ª linha\"\n            ]\n        }\n    },\n    \"numero_pessoal\": \"501138\",\n        \"confirmacoes\": {\n            \"item\": [\n                {\n                    \"confirm_data_inicio_trabalho\": \"10/05/2023\",\n                    \"confirm_hora_inicio_trabalho\": \"09:00:00\",\n                    \"confirm_data_fim_trabalho\": \"10/05/2023\",\n                    \"confirm_hora_fim_trabalho\": \"10:05:09\",\n                    \"confirm_centro_trabalho\": \"PC02\",\n                    \"confirm_centro_centro_trabalho\": \"M100\",\n                    \"confirm_numero_pessoal\": \"501138\"\n                },\n                {\n                    \"confirm_data_inicio_trabalho\": \"11/05/2023\",\n                    \"confirm_hora_inicio_trabalho\": \"10:20:00\",\n                    \"confirm_data_fim_trabalho\": \"11/05/2023\",\n                    \"confirm_hora_fim_trabalho\": \"17:05:09\",\n                    \"confirm_centro_trabalho\": \"PC03\",\n                    \"confirm_centro_centro_trabalho\": \"M100\",\n                    \"confirm_numero_pessoal\": \"501138\"\n                }\n            ]\n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 270,
        "wires": [
            [
                "c7494c59e64f57b8"
            ]
        ]
    },
    {
        "id": "c7494c59e64f57b8",
        "type": "http request",
        "z": "3e8cb0b4d690161c",
        "name": "post_SAP_Q03",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://pides.mwm.com.br/RESTAdapter/02NotaOrdemAlteracao",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "basic",
        "senderr": false,
        "headers": [],
        "x": 440,
        "y": 270,
        "wires": [
            [
                "0b2f1c37976baffd"
            ]
        ],
        "info": "---\r\nAmbiente de Produção para a integração do aplicativo da Arkmeds com o SAP\r\n---\r\n\r\nAbaixo seguem os dados técnicos de acesso ao serviço REST JSON, sendo que, num primeiro momento, o serviço estará disponível somente nos ambientes de desenvolvimento (DEV) e qualidade (QAS):\r\n\r\n    Endpoint(DEV): https://pod.mwm.com.br:50000/RESTAdapter/NotificationAndOrderCreate\r\n    Endpoint(QAS): https://pides.mwm.com.br/RESTAdapter/NotificationAndOrderCreate\r\n    Endpoint(PRD): https://pop.mwm.com.br:50200/RESTAdapter/NotificationAndOrderCreate\r\n\r\n    Usuário (para todos os ambientes): INTARKMEDS\r\n    Senha (para todos os ambientes): 99QCDpAj\r\n"
    },
    {
        "id": "0b2f1c37976baffd",
        "type": "debug",
        "z": "3e8cb0b4d690161c",
        "name": "debugEditar",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 270,
        "wires": []
    },
    {
        "id": "4122a24e179010a8",
        "type": "MSSQL",
        "z": "3e8cb0b4d690161c",
        "mssqlCN": "df8c0b88.91b0a8",
        "name": "sql",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": "0",
        "query": "\r\n\tINSERT INTO [Indicadores].[DBO].[tbNM_Arkmeds_Log] (payload, rDt)\r\n\r\n\t     VALUES (\r\n\r\nREPLACE(REPLACE(REPLACE(REPLACE(REPLACE('{{payload}}','&quot;','\"'),'&#x2F;','/'),'&#39;',''''),'&#x3D;','='),', &#x2F;n',''),\r\n\r\nGETDATE()\r\n\r\n\t\t \t\t);",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "parseMustache": true,
        "params": [],
        "x": 1070,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "ac1c9eb01a52faa8",
        "type": "json",
        "z": "3e8cb0b4d690161c",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": true,
        "x": 780,
        "y": 420,
        "wires": [
            [
                "4122a24e179010a8"
            ]
        ]
    },
    {
        "id": "74cb8f2ed73f9335",
        "type": "websocket in",
        "z": "db17a995a09e80d5",
        "g": "f1b091c120a3648f",
        "name": "",
        "server": "",
        "client": "966fdd501622374e",
        "x": 1440,
        "y": 150,
        "wires": [
            [
                "6aee48081a887b17"
            ]
        ]
    },
    {
        "id": "9ea398c19d05c980",
        "type": "debug",
        "z": "db17a995a09e80d5",
        "g": "f1b091c120a3648f",
        "name": "WS MSSQL",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2050,
        "y": 310,
        "wires": []
    },
    {
        "id": "914e5fada4202248",
        "type": "MSSQL",
        "z": "db17a995a09e80d5",
        "g": "f1b091c120a3648f",
        "mssqlCN": "df8c0b88.91b0a8",
        "name": "MSSQL",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "    SELECT TOP (100) 'Eixo B' as COMPLEMENT, BFC_TIMESTAMP, DATAPOINT_Corrente, DATAPOINT_TemperaturaMotor, DATAPOINT_Torque\r\n      FROM [bfc].[dbo].[DATASET_Eixo_B]\r\n\t   WHERE [BFC_SOURCE_ID]=(SELECT ID FROM [bfc].[dbo].[bfc_sources] WHERE RIGHT([BFC_CLIENT_ID],6)='{{payload.payload.id}}')\r\nUNION ALL\r\n    SELECT TOP (100) 'Eixo Magazine' as COMPLEMENT, BFC_TIMESTAMP, DATAPOINT_Corrente, DATAPOINT_TemperaturaMotor, DATAPOINT_Torque\r\n      FROM [bfc].[dbo].[DATASET_Eixo_Magazine]\r\n\t   WHERE [BFC_SOURCE_ID]=(SELECT ID FROM [bfc].[dbo].[bfc_sources] WHERE RIGHT([BFC_CLIENT_ID],6)='{{payload.payload.id}}')\r\nUNION ALL\r\n    SELECT TOP (100) 'Eixo Spindle' as COMPLEMENT, BFC_TIMESTAMP, DATAPOINT_Corrente, DATAPOINT_TemperaturaMotor, DATAPOINT_Torque\r\n      FROM [bfc].[dbo].[DATASET_Eixo_Spindle]\r\n\t   WHERE [BFC_SOURCE_ID]=(SELECT ID FROM [bfc].[dbo].[bfc_sources] WHERE RIGHT([BFC_CLIENT_ID],6)='{{payload.payload.id}}')\r\nUNION ALL\r\n    SELECT TOP (100) 'Eixo X' as COMPLEMENT, BFC_TIMESTAMP, DATAPOINT_Corrente, DATAPOINT_TemperaturaMotor, DATAPOINT_Torque\r\n      FROM [bfc].[dbo].[DATASET_Eixo_X]\r\n\t   WHERE [BFC_SOURCE_ID]=(SELECT ID FROM [bfc].[dbo].[bfc_sources] WHERE RIGHT([BFC_CLIENT_ID],6)='{{payload.payload.id}}')\r\nUNION ALL\r\n    SELECT TOP (100) 'Eixo Y' as COMPLEMENT, BFC_TIMESTAMP, DATAPOINT_Corrente, DATAPOINT_TemperaturaMotor, DATAPOINT_Torque\r\n      FROM [bfc].[dbo].[DATASET_Eixo_Y]\r\n\t   WHERE [BFC_SOURCE_ID]=(SELECT ID FROM [bfc].[dbo].[bfc_sources] WHERE RIGHT([BFC_CLIENT_ID],6)='{{payload.payload.id}}')\r\nUNION ALL\r\n    SELECT TOP (100) 'Eixo Z' as COMPLEMENT, BFC_TIMESTAMP, DATAPOINT_Corrente, DATAPOINT_TemperaturaMotor, DATAPOINT_Torque\r\n      FROM [bfc].[dbo].[DATASET_Eixo_Z]\r\n\t   WHERE [BFC_SOURCE_ID]=(SELECT ID FROM [bfc].[dbo].[bfc_sources] WHERE RIGHT([BFC_CLIENT_ID],6)='{{payload.payload.id}}')\r\n  ORDER BY [BFC_TIMESTAMP] DESC",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "parseMustache": true,
        "params": [],
        "x": 1790,
        "y": 310,
        "wires": [
            [
                "9ea398c19d05c980",
                "f69d99a8d93faed1"
            ]
        ]
    },
    {
        "id": "89fc7ec86b89e887",
        "type": "debug",
        "z": "db17a995a09e80d5",
        "g": "f1b091c120a3648f",
        "name": "WS Receive",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1800,
        "y": 150,
        "wires": []
    },
    {
        "id": "e7f128c68361411f",
        "type": "switch",
        "z": "db17a995a09e80d5",
        "g": "f1b091c120a3648f",
        "name": "",
        "property": "payload.payload.assetType",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Equipment",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Location",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1550,
        "y": 310,
        "wires": [
            [
                "914e5fada4202248",
                "dc7435824a755001"
            ],
            []
        ]
    },
    {
        "id": "dc7435824a755001",
        "type": "debug",
        "z": "db17a995a09e80d5",
        "g": "f1b091c120a3648f",
        "name": "WS Switch",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1800,
        "y": 270,
        "wires": []
    },
    {
        "id": "703621f98d52f91f",
        "type": "comment",
        "z": "db17a995a09e80d5",
        "g": "cb23c87fddd6df73",
        "name": "Integração Arkmeds <> SQL Server - Dados em Tempo Real",
        "info": "",
        "x": 1470,
        "y": 70,
        "wires": []
    },
    {
        "id": "f69d99a8d93faed1",
        "type": "function",
        "z": "db17a995a09e80d5",
        "g": "f1b091c120a3648f",
        "name": "function",
        "func": "\nlet seriesData = {};\n\nmsg.payload.forEach(item => {\n    Object.keys(item).forEach(key => {\n        if (key.startsWith(\"DATAPOINT_\") || key === \"Torque\") {\n            let seriesKey = `${item.COMPLEMENT} ${key}`;\n            if (!seriesData[seriesKey]) {\n                seriesData[seriesKey] = [];\n            }\n            seriesData[seriesKey].push({\n                timeStamp: item.BFC_TIMESTAMP,\n                value: item[key]\n            });\n        }\n    });\n});\n\nlet formattedPayload = {\n    requestInfo: msg.ws.payload.requestInfo,\n    seriesData: Object.keys(seriesData).map(key => ({\n        key: key,\n        points: seriesData[key]\n    }))\n};\n\nmsg.payload = formattedPayload;\n\nmsg.topic = 'post_App';\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1790,
        "y": 370,
        "wires": [
            [
                "8ad7b9441779d0c2",
                "99d0a9ec12b85135"
            ]
        ]
    },
    {
        "id": "8ad7b9441779d0c2",
        "type": "debug",
        "z": "db17a995a09e80d5",
        "g": "f1b091c120a3648f",
        "name": "WS Function",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2050,
        "y": 370,
        "wires": []
    },
    {
        "id": "bb9cf10b7ccb78ce",
        "type": "debug",
        "z": "db17a995a09e80d5",
        "g": "f1b091c120a3648f",
        "name": "WS Json",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1790,
        "y": 230,
        "wires": []
    },
    {
        "id": "94ad1891c3a7c24c",
        "type": "json",
        "z": "db17a995a09e80d5",
        "g": "f1b091c120a3648f",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1550,
        "y": 230,
        "wires": [
            [
                "2a27c023db2018c4",
                "bb9cf10b7ccb78ce"
            ]
        ]
    },
    {
        "id": "99d0a9ec12b85135",
        "type": "http request",
        "z": "db17a995a09e80d5",
        "g": "f1b091c120a3648f",
        "name": "post_App",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://editor.mark.expert:1880/mwm",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1790,
        "y": 410,
        "wires": [
            [
                "6fcf0937c3b8864d",
                "b4d018291ef29b0f"
            ]
        ]
    },
    {
        "id": "6fcf0937c3b8864d",
        "type": "debug",
        "z": "db17a995a09e80d5",
        "g": "f1b091c120a3648f",
        "name": "WS HTTP Request",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2070,
        "y": 410,
        "wires": []
    },
    {
        "id": "2a27c023db2018c4",
        "type": "function",
        "z": "db17a995a09e80d5",
        "g": "f1b091c120a3648f",
        "name": "function",
        "func": "\nmsg.ws = msg.payload;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1540,
        "y": 270,
        "wires": [
            [
                "e7f128c68361411f"
            ]
        ]
    },
    {
        "id": "769155e879bb88f3",
        "type": "websocket out",
        "z": "db17a995a09e80d5",
        "g": "4d11a8aeb7a45d28",
        "name": "",
        "server": "",
        "client": "966fdd501622374e",
        "x": 2020,
        "y": 750,
        "wires": []
    },
    {
        "id": "990091ac3266acbe",
        "type": "inject",
        "z": "db17a995a09e80d5",
        "d": true,
        "g": "4d11a8aeb7a45d28",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"Teste\":true}",
        "payloadType": "json",
        "x": 1370,
        "y": 750,
        "wires": [
            [
                "e1ad605f4133035d"
            ]
        ]
    },
    {
        "id": "e1ad605f4133035d",
        "type": "MSSQL",
        "z": "db17a995a09e80d5",
        "g": "4d11a8aeb7a45d28",
        "mssqlCN": "df8c0b88.91b0a8",
        "name": "",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "    SELECT TOP (100) 'X' as EIXO,BFC_TIMESTAMP,DATAPOINT_Corrente,DATAPOINT_TemperaturaMotor,DATAPOINT_Torque\r\n      FROM [bfc].[dbo].[DATASET_Eixo_X]\r\n\t WHERE [BFC_SOURCE_ID]=(SELECT ID FROM [bfc].[dbo].[bfc_sources] WHERE RIGHT([BFC_CLIENT_ID],6)='M00456')\r\nUNION ALL\r\n    SELECT TOP (100) 'Z' as eixo,BFC_TIMESTAMP,DATAPOINT_Corrente,DATAPOINT_TemperaturaMotor,DATAPOINT_Torque\r\n      FROM [bfc].[dbo].[DATASET_Eixo_Z]\r\n\t WHERE [BFC_SOURCE_ID]=(SELECT ID FROM [bfc].[dbo].[bfc_sources] WHERE RIGHT([BFC_CLIENT_ID],6)='M00456')\r\n  ORDER BY [BFC_TIMESTAMP] DESC",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "parseMustache": true,
        "params": [],
        "x": 1560,
        "y": 750,
        "wires": [
            [
                "82d10a9b5efbe421",
                "dfc78b8c3672bdf9"
            ]
        ]
    },
    {
        "id": "82d10a9b5efbe421",
        "type": "debug",
        "z": "db17a995a09e80d5",
        "g": "4d11a8aeb7a45d28",
        "name": "debug 10",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1780,
        "y": 810,
        "wires": []
    },
    {
        "id": "ef986c57344de299",
        "type": "function",
        "z": "db17a995a09e80d5",
        "g": "4d11a8aeb7a45d28",
        "name": "function",
        "func": "msg.payload = {\n\n    id: \"M00456\",\n    assetType: \"Equipment\",\n    timeFrame: {\n        dataInicio: \"2024-01-01\",\n        dataFim: \"2024-01-10\"\n    \n    }\n\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1480,
        "y": 690,
        "wires": [
            [
                "bf450a92e0b12d85",
                "c375ee7f7d70d8b1"
            ]
        ]
    },
    {
        "id": "7ca3be1989278656",
        "type": "inject",
        "z": "db17a995a09e80d5",
        "d": true,
        "g": "4d11a8aeb7a45d28",
        "name": "inject",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1350,
        "y": 690,
        "wires": [
            [
                "ef986c57344de299"
            ]
        ]
    },
    {
        "id": "bf450a92e0b12d85",
        "type": "debug",
        "z": "db17a995a09e80d5",
        "g": "4d11a8aeb7a45d28",
        "name": "WS Receive Function",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1680,
        "y": 650,
        "wires": []
    },
    {
        "id": "dfc78b8c3672bdf9",
        "type": "json",
        "z": "db17a995a09e80d5",
        "g": "4d11a8aeb7a45d28",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1770,
        "y": 750,
        "wires": [
            [
                "769155e879bb88f3"
            ]
        ]
    },
    {
        "id": "c375ee7f7d70d8b1",
        "type": "websocket out",
        "z": "db17a995a09e80d5",
        "g": "4d11a8aeb7a45d28",
        "name": "",
        "server": "",
        "client": "966fdd501622374e",
        "x": 1740,
        "y": 690,
        "wires": []
    },
    {
        "id": "c80f2b2ecd9c93ca",
        "type": "comment",
        "z": "db17a995a09e80d5",
        "g": "02520d58c819c2fb",
        "name": "Integração Arkmeds <> SAP - Criação e Encerramento de Nota e Ordem PM",
        "info": "",
        "x": 320,
        "y": 70,
        "wires": []
    },
    {
        "id": "38e9249afccb2733",
        "type": "http in",
        "z": "db17a995a09e80d5",
        "g": "4d11a8aeb7a45d28",
        "name": "",
        "url": "/mwm",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 1350,
        "y": 830,
        "wires": [
            [
                "0b19777c5cf447cb",
                "a1a466a3f1b34390"
            ]
        ]
    },
    {
        "id": "0b19777c5cf447cb",
        "type": "debug",
        "z": "db17a995a09e80d5",
        "g": "4d11a8aeb7a45d28",
        "name": "debug 7",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1520,
        "y": 870,
        "wires": []
    },
    {
        "id": "a1a466a3f1b34390",
        "type": "http response",
        "z": "db17a995a09e80d5",
        "g": "4d11a8aeb7a45d28",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1510,
        "y": 830,
        "wires": []
    },
    {
        "id": "cfe7a5ad07132705",
        "type": "http request",
        "z": "db17a995a09e80d5",
        "g": "4d11a8aeb7a45d28",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://editor.mark.expert:1880/mwm",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1550,
        "y": 930,
        "wires": [
            [
                "77ab8fe446e283e1"
            ]
        ]
    },
    {
        "id": "83d2937a7d258271",
        "type": "inject",
        "z": "db17a995a09e80d5",
        "d": true,
        "g": "4d11a8aeb7a45d28",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"Teste\":true}",
        "payloadType": "json",
        "x": 1370,
        "y": 930,
        "wires": [
            [
                "cfe7a5ad07132705"
            ]
        ]
    },
    {
        "id": "77ab8fe446e283e1",
        "type": "debug",
        "z": "db17a995a09e80d5",
        "g": "4d11a8aeb7a45d28",
        "name": "debug 8",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1720,
        "y": 930,
        "wires": []
    },
    {
        "id": "b5299a710758fbf8",
        "type": "json",
        "z": "db17a995a09e80d5",
        "g": "c3a65364ba478214",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 330,
        "y": 260,
        "wires": [
            [
                "5035fe08c29ec737",
                "e0f3c5f9d4a5f982"
            ]
        ]
    },
    {
        "id": "e7395d9dea27d55c",
        "type": "function",
        "z": "db17a995a09e80d5",
        "g": "c3a65364ba478214",
        "name": "body",
        "func": "var payload = msg.payload;\nvar body = payload.body;\n\n//msg.payload.body.data_criacao = '19/08/2022' //msg.payload.body.data_criacao.split(' ')[1].substr(20, 0);\n\n//var data_criacao = msg.payload.body.data_criacao\n\n//msg.payload.body.data_criacao = data_criacao.split(' ')[0].substr(0, 10);\n//msg.payload.body.data_criacao = data_criacao.split(' ')[1].substr(0, 10);\n\nvar newMsg = { payload: msg.payload.body.replace(\"os.\", \"os_\") };\n\n//msg.payload.data_fim_avaria.replace(\"&#x2F;\", \"/\");\n\n//var newMsg = { payload: msg.payload.body.data_criacao.substring(20, 0) };\n\nmsg.topic = 'webhookrelay'; \n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 220,
        "wires": [
            [
                "b5299a710758fbf8",
                "07e6d4a101079a25"
            ]
        ]
    },
    {
        "id": "c12063e17a1eba5e",
        "type": "debug",
        "z": "db17a995a09e80d5",
        "g": "c3a65364ba478214",
        "name": "WebHookRelay",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 580,
        "y": 180,
        "wires": []
    },
    {
        "id": "09a9bd674942e742",
        "type": "http request",
        "z": "db17a995a09e80d5",
        "g": "c3a65364ba478214",
        "name": "get_Order",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://mwm.arkmeds.com/api/v3/ordem_servico/{{orderWebHook.id}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "other",
                "keyValue": "Authorization",
                "valueType": "other",
                "valueValue": "JWT eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImZlcm5hbmRvLnZlbnR1cm9zb0BuYXZpc3Rhci5jb20uYnIiLCJ1c2VyX2lkIjo1LCJlbWFpbCI6ImZlcm5hbmRvLnZlbnR1cm9zb0BuYXZpc3Rhci5jb20uYnIiLCJleHAiOjE2NjUwNzE3OTN9.kV1bgUSxx15B1LjyAEmeis3vGwdtoUuJZzirwY_YY0g"
            }
        ],
        "x": 320,
        "y": 340,
        "wires": [
            [
                "1a49c2783d2d52e5",
                "50eb21b9f678c77c",
                "6dd750488e297ca9"
            ]
        ]
    },
    {
        "id": "5035fe08c29ec737",
        "type": "function",
        "z": "db17a995a09e80d5",
        "g": "c3a65364ba478214",
        "name": "orderWebHook",
        "func": "\nmsg.orderWebHook = msg.payload;\n\nmsg.topic = 'get_Order';\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 300,
        "wires": [
            [
                "09a9bd674942e742",
                "7564baec94258c76"
            ]
        ]
    },
    {
        "id": "8771c0ac3797dc34",
        "type": "catch",
        "z": "db17a995a09e80d5",
        "g": "bd94eaecd1098066",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 140,
        "y": 1960,
        "wires": [
            [
                "1a341ff46a8e19c0",
                "a615625fd1bea032"
            ]
        ]
    },
    {
        "id": "a615625fd1bea032",
        "type": "debug",
        "z": "db17a995a09e80d5",
        "g": "bd94eaecd1098066",
        "name": "catch_Errors",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 352,
        "y": 2000,
        "wires": []
    },
    {
        "id": "1a341ff46a8e19c0",
        "type": "function",
        "z": "db17a995a09e80d5",
        "g": "bd94eaecd1098066",
        "name": "function_Error",
        "func": "\nmsg.payload = msg.error;\n\nreturn msg;\t",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 1960,
        "wires": [
            [
                "3ae636b17db0f4ec",
                "935180ee345666d1",
                "6301eb4da85ccffb",
                "0e594c57ce43e7b1",
                "c2d46ced07fe8625"
            ]
        ]
    },
    {
        "id": "3ae636b17db0f4ec",
        "type": "MSSQL",
        "z": "db17a995a09e80d5",
        "g": "bd94eaecd1098066",
        "mssqlCN": "df8c0b88.91b0a8",
        "name": "tb_NodeRed_Logs",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": "0",
        "query": "\r\n        INSERT INTO [Indicadores].[DBO].[tb_NodeRed_Logs]\r\n        VALUES ('Node-RED',\r\n                REPLACE('{{payload.message}}','&#39;',''''),\r\n                '{{payload.source.type}}',\r\n                '{{payload.source.name}}',\r\n                '{{payload.source.count}}',\r\n                'Servidor Node-RED',\r\n                GETDATE(),\r\n                'spnodered');            ",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "parseMustache": true,
        "params": [],
        "x": 620,
        "y": 2000,
        "wires": [
            []
        ]
    },
    {
        "id": "f51b36177a2b98f0",
        "type": "webhookrelay",
        "z": "db17a995a09e80d5",
        "g": "c3a65364ba478214",
        "buckets": "SAP",
        "x": 162,
        "y": 180,
        "wires": [
            [
                "e7395d9dea27d55c",
                "ac4220f3a9f53107",
                "c12063e17a1eba5e"
            ]
        ],
        "outputLabels": [
            "Recebimento CMMS"
        ],
        "info": "**Webhook Relay**\r\n\r\n\tPacote: node-red-contrib-webhookrelay\r\n\r\n\tKey: 1bbd6cbf-2fdd-43ad-a28c-1b6d9f190079\r\n    Secret: dbVB371qRvTi"
    },
    {
        "id": "1a49c2783d2d52e5",
        "type": "function",
        "z": "db17a995a09e80d5",
        "g": "c3a65364ba478214",
        "name": "orderRequest",
        "func": "\nmsg.orderRequest = msg.payload;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 380,
        "wires": [
            [
                "842b2a23a7b39b20",
                "1a9382724de651ed"
            ]
        ]
    },
    {
        "id": "94fbe4ab44b81958",
        "type": "http request",
        "z": "db17a995a09e80d5",
        "g": "1dc7c2499547b265",
        "name": "get_User_1",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://mwm.arkmeds.com/api/v4/usuario/{{orderRequest.responsavel}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "other",
                "keyValue": "Authorization",
                "valueType": "other",
                "valueValue": "JWT eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImZlcm5hbmRvLnZlbnR1cm9zb0Btd20uY29tLmJyIiwidXNlcl9pZCI6NDEsImVtYWlsIjoiZmVybmFuZG8udmVudHVyb3NvQG13bS5jb20uYnIiLCJleHAiOjE2NzQ4NDU2OTh9.DcxHhB2fgaw4r5styA4G16NmKw3xS26t5xy_JvYHQmk"
            }
        ],
        "x": 310,
        "y": 680,
        "wires": [
            [
                "1aaf9776e7165aa8",
                "59e2abc8575e2f1a",
                "1e1c10d2161f2f04"
            ]
        ],
        "info": "Token do Mark"
    },
    {
        "id": "1aaf9776e7165aa8",
        "type": "function",
        "z": "db17a995a09e80d5",
        "g": "1dc7c2499547b265",
        "name": "user",
        "func": "\nmsg.user = msg.payload;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 720,
        "wires": [
            [
                "04d42251bbee0f88",
                "40c06b6165282145"
            ]
        ]
    },
    {
        "id": "bfe7ac7469a154a8",
        "type": "debug",
        "z": "db17a995a09e80d5",
        "g": "1560058f244ee20c",
        "name": "post_SAP_Criar",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 1130,
        "wires": []
    },
    {
        "id": "c7d142042721a53f",
        "type": "http request",
        "z": "db17a995a09e80d5",
        "g": "847899c9c153b13a",
        "name": "post_SAP_Fechar",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://pi.mwm.com.br/RESTAdapter/02NotaOrdemAlteracao",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "basic",
        "senderr": false,
        "headers": [],
        "x": 260,
        "y": 1480,
        "wires": [
            [
                "fb4a60e5d145c094",
                "986c7569121fc47f",
                "b279171d10da1723"
            ]
        ],
        "info": "---\r\nAmbiente de Desenvolvimento para testes de integração do aplicativo da Arkmeds com o SAP\r\n---\r\n\r\nAbaixo seguem os dados técnicos de acesso ao serviço REST JSON, sendo que, num primeiro momento, o serviço estará disponível somente nos ambientes de desenvolvimento (DEV) e qualidade (QAS):\r\n\r\n    Endpoint(DEV): https://pod.mwm.com.br:50000/RESTAdapter/NotificationAndOrderCreate\r\n    Endpoint(QAS): https://pides.mwm.com.br/RESTAdapter/NotificationAndOrderCreate\r\n    Endpoint(PRD): https://pop.mwm.com.br:50200/RESTAdapter/NotificationAndOrderCreate\r\n\r\n    Usuário (para todos os ambientes): INTARKMEDS\r\n    Senha (para todos os ambientes): 99QCDpAj\r\n"
    },
    {
        "id": "af3f7a1f9400afdc",
        "type": "http request",
        "z": "db17a995a09e80d5",
        "g": "1560058f244ee20c",
        "name": "post_SAP_Criar",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://pi.mwm.com.br/RESTAdapter/01NotaOrdemCriacao",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "basic",
        "senderr": false,
        "headers": [],
        "x": 270,
        "y": 1130,
        "wires": [
            [
                "9ac50c232d8be377",
                "bfe7ac7469a154a8",
                "ac7b93be9728a08a"
            ]
        ],
        "info": "---\r\nAmbiente de Produção para a integração do aplicativo da Arkmeds com o SAP\r\n---\r\n\r\nAbaixo seguem os dados técnicos de acesso ao serviço REST JSON, sendo que, num primeiro momento, o serviço estará disponível somente nos ambientes de desenvolvimento (DEV) e qualidade (QAS):\r\n\r\n    Endpoint(DEV): https://pod.mwm.com.br:50000/RESTAdapter/NotificationAndOrderCreate\r\n    Endpoint(QAS): https://pides.mwm.com.br/RESTAdapter/NotificationAndOrderCreate\r\n    Endpoint(PRD): https://pop.mwm.com.br:50200/RESTAdapter/NotificationAndOrderCreate\r\n\r\n    Usuário (para todos os ambientes): INTARKMEDS\r\n    Senha (para todos os ambientes): 99QCDpAj\r\n"
    },
    {
        "id": "40c06b6165282145",
        "type": "function",
        "z": "db17a995a09e80d5",
        "g": "1dc7c2499547b265",
        "name": "payload_SAP_Fechar",
        "func": "\n//apontamento de horas\n\n    var item = [];\n\n        if (msg.orderRequest.horas_trabalhadas == \"\") {\n            item = \"\";\n        }\n        else { \n\n            for (let i = msg.orderRequest.horas_trabalhadas.length - 1; i >= 0; i--) {\n\n                const data_hora_ini = new Date(msg.orderRequest.horas_trabalhadas[i].data_hora_inicio * 1000); \n                    data_hora_ini.setHours(data_hora_ini.getHours() - 3);         \n\n                    var data_ini = data_hora_ini.getUTCDate().toString().padStart(2, '0')  + '/' + (data_hora_ini.getUTCMonth() + 1).toString().padStart(2, '0') + '/' + data_hora_ini.getUTCFullYear();\n                    var hora_ini = (data_hora_ini.getUTCHours()).toString().padStart(2, '0') + ':' + (data_hora_ini.getUTCMinutes()).toString().padStart(2, '0') + ':' + (data_hora_ini.getUTCSeconds()).toString().padStart(2, '0');\n\n                const data_hora_fim = new Date(msg.orderRequest.horas_trabalhadas[i].tempo_fechamento * 1000);\n                    data_hora_fim.setHours(data_hora_fim.getHours() - 3);\n\n                    var data_fim = data_hora_fim.getUTCDate().toString().padStart(2, '0')  + '/' + (data_hora_fim.getUTCMonth() + 1).toString().padStart(2, '0') + '/' + data_hora_fim.getUTCFullYear();\n                    var hora_fim = (data_hora_fim.getUTCHours()).toString().padStart(2, '0') + ':' + (data_hora_fim.getUTCMinutes()).toString().padStart(2, '0') + ':' + (data_hora_fim.getUTCSeconds()).toString().padStart(2, '0');\n\n                var re = new String(msg.orderRequest.horas_trabalhadas[i].usuario);\n\n                var ct = new String(msg.orderRequest.horas_trabalhadas[i].usuario);\n\n                item.push(\n                    {\n                        \"confirm_data_inicio_trabalho\": data_ini,\n                        \"confirm_hora_inicio_trabalho\": hora_ini,\n                        \"confirm_data_fim_trabalho\": data_fim,\n                        \"confirm_hora_fim_trabalho\": hora_fim,\n                        \"confirm_centro_trabalho\": ct,\n                        \"confirm_centro_centro_trabalho\": msg.informacaoPadrao.confirm_centro_centro_trabalho,\n                        \"confirm_numero_pessoal\": re\n                    })\n                };\n            }\n\n\n//confirmações de apontamento de horas\n\n    msg.apontamentos = { \"qtdArray\": item.length - 1,\n                        \"qtdLoop\": - 1 };\n\n\n//centro de trabalho\n\n    var centrab\n        \n        if (msg.orderRequest.quadro_trabalho == null) { \n            centrab = \"\";\n        } else {\n            centrab = msg.orderRequest.quadro_trabalho.descricao.split(' - ')[1];\n        }\n\n\n//descrição da situação\n\n    var descrSituacao\n\n        if (msg.orderWebHook.os_observacoes == \"\") {\n            descrSituacao = \"\";\n        } else {\n            descrSituacao = msg.orderWebHook.os_observacoes.split(/\\r?\\n/);\n        }\n\n\n//notificador\n\n    var notificador\n\n        if (msg.orderRequest.responsavel_abertura.nome == null ||\n            msg.orderRequest.responsavel_abertura.nome == undefined ||\n            msg.orderRequest.responsavel_abertura.nome == \"\" ||\n            msg.orderRequest.responsavel_abertura.nome.length == 0) {\n            notificador = \"CHAMADO\";\n        } else {\n            notificador = msg.orderRequest.responsavel_abertura.nome\n        }\n\n\n//histórico\n\n    var historico = \"Causa: \" + msg.orderWebHook.origem_problema + \"\\n\" +\n                    \"Efeito: \" + msg.orderWebHook.problema_relatado + \"\\n\" +\n                    \"Ação: \" + msg.orderWebHook.descricao_servico;\n\n        historico = historico.split(\"\\n\");\n\n\n//payload SAP\nmsg.payloadSAP = {\n\n    \"documento_arkmeds\": msg.orderWebHook.numero,\n    \"tipo_de_nota\": msg.informacaoPadrao.tipo_de_nota,\n    \"texto_breve\": msg.orderWebHook.origem_problema,\n\n    \"texto_longo_situacao\":\n    {\n        \"linha\":\n            [\n                descrSituacao\n            ]\n    },\n\n    \"notificador\": notificador,\n    \"equipamento\": msg.orderRequest.equipamento.identificacao,\n    \"grupo_planejamento\": \"210\",   // padrão na abertura para o SAP aceitar a criação da Nota e Ordem PM\n    \"centro_grupo_planejamento\": msg.informacaoPadrao.centro_grupo_planejamento,\n    \"centro_trabalho\": centrab,\n    \"centro_centro_trabalho\": msg.informacaoPadrao.centro_centro_trabalho,\n    \"prioridade\": msg.orderRequest.prioridade.descricao,\n    \"parada\": msg.orderRequest.tipo_criticidade,\n    \"data_inicio_avaria\": msg.orderWebHook.data_criacao,\n    \"hora_inicio_avaria\": msg.orderWebHook.hora_criacao,\n    \"data_fim_avaria\": msg.orderWebHook.data_fim_avaria,\n    \"hora_fim_avaria\": msg.orderWebHook.hora_fim_avaria,\n    \"item_texto\": msg.orderWebHook.problema_relatado,\n    \"item_texto_causa\": msg.orderWebHook.origem_problema,\n\n    \"acao_historico\":\n    {\n        \"texto_acao\": msg.informacaoPadrao.texto_acao,\n        \"historico_texto_longo\":\n        {\n            \"linha\":\n                [\n                    historico\n                ]\n        }\n    },\n\n    \"tipo_ordem\": msg.informacaoPadrao.tipo_ordem,\n    \"numero_pessoal\": msg.user.crea,\n\n    \"confirmacoes\":\n    {\n        item\n    }\n\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 760,
        "wires": [
            [
                "371f9a81523929f0",
                "cfdd64a07739c594"
            ]
        ]
    },
    {
        "id": "371f9a81523929f0",
        "type": "function",
        "z": "db17a995a09e80d5",
        "g": "1d5633e00cc525b0",
        "name": "apontamentos",
        "func": "\nmsg.apontamentos.qtdLoop = msg.apontamentos.qtdLoop + 1;\n\nif (msg.payloadSAP.confirmacoes.item == \"\") {\n    msg.apontamentos.userID = null;\n} else {\n    msg.apontamentos.userID = msg.payloadSAP.confirmacoes.item[msg.apontamentos.qtdLoop].confirm_numero_pessoal;\n}\n\nmsg.topic = 'get_User_2'; \n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 860,
        "wires": [
            [
                "d68eec13861d8d10"
            ]
        ]
    },
    {
        "id": "a14e65abac3dee4f",
        "type": "http request",
        "z": "db17a995a09e80d5",
        "g": "1d5633e00cc525b0",
        "name": "get_User_2",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://mwm.arkmeds.com/api/v4/usuario/{{apontamentos.userID}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "other",
                "keyValue": "Authorization",
                "valueType": "other",
                "valueValue": "JWT eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImZlcm5hbmRvLnZlbnR1cm9zb0Btd20uY29tLmJyIiwidXNlcl9pZCI6NDEsImVtYWlsIjoiZmVybmFuZG8udmVudHVyb3NvQG13bS5jb20uYnIiLCJleHAiOjE2NzQ4NDU2OTh9.DcxHhB2fgaw4r5styA4G16NmKw3xS26t5xy_JvYHQmk"
            }
        ],
        "x": 440,
        "y": 880,
        "wires": [
            [
                "ecec19c7df953f7b",
                "aae46db9be628f16",
                "35b3454c4c10de1c"
            ]
        ],
        "info": "Token do Mark"
    },
    {
        "id": "ecec19c7df953f7b",
        "type": "function",
        "z": "db17a995a09e80d5",
        "g": "1d5633e00cc525b0",
        "name": "payloadApontamentos",
        "func": "\nif (msg.apontamentos.userID == null) {\n    msg.payloadSAP.confirmacoes.item = \"\";\n} else {\n    msg.payloadSAP.confirmacoes.item[msg.apontamentos.qtdLoop].confirm_numero_pessoal = msg.payload.crea\n    msg.payloadSAP.confirmacoes.item[msg.apontamentos.qtdLoop].confirm_centro_trabalho = msg.payload.portaria\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 910,
        "wires": [
            [
                "6a20ce62affdb252",
                "59ba2ec1a2f362b3"
            ]
        ]
    },
    {
        "id": "6a20ce62affdb252",
        "type": "switch",
        "z": "db17a995a09e80d5",
        "g": "1d5633e00cc525b0",
        "name": "",
        "property": "apontamentos.qtdLoop",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lt",
                "v": "apontamentos.qtdArray",
                "vt": "msg"
            },
            {
                "t": "gte",
                "v": "apontamentos.qtdArray",
                "vt": "msg"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 812,
        "y": 910,
        "wires": [
            [
                "5fbe52198c763185"
            ],
            [
                "269670dde77a5611"
            ]
        ]
    },
    {
        "id": "222df44bc87cd841",
        "type": "link in",
        "z": "db17a995a09e80d5",
        "g": "1d5633e00cc525b0",
        "name": "link in confirmacoesLoop",
        "links": [
            "5fbe52198c763185",
            "bc3286c7e1534c4d"
        ],
        "x": 95,
        "y": 860,
        "wires": [
            [
                "371f9a81523929f0"
            ]
        ]
    },
    {
        "id": "5fbe52198c763185",
        "type": "link out",
        "z": "db17a995a09e80d5",
        "g": "1d5633e00cc525b0",
        "name": "link out confirmacoesLoop",
        "mode": "link",
        "links": [
            "222df44bc87cd841"
        ],
        "x": 917,
        "y": 890,
        "wires": []
    },
    {
        "id": "269670dde77a5611",
        "type": "function",
        "z": "db17a995a09e80d5",
        "g": "1d5633e00cc525b0",
        "name": "payload SQL",
        "func": "\nmsg.payloadSQL = msg.payloadSAP;\n\nmsg.payloadSQL.id = msg.orderRequest.id;\nmsg.payloadSQL.numero = msg.orderRequest.numero;\n\nmsg.payloadSQL.mensagemIntegracao = \"OS: \" + msg.orderRequest.numero + \" ID: \" + msg.orderRequest.id + \" encerrada no SAP.\";\n\nmsg.payloadSQL.summary = \"\";\n\nmsg.payload = msg.payloadSAP;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 972,
        "y": 930,
        "wires": [
            [
                "2667c05d09220a3c",
                "d5d440de230b3b98"
            ]
        ]
    },
    {
        "id": "e19b64dccce24d25",
        "type": "MSSQL",
        "z": "db17a995a09e80d5",
        "g": "847899c9c153b13a",
        "mssqlCN": "df8c0b88.91b0a8",
        "name": "sql",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": "0",
        "query": "\r\n\tINSERT INTO [Indicadores].[DBO].[tbNM_Arkmeds] (statusSAP, causador, nota_pm, ordem_pm, os_arkmeds, id_os_arkmeds, tipo_de_nota, texto_breve, texto_longo_situacao, notificador, equipamento, grupo_planejamento, centro_grupo_planejamento, centro_trabalho, centro_centro_trabalho, prioridade, parada, inicio_avaria, fim_avaria, item_texto, item_texto_causa,  texto_acao, historico_texto_longo, tipo_ordem, numero_pessoal, confirmacoes, rBy, rDt, rSt)\r\n\r\n\t     VALUES ('{{payloadSQL.summary}}',\r\n                 '-',\r\n             IIF('{{payloadSQL.nota_pm}}'='',NULL,'{{payloadSQL.nota_pm}}'),\r\n             IIF('{{payloadSQL.ordem_pm}}'='',NULL,'{{payloadSQL.ordem_pm}}'),\r\n                 '{{payloadSQL.numero}}',\r\n                 '{{payloadSQL.id}}',\r\n                 '{{payloadSQL.tipo_de_nota}}', \r\n                REPLACE(REPLACE(REPLACE('{{payloadSQL.texto_breve}}','&#x2F;','/'),  '&#39;',''''),'&quot;','\"'),\r\n REPLACE(REPLACE(REPLACE('{{payloadSQL.texto_longo_situacao.linha}}',', &#x2F;n',''),'&#x3D;','='),'&quot;','\"'),\r\n                 '{{payloadSQL.notificador}}', \r\n                 '{{payloadSQL.equipamento}}', \r\n                 '{{payloadSQL.grupo_planejamento}}', \r\n                 '{{payloadSQL.centro_grupo_planejamento}}', \r\n                 '{{payloadSQL.centro_trabalho}}', \r\n                 '{{payloadSQL.centro_centro_trabalho}}', \r\n                 '{{payloadSQL.prioridade}}', \r\n                 '{{payloadSQL.parada}}', \r\n                 '{{payloadSQL.inicio_avaria}}',\r\n                 '{{payloadSQL.fim_avaria}}',\r\n       REPLACE(REPLACE('{{payloadSQL.item_texto}}','&#x2F;','/'),'&#39;',''''),\r\n REPLACE(REPLACE('{{payloadSQL.item_texto_causa}}','&#x2F;','/'),'&#39;',''''),\r\n                 '{{payloadSQL.acao_historico.texto_acao}}',\r\n REPLACE(REPLACE(REPLACE(REPLACE('{{payloadSQL.acao_historico.historico_texto_longo.linha}}','/n',CHAR(13) + CHAR(10)),', &#x2F;n',''),'&#39;',''''),'&#x2F;','/'), \r\n                 '{{payloadSQL.tipo_ordem}}',\r\n                 '{{payloadSQL.numero_pessoal}}',\r\n REPLACE(REPLACE(REPLACE('{{payloadSQL.confirmacoes.item}}','&#x2F;','/'),'/n',CHAR(13) + CHAR(10)),'&#39;',''''),\r\n                 '{{payloadSQL.rBy}}',\r\n                  GETDATE(),\r\n                 'spnodered');",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "parseMustache": true,
        "params": [],
        "x": 300,
        "y": 1600,
        "wires": [
            [
                "ded54106f6023e63"
            ]
        ]
    },
    {
        "id": "9ee4394ec7e81995",
        "type": "function",
        "z": "db17a995a09e80d5",
        "g": "847899c9c153b13a",
        "name": "converter_Fechar",
        "func": "\n//inicio e fim da avaria\n\n    function converterDataHora(data, horario) {\n        const dataPartes = data.split('/');\n        const dia = dataPartes[0];\n        const mes = dataPartes[1];\n        const ano = dataPartes[2];\n\n        const novaDataHora = `${ano}-${mes}-${dia} ${horario}`;\n\n        return novaDataHora;\n    }\n\n    const dataOriginal = msg.payloadSQL.data_inicio_avaria;\n    const horaOriginal = msg.payloadSQL.hora_inicio_avaria;\n\n    const novaDataHora = converterDataHora(dataOriginal, horaOriginal);\n\n        msg.payloadSQL.inicio_avaria = novaDataHora;\n\n    const dataOriginal2 = msg.payloadSQL.data_fim_avaria;\n    const horaOriginal2 = msg.payloadSQL.hora_fim_avaria;\n\n    const novaDataHora2 = converterDataHora(dataOriginal2, horaOriginal2);\n\n        msg.payloadSQL.fim_avaria = novaDataHora2;\n\n    msg.payloadSQL.rBy = msg.user.nome;\n\n\n//texto_longo_situacao.linha\n\n    var linha = [];\n\n        for (let i = msg.payloadSQL.texto_longo_situacao.linha.length - 1; i >= 0; i--) {\n\n            linha += linha + msg.payloadSQL.texto_longo_situacao.linha[i] + ', /n'\n\n    };\n\n    msg.payloadSQL.texto_longo_situacao.linha = linha;\n\n\n//acao_historico.historico_texto_longo\n\nvar item = [];\n\n    for (let i = msg.payloadSQL.acao_historico.historico_texto_longo.linha.length - 1; i >= 0; i--) {\n\n        item += item + msg.payloadSQL.acao_historico.historico_texto_longo.linha[i][i] + ', /n'\n\n    };\n\n    msg.payloadSQL.acao_historico.historico_texto_longo.linha = item;\n\n\n//confirmacoes.item\n\nvar confirmacoes = [];\n\n    for (let i = msg.payloadSQL.confirmacoes.item.length - 1; i >= 0; i--) {\n\n        confirmacoes += confirmacoes +\n                      \"Início do Trabalho: \" + msg.payloadSQL.confirmacoes.item[i].confirm_data_inicio_trabalho + ' ' + msg.payloadSQL.confirmacoes.item[i].confirm_hora_inicio_trabalho + ', ' +\n                         \"Fim do Trabalho: \" + msg.payloadSQL.confirmacoes.item[i].confirm_data_fim_trabalho + ' ' + msg.payloadSQL.confirmacoes.item[i].confirm_hora_fim_trabalho + ', ' +\n                      \"Centro de Trabalho: \" + msg.payloadSQL.confirmacoes.item[i].confirm_centro_trabalho + ', ' +\n            \"Centro do Centro de Trabalho: \" + msg.payloadSQL.confirmacoes.item[i].confirm_centro_centro_trabalho + ', ' +\n                                      \"RE: \" + msg.payloadSQL.confirmacoes.item[i].confirm_numero_pessoal + '/n'\n    };\n\n    msg.payloadSQL.confirmacoes.item = confirmacoes;\n\n\n// regra\n\nmsg.payloadSQL.nota_pm = \"\";\nmsg.payloadSQL.ordem_pm = \"\";\n\n    if (msg.payload.nota_pm) {\n        msg.payloadSQL.statusSAP = \"Ok\";\n        msg.payloadSQL.summary = \"Nota e Ordem PM encerrada no SAP\";\n        msg.payloadSQL.nota_pm = parseInt(msg.payload.nota_pm);\n        msg.payloadSQL.ordem_pm = parseInt(msg.payload.ordem_pm);\n        };\n\n    if (msg.payload.mensagens.item.mensagem) {\n        if (msg.payload.mensagens.item.mensagem.tipo == \"E\") {\n            msg.payloadSQL.statusSAP = \"Erro na Integração: \" + msg.payload.mensagens.item.mensagem;\n            msg.payloadSQL.summary = \"Erro na Integração: \" + msg.payload.mensagens.item.mensagem;\n        };\n    };\n\n    if (msg.payload.mensagens.item[0]) {\n        if (msg.payload.mensagens.item[0].tipo == \"E\") {\n            msg.payloadSQL.statusSAP = \"Erro na Integração: \" + msg.payload.mensagens.item[0].mensagem;\n            msg.payloadSQL.summary = \"Erro na Integração: \" + msg.payload.mensagens.item[0].mensagem;\n        };\n    };\n\n    if (msg.payload.mensagens.item[1]) {\n        if (msg.payload.mensagens.item[1].tipo == \"E\") {\n            msg.payloadSQL.statusSAP = \"Erro na Integração: \" + msg.payload.mensagens.item[0].mensagem + \". \" + msg.payload.mensagens.item[1].mensagem;\n            msg.payloadSQL.summary = \"Erro na Integração: \" + msg.payload.mensagens.item[0].mensagem + \". \" + msg.payload.mensagens.item[1].mensagem;\n        };\n    };\n\n    if (msg.payload.mensagens.item[2]) {\n        if (msg.payload.mensagens.item[2].tipo == \"E\") {\n            msg.payloadSQL.statusSAP = \"Erro na Integração: \" + msg.payload.mensagens.item[0].mensagem + \". \" + msg.payload.mensagens.item[1].mensagem + \". \" + msg.payload.mensagens.item[2].mensagem;\n            msg.payloadSQL.summary = \"Erro na Integração: \" + msg.payload.mensagens.item[0].mensagem + \". \" + msg.payload.mensagens.item[1].mensagem + \". \" + msg.payload.mensagens.item[2].mensagem;\n        };\n    };\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 1560,
        "wires": [
            [
                "de733619add88692",
                "e19b64dccce24d25",
                "98c90450f164cc67"
            ]
        ]
    },
    {
        "id": "986c7569121fc47f",
        "type": "json",
        "z": "db17a995a09e80d5",
        "g": "847899c9c153b13a",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 300,
        "y": 1520,
        "wires": [
            [
                "9ee4394ec7e81995",
                "2bea327854a95299"
            ]
        ]
    },
    {
        "id": "8bc14cba8695789b",
        "type": "link out",
        "z": "db17a995a09e80d5",
        "g": "1d5633e00cc525b0",
        "name": "link out post_Fechar_SAP",
        "mode": "link",
        "links": [
            "9fa0fcf948866254"
        ],
        "x": 1097,
        "y": 990,
        "wires": []
    },
    {
        "id": "519725c9379c8e73",
        "type": "link in",
        "z": "db17a995a09e80d5",
        "g": "1560058f244ee20c",
        "name": "link in post_Criar_SAP",
        "links": [
            "60a4af64dfb36bf9"
        ],
        "x": 93,
        "y": 1130,
        "wires": [
            [
                "af3f7a1f9400afdc"
            ]
        ]
    },
    {
        "id": "2667c05d09220a3c",
        "type": "function",
        "z": "db17a995a09e80d5",
        "g": "1d5633e00cc525b0",
        "name": "verificarPreenchimento",
        "func": "\nvar erro = \"\";\n\n                                        if (msg.payload.texto_breve.length == 0) { erro = erro + \"Origem do Problema / \"; }\n                // if (msg.payload.texto_longo_situacao.linha[0][0].length == 0) { erro = erro + \"Observações Apresentadas / \"; } //Não deve ser obrigatório.\n                                        if (msg.payload.notificador.length == 0) { erro = erro + \"Notificador / \"; }\n                                        if (msg.payload.equipamento.length == 0) { erro = erro + \"Equipamento / \"; }\n                                 if (msg.payload.grupo_planejamento.length == 0) { erro = erro + \"Tipo de Serviço / \"; }\n                                \n                                    if (msg.payload.centro_trabalho.length == 0) { erro = erro + \"Quadro de Trabalho / \"; }\n\n                                         if (msg.payload.prioridade.length == 0) { erro = erro + \"Prioridade / \"; }\n                                             if (msg.payload.parada.length == 0) { erro = erro + \"Criticidade / \"; }\n\n                                 if (msg.payload.data_inicio_avaria.length == 0) { erro = erro + \"Data de Abertura / \"; }\n                                    if (msg.payload.data_fim_avaria.length == 0) { erro = erro + \"Data de Fechamento / \"; }\n\n                                         if (msg.payload.item_texto.length == 0) { erro = erro + \"Problema Relatado (Efeito) / \"; }\n                                   if (msg.payload.item_texto_causa.length == 0) { erro = erro + \"Origem do Problema (Causa) / \"; }                                   \n                             if (msg.orderWebHook.descricao_servico.length == 0) { erro = erro + \"Descrição do Serviço (Ação) / \"; } \n\n                                     if (msg.payload.numero_pessoal.length == 0) { erro = erro + \"Número de Registro (RE do Usuário) / \"; }\n\nif (msg.payload.confirmacoes.item == \"\") {\n                                                                                   erro = erro + \"Registro de Horas / \";\n} else {\n  if (msg.payload.confirmacoes.item[0].confirm_data_inicio_trabalho.length == 0) { erro = erro + \"Data e hora de Início no Campo Registro de Horas / \"; } \n     if (msg.payload.confirmacoes.item[0].confirm_data_fim_trabalho.length == 0) { erro = erro + \"Data e hora de Fim no Campo Registro de Horas / \"; }\n       if (msg.payload.confirmacoes.item[0].confirm_centro_trabalho.length == 0) { erro = erro + \"Portaria (Oficina do Usuário) / \"; }\n        if (msg.payload.confirmacoes.item[0].confirm_numero_pessoal.length == 0) { erro = erro + \"Número de Registro (RE do Usuário) / \"; }\n};\n\nif (msg.payload.parada == \"0\") {\n    msg.payload.parada = undefined;\n};\n\nif (erro == \"\") {\n   erro = null;\n   msg.payload.verificacao = erro;\n} else {\n   msg.payload.verificacao = \"Erro no Sistema Webhook: Campo(s) sem preenchimento: \" + erro.slice(0, -3) + \".\";\n};\n\nmsg.topic = 'post_SAP_Fechar'; \n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 942,
        "y": 970,
        "wires": [
            [
                "a65080e2459d2018"
            ]
        ]
    },
    {
        "id": "a65080e2459d2018",
        "type": "switch",
        "z": "db17a995a09e80d5",
        "g": "1d5633e00cc525b0",
        "name": "",
        "property": "payload.verificacao",
        "propertyType": "msg",
        "rules": [
            {
                "t": "null"
            },
            {
                "t": "nnull"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 992,
        "y": 1010,
        "wires": [
            [
                "8bc14cba8695789b",
                "5dd0263b7cf89901"
            ],
            [
                "ebb3d95f6d0edba2"
            ]
        ]
    },
    {
        "id": "ebb3d95f6d0edba2",
        "type": "link out",
        "z": "db17a995a09e80d5",
        "g": "1d5633e00cc525b0",
        "name": "link out erro",
        "mode": "link",
        "links": [
            "16843bbcc8335ea9",
            "125ae72801562bb8"
        ],
        "x": 1097,
        "y": 1030,
        "wires": []
    },
    {
        "id": "16843bbcc8335ea9",
        "type": "link in",
        "z": "db17a995a09e80d5",
        "g": "1e353503c7d5a7f5",
        "name": "link in erro",
        "links": [
            "ebb3d95f6d0edba2",
            "1489130e6f7013ea"
        ],
        "x": 785,
        "y": 1720,
        "wires": [
            [
                "d98c67133d1d7860",
                "8fbe7a2633fdee5a",
                "fb3466a059791285",
                "bab1cf069f168b28"
            ]
        ]
    },
    {
        "id": "d98c67133d1d7860",
        "type": "MSSQL",
        "z": "db17a995a09e80d5",
        "g": "1e353503c7d5a7f5",
        "mssqlCN": "df8c0b88.91b0a8",
        "name": "insert",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": "0",
        "query": "\r\n\tINSERT INTO [Indicadores].[DBO].[tbNM_Arkmeds] (statusSAP, os_arkmeds, id_os_arkmeds, notificador, rBy, rDt, rSt)\r\n\r\n\tVALUES (REPLACE(REPLACE('{{payload.verificacao}}','&#x2F;','/'),'null',''),\r\n                    '{{payload.documento_arkmeds}}',\r\n                    '{{orderWebHook.id}}',\r\n                    '{{user.nome}}',\r\n                    '{{user.nome}}',\r\n                     GETDATE(),\r\n                    'spnodered');",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "parseMustache": true,
        "params": [],
        "x": 910,
        "y": 1740,
        "wires": [
            []
        ]
    },
    {
        "id": "3292300064ade38b",
        "type": "debug",
        "z": "db17a995a09e80d5",
        "g": "1dc7c2499547b265",
        "name": "Switch Criar",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 310,
        "y": 600,
        "wires": []
    },
    {
        "id": "6aa46ead0da450d8",
        "type": "chatbot-telegram-send",
        "z": "db17a995a09e80d5",
        "g": "b2f19ebf29b2535e",
        "bot": "3deb2ea155d454a2",
        "botProduction": "3deb2ea155d454a2",
        "track": false,
        "passThrough": false,
        "errorOutput": false,
        "outputs": 0,
        "x": 540,
        "y": 1780,
        "wires": []
    },
    {
        "id": "8fbe7a2633fdee5a",
        "type": "function",
        "z": "db17a995a09e80d5",
        "g": "1e353503c7d5a7f5",
        "name": "telegramCampoVazio",
        "func": "\nvar campoVazio = msg.payload.verificacao.replace(/ \\/ /g, \"\\n      - \");\n\n    campoVazio = campoVazio.replace(\"Campo(s) sem preenchimento: \",\"      - \");\n\n    campoVazio = campoVazio.slice(0, -1)\n\nmsg.payload = {\n    \"type\": \"message\",\n    \"chatId\": -1001938983435,\n    \"supergroupId\": -1001938983435,\n    \"transport\": \"telegram\",\n    \"content\":  \"Integração Arkmeds <> SAP\" + \"\\n\\n\" + \n                \"OS: \" + msg.payloadSQL.numero + \" ID: \" + msg.payloadSQL.id + \"\\n\" + \n                \"com campo(s) sem preenchimento:\" + \"\\n\\n\" + \n                campoVazio + \"\\n\\n\" + \n                \"Notificador: \" + msg.payloadSQL.rBy + \".\"\n\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 1660,
        "wires": [
            [
                "53078b96d697c293"
            ]
        ]
    },
    {
        "id": "826b5b89fabd6271",
        "type": "chatbot-conversation",
        "z": "db17a995a09e80d5",
        "g": "b2f19ebf29b2535e",
        "name": "",
        "botDevelopment": "3deb2ea155d454a2",
        "botProduction": "",
        "chatId": "919886719",
        "userId": "",
        "transport": "telegram",
        "x": 260,
        "y": 1780,
        "wires": [
            [
                "6aa46ead0da450d8"
            ]
        ]
    },
    {
        "id": "de733619add88692",
        "type": "switch",
        "z": "db17a995a09e80d5",
        "g": "1e353503c7d5a7f5",
        "name": "",
        "property": "payloadSQL.statusSAP",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Ok",
                "vt": "str"
            },
            {
                "t": "neq",
                "v": "Ok",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 750,
        "y": 1500,
        "wires": [
            [
                "6d253f176aab9d61",
                "448faa56970794e6"
            ],
            [
                "0478213813f2fc82",
                "f10c4a32d50d0b7c"
            ]
        ]
    },
    {
        "id": "0478213813f2fc82",
        "type": "function",
        "z": "db17a995a09e80d5",
        "g": "1e353503c7d5a7f5",
        "name": "telegramJáEnviado",
        "func": "\nvar jaEnviado\n\nif (msg.payloadSQL.statusSAP==\"Nº do documento Arkmeds já foi enviado anteriormente\") {\n    jaEnviado = \"já enviada anteriormente ao SAP.\";\n} else {\n    jaEnviado =  msg.payloadSQL.statusSAP;\n}\n\nmsg.payload = {\n    \"type\": \"message\",\n    \"chatId\": -1001938983435,\n    \"supergroupId\": -1001938983435,\n    \"transport\": \"telegram\",\n    \"content\":  \"Integração Arkmeds <> SAP\" + \"\\n\\n\" + \n                \"OS \" + msg.payloadSQL.numero + \" ID \" + msg.payloadSQL.id + \"\\n\" +\n                jaEnviado + \"\\n\\n\" + \n                \"Notificador: \" + msg.payloadSQL.rBy + \".\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 1560,
        "wires": [
            [
                "53078b96d697c293"
            ]
        ]
    },
    {
        "id": "935180ee345666d1",
        "type": "function",
        "z": "db17a995a09e80d5",
        "g": "bd94eaecd1098066",
        "name": "telegram",
        "func": "\nmsg.payload = {\n    \"type\": \"message\",\n    \"chatId\": -1001938983435,\n    \"supergroupId\": -1001938983435,\n    \"transport\": \"telegram\",\n    \"content\": \n        \"Integração Arkmeds <> SAP\" + \"\\n\\n\" + \n        msg.payload.message + \"\\n\\n\" +\n        \"Flow: Arkmeds/SAP\" + \"\\n\" +\n        \"Tipo do Nó: \" + msg.payload.source.type + \"\\n\" +\n        \"Nome do Nó: \" + msg.payload.source.name + \"\\n\" +\n        \"Quantidade: \" + msg.payload.source.count + \"\\n\\n\" +\n        \"ID OS: \" + msg.orderWebHook.id + \"\\n\" +\n        \"OS:\" + msg.orderWebHook.numero + \"\\n\\n\" +\n        \"Notificador: \" + msg.payloadSQL.notificador\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1960,
        "wires": [
            [
                "40cbc80bbf8b75ab"
            ]
        ]
    },
    {
        "id": "40cbc80bbf8b75ab",
        "type": "link out",
        "z": "db17a995a09e80d5",
        "g": "bd94eaecd1098066",
        "name": "link out telegram",
        "mode": "link",
        "links": [
            "7d9e4733eddce5f1"
        ],
        "x": 687,
        "y": 1960,
        "wires": []
    },
    {
        "id": "7d9e4733eddce5f1",
        "type": "link in",
        "z": "db17a995a09e80d5",
        "g": "b2f19ebf29b2535e",
        "name": "link in telegram",
        "links": [
            "40cbc80bbf8b75ab",
            "53078b96d697c293",
            "67e7786c62217870",
            "1df3c16da6361974",
            "c7b3596fa383aab8"
        ],
        "x": 95,
        "y": 1780,
        "wires": [
            [
                "826b5b89fabd6271"
            ]
        ]
    },
    {
        "id": "53078b96d697c293",
        "type": "link out",
        "z": "db17a995a09e80d5",
        "g": "1e353503c7d5a7f5",
        "name": "link out telegram",
        "mode": "link",
        "links": [
            "7d9e4733eddce5f1"
        ],
        "x": 1115,
        "y": 1610,
        "wires": []
    },
    {
        "id": "d68eec13861d8d10",
        "type": "switch",
        "z": "db17a995a09e80d5",
        "g": "1d5633e00cc525b0",
        "name": "",
        "property": "apontamentos.userID",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 282,
        "y": 900,
        "wires": [
            [
                "a14e65abac3dee4f"
            ],
            [
                "ecec19c7df953f7b"
            ]
        ]
    },
    {
        "id": "f10c4a32d50d0b7c",
        "type": "function",
        "z": "db17a995a09e80d5",
        "g": "1e353503c7d5a7f5",
        "name": "teamsJáEnviado",
        "func": "\nvar jaEnviado\n\nif (msg.payloadSQL.statusSAP == \"Nº do documento Arkmeds já foi enviado anteriormente\") {\n    jaEnviado = \"OS: \" + msg.payloadSQL.numero + \" ID: \" + msg.payloadSQL.id + \" já enviada anteriormente ao SAP. Notificador: \" + msg.payloadSQL.rBy + \".\";\n} else {\n    jaEnviado = \"OS: \" + msg.payloadSQL.numero + \" ID: \" + msg.payloadSQL.id + \" - \" + msg.payloadSQL.statusSAP + \" Notificador: \" + msg.payloadSQL.rBy+ \".\";\n}\n\nmsg.payload =\n\n{\n    \"@type\": \"MessageCard\",\n    \"@context\": \"http://schema.org/extensions\",\n    \"themeColor\": \"E81123\",\n    \"summary\": \"Erro: Ordem de Serviço Arkmeds\",\n    \"sections\": [{\n        \"activityTitle\": jaEnviado,\n        \"markdown\": true\n    }]\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 1520,
        "wires": [
            [
                "b99010c1793013f9"
            ]
        ]
    },
    {
        "id": "419eedf71ae600a7",
        "type": "http request",
        "z": "db17a995a09e80d5",
        "g": "b2f19ebf29b2535e",
        "name": "Teams Integração",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://mwmmotores.webhook.office.com/webhookb2/ab4a8636-e3a9-4e1f-888d-b724c28b3888@a30a5e3a-3f99-4177-acce-19a1705d07e5/IncomingWebhook/00cc6acefcfc4f9792bc770748cda454/5fc65af6-23d3-48fa-a438-cdcd73aef0f0",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "basic",
        "senderr": false,
        "headers": [],
        "x": 280,
        "y": 1700,
        "wires": [
            []
        ]
    },
    {
        "id": "cb3c7a2bd6d1af7c",
        "type": "link in",
        "z": "db17a995a09e80d5",
        "g": "b2f19ebf29b2535e",
        "name": "link in teams",
        "links": [
            "b99010c1793013f9",
            "38a3f45aa246f64e",
            "d1dfe8805aa73a50",
            "617fea66f218a570",
            "7807018acae289fc"
        ],
        "x": 95,
        "y": 1700,
        "wires": [
            [
                "419eedf71ae600a7",
                "0dc3ca5256481932"
            ]
        ]
    },
    {
        "id": "b99010c1793013f9",
        "type": "link out",
        "z": "db17a995a09e80d5",
        "g": "1e353503c7d5a7f5",
        "name": "link out teams",
        "mode": "link",
        "links": [
            "cb3c7a2bd6d1af7c"
        ],
        "x": 1115,
        "y": 1520,
        "wires": []
    },
    {
        "id": "fb3466a059791285",
        "type": "function",
        "z": "db17a995a09e80d5",
        "g": "1e353503c7d5a7f5",
        "name": "teamsCampoVazio",
        "func": "\nvar campoVazio = msg.payload.verificacao.replace(/ \\/ /g, \"\\n      - \");\n\n    campoVazio = campoVazio.replace(\"Campo(s) sem preenchimento: \", \"      - \");\n\n    campoVazio = campoVazio.slice(0, -1)\n\nmsg.payload =\n\n{\n    \"@type\": \"MessageCard\",\n    \"@context\": \"http://schema.org/extensions\",\n    \"themeColor\": \"E81123\",\n    \"summary\": \"Erro: Ordem de Serviço Arkmeds\",\n    \"sections\": [{\n        \"activityTitle\": \"OS: \" + msg.payloadSQL.numero + \" ID: \" + msg.payloadSQL.id + \" com campo(s) sem preenchimento: \" + campoVazio + \". Notificador: \" + msg.payloadSQL.rBy + \".\",\n        \"markdown\": true\n    }]\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 1700,
        "wires": [
            [
                "38a3f45aa246f64e"
            ]
        ]
    },
    {
        "id": "38a3f45aa246f64e",
        "type": "link out",
        "z": "db17a995a09e80d5",
        "g": "1e353503c7d5a7f5",
        "name": "link out teams",
        "mode": "link",
        "links": [
            "cb3c7a2bd6d1af7c"
        ],
        "x": 1115,
        "y": 1700,
        "wires": []
    },
    {
        "id": "6301eb4da85ccffb",
        "type": "function",
        "z": "db17a995a09e80d5",
        "g": "bd94eaecd1098066",
        "name": "teams",
        "func": "\nmsg.payload =\n\n{\n    \"@type\": \"MessageCard\",\n    \"@context\": \"http://schema.org/extensions\",\n    \"themeColor\": \"E81123\",\n    \"summary\": \"Erro: Plataforma Node-RED\",\n    \"sections\": [{\n        \"activityTitle\": \"Erro: Ordem de Serviço Arkmeds\",\n        \"activitySubtitle\": \"Notificação de incidente e informações adicionais.\",\n        \"activityImage\": \"https://mwm-files.s3.amazonaws.com/imagens/microsoftTeams/Erro_01.png\",\n        \"facts\": [{\n            \"name\": \"Mensagem: \",\n            \"value\": msg.payload.message\n        }, {\n            \"name\": \"Flow: \",\n            \"value\": \"Arkmeds/SAP\"\n        }, {\n            \"name\": \"Tipo do Nó: \",\n            \"value\": msg.payload.source.type\n        }, {\n            \"name\": \"Nome do Nó: \",\n            \"value\": msg.payload.source.name\n        }, {\n            \"name\": \"Quantidade: \",\n            \"value\": msg.payload.source.count\n        }, {\n            \"name\": \"ID OS: \",\n            \"value\": msg.orderWebHook.id\n        }, {\n            \"name\": \"OS: \",\n            \"value\": msg.orderWebHook.numero\n        }, {\n            \"name\": \"Notificador: \",\n            \"value\": msg.payloadSQL.notificador\n        }],\n        \"markdown\": true\n    }]\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 1920,
        "wires": [
            [
                "d1dfe8805aa73a50"
            ]
        ]
    },
    {
        "id": "d1dfe8805aa73a50",
        "type": "link out",
        "z": "db17a995a09e80d5",
        "g": "bd94eaecd1098066",
        "name": "link out teams",
        "mode": "link",
        "links": [
            "cb3c7a2bd6d1af7c"
        ],
        "x": 687,
        "y": 1920,
        "wires": []
    },
    {
        "id": "0dc3ca5256481932",
        "type": "http request",
        "z": "db17a995a09e80d5",
        "g": "b2f19ebf29b2535e",
        "name": "Outlook",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://mwmmotores.webhook.office.com/webhookb2/8f9895e6-f106-415f-93dd-2b01088d2582@a30a5e3a-3f99-4177-acce-19a1705d07e5/IncomingWebhook/3e9442ea6141424cb098c9ef04c504ed/5fc65af6-23d3-48fa-a438-cdcd73aef0f0",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "basic",
        "senderr": false,
        "headers": [],
        "x": 250,
        "y": 1740,
        "wires": [
            []
        ]
    },
    {
        "id": "98c90450f164cc67",
        "type": "debug",
        "z": "db17a995a09e80d5",
        "g": "847899c9c153b13a",
        "name": "converter Fechar",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 518,
        "y": 1560,
        "wires": []
    },
    {
        "id": "6d253f176aab9d61",
        "type": "function",
        "z": "db17a995a09e80d5",
        "g": "1e353503c7d5a7f5",
        "name": "telegramStatusOK",
        "func": "\nmsg.payload = {\n    \"type\": \"message\",\n    \"chatId\": -1001938983435,\n    \"supergroupId\": -1001938983435,\n    \"transport\": \"telegram\",\n    \"content\":  \"Integração Arkmeds <> SAP\" + \"\\n\\n\" +\n                 msg.payloadSQL.mensagemIntegracao + \"\\n\\n\" +\n                \"Nota PM: \" + parseInt(msg.payloadSQL.nota_pm) + \"\\n\" +\n                \"Ordem PM: \" + parseInt(msg.payloadSQL.ordem_pm) + \"\\n\\n\" +\n                \"Notificador: \" + msg.payloadSQL.rBy + \".\"\n    };\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 1440,
        "wires": [
            [
                "67e7786c62217870"
            ]
        ]
    },
    {
        "id": "67e7786c62217870",
        "type": "link out",
        "z": "db17a995a09e80d5",
        "g": "1e353503c7d5a7f5",
        "name": "link out telegram",
        "mode": "link",
        "links": [
            "7d9e4733eddce5f1"
        ],
        "x": 1115,
        "y": 1440,
        "wires": []
    },
    {
        "id": "448faa56970794e6",
        "type": "function",
        "z": "db17a995a09e80d5",
        "g": "1e353503c7d5a7f5",
        "name": "teamsStatusOk",
        "func": "\nmsg.payload =\n\n{\n    \"@type\": \"MessageCard\",\n    \"@context\": \"http://schema.org/extensions\",\n    \"themeColor\": \"0076D7\",\n    \"summary\": msg.payloadSQL.summary,\n    \"sections\": [{\n        \"activityTitle\": \"Ordem de Serviço\",\n        \"activitySubtitle\": \"Notificação de \" + msg.payloadSQL.summary,\n        \"activityImage\": \"https://www.sap.com/dam/application/shared/logos/sap-logo-svg.svg/sap-logo-svg.svg\",\n        \"facts\": [{\n            \"name\": \"ID OS: \",\n            \"value\": msg.payloadSQL.id\n        }, {\n            \"name\": \"OS: \",\n            \"value\": msg.payloadSQL.numero\n        }, {\n            \"name\": \"Nota PM: \",\n            \"value\": parseInt(msg.payloadSQL.nota_pm)\n        }, {\n            \"name\": \"Ordem PM: \",\n            \"value\": parseInt(msg.payloadSQL.ordem_pm)\n        }, {\n            \"name\": \"Notificador: \",\n            \"value\": msg.payloadSQL.rBy\n        }],\n        \"markdown\": true\n    }]\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 1480,
        "wires": [
            [
                "b99010c1793013f9"
            ]
        ]
    },
    {
        "id": "dfb0a888bea6b44e",
        "type": "debug",
        "z": "db17a995a09e80d5",
        "g": "bd94eaecd1098066",
        "name": "all_Errors",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 2040,
        "wires": []
    },
    {
        "id": "0e594c57ce43e7b1",
        "type": "MSSQL",
        "z": "db17a995a09e80d5",
        "g": "bd94eaecd1098066",
        "mssqlCN": "df8c0b88.91b0a8",
        "name": "tbNM_Arkmeds",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": "0",
        "query": "\r\nINSERT INTO [Indicadores].[DBO].[tbNM_Arkmeds] (statusSAP, os_arkmeds, id_os_arkmeds, notificador, rBy, rDt, rSt)\r\n\r\nVALUES (REPLACE(REPLACE('{{error.message}}','&#x2F;','/'),'null',''),\r\n                '{{orderWebHook.numero}}',\r\n                '{{orderWebHook.id}}',\r\n                '{{msg.payloadSQL.rBy}}',\r\n                '{{msg.payloadSQL.rBy}}',\r\n                GETDATE(),\r\n                'spnodered');         ",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "parseMustache": true,
        "params": [],
        "x": 610,
        "y": 2040,
        "wires": [
            [
                "dfb0a888bea6b44e"
            ]
        ]
    },
    {
        "id": "e3148e90c3127d6b",
        "type": "function",
        "z": "db17a995a09e80d5",
        "g": "1dc7c2499547b265",
        "name": "payload_SAP_Criar",
        "func": "\n//centro de trabalho\n\n    var centrab\n\n        if (msg.orderRequest.quadro_trabalho == null ||\n            msg.orderRequest.quadro_trabalho == undefined ||\n            msg.orderRequest.quadro_trabalho == \"\" ||\n            msg.orderRequest.quadro_trabalho.length == 0) {\n            centrab = \"PC05\";\n        } else {\n            centrab = msg.orderRequest.quadro_trabalho.descricao.split(' - ')[1];\n        }\n\n//notificador\n\n    var notificador\n\n        if (msg.orderRequest.responsavel_abertura.nome == null ||\n            msg.orderRequest.responsavel_abertura.nome == undefined || \n            msg.orderRequest.responsavel_abertura.nome == \"\" ||\n            msg.orderRequest.responsavel_abertura.nome.length == 0) {\n            notificador = \"CHAMADO\";\n        } else {\n            notificador = msg.orderRequest.responsavel_abertura.nome\n        }\n\n//payload - Obs.: Dados entre aspas duplas são padrões para abertura do chamado, porém no fechamento da OS os campos serão atualizados conforme ocorrência.\n\n    msg.payload = {\n\n                \"documento_arkmeds\": msg.orderRequest.numero,\n                     \"tipo_de_nota\": msg.informacaoPadrao.tipo_de_nota,\n                      \"texto_breve\": msg.orderWebHook.problema_relatado, // o correto seria: msg.orderWebHook.origem_problema, porém não é preechido a origem do problema na abertura do chamado, o mesmo é atualizado no fechamento da OS.\n                      \"equipamento\": msg.orderRequest.equipamento.identificacao,\n                      \"notificador\": notificador,\n               \"grupo_planejamento\": \"210\",   // padrão na abertura para o SAP aceitar a criação da Nota e Ordem PM\n        \"centro_grupo_planejamento\": msg.informacaoPadrao.centro_grupo_planejamento,\n                  \"centro_trabalho\": centrab,\n           \"centro_centro_trabalho\": msg.informacaoPadrao.centro_centro_trabalho,\n                       \"tipo_ordem\": msg.informacaoPadrao.tipo_ordem,\n                   \"numero_pessoal\": \"501138\" // padrão na abertura para o SAP aceitar a criação da Nota e Ordem PM\n\n    }\n\n    msg.payloadSQL = {\n\n                        \"statusSAP\": \"\",\n                          \"nota_pm\": \"\",\n                         \"ordem_pm\": \"\",\n                           \"numero\": msg.orderRequest.numero,\n                               \"id\": msg.orderRequest.id,\n               \"mensagemIntegracao\": \"OS: \" + msg.orderRequest.numero + \" ID: \" + msg.orderRequest.id + \" cadastrada no SAP.\",\n                          \"summary\": \"\",\n                     \"tipo_de_nota\": msg.informacaoPadrao.tipo_de_nota,\n                      \"texto_breve\": msg.orderWebHook.problema_relatado, // o correto seria: msg.orderWebHook.origem_problema, porém não é preechido a origem do problema na abertura do chamado, o mesmo é atualizado no fechamento da OS.\n                      \"notificador\": notificador,\n                      \"equipamento\": msg.orderRequest.equipamento.identificacao,\n               \"grupo_planejamento\": \"210\",   // padrão na abertura para o SAP aceitar a criação da Nota e Ordem PM\n        \"centro_grupo_planejamento\": msg.informacaoPadrao.centro_grupo_planejamento,\n                  \"centro_trabalho\": centrab,\n           \"centro_centro_trabalho\": msg.informacaoPadrao.centro_centro_trabalho,\n                       \"prioridade\": msg.orderRequest.prioridade.descricao,\n                           \"parada\": msg.orderRequest.tipo_criticidade,\n               \"data_inicio_avaria\": msg.orderWebHook.data_criacao,\n               \"hora_inicio_avaria\": msg.orderWebHook.hora_criacao,\n                    \"inicio_avaria\": \"\",\n                       \"tipo_ordem\": msg.informacaoPadrao.tipo_ordem,\n                   \"numero_pessoal\": \"501138\", // padrão na abertura para o SAP aceitar a criação da Nota e Ordem PM\n                              \"rBy\": notificador\n\n    };\n\nmsg.topic = 'post_SAP_Criar'; \n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 560,
        "wires": [
            [
                "60a4af64dfb36bf9",
                "a9d9d73f30d836ed"
            ]
        ]
    },
    {
        "id": "3b598c4b1f4bde48",
        "type": "switch",
        "z": "db17a995a09e80d5",
        "g": "1dc7c2499547b265",
        "name": "",
        "property": "orderWebHook.estado_final",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Aberta",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Fechada",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 130,
        "y": 620,
        "wires": [
            [
                "e3148e90c3127d6b",
                "3292300064ade38b"
            ],
            [
                "a0c307d284401ec3",
                "94fbe4ab44b81958"
            ]
        ]
    },
    {
        "id": "60a4af64dfb36bf9",
        "type": "link out",
        "z": "db17a995a09e80d5",
        "g": "1dc7c2499547b265",
        "name": "link out postSAP",
        "mode": "link",
        "links": [
            "519725c9379c8e73"
        ],
        "x": 535,
        "y": 560,
        "wires": []
    },
    {
        "id": "9fa0fcf948866254",
        "type": "link in",
        "z": "db17a995a09e80d5",
        "g": "847899c9c153b13a",
        "name": "link in post_Fechar_SAP",
        "links": [
            "8bc14cba8695789b"
        ],
        "x": 93,
        "y": 1480,
        "wires": [
            [
                "c7d142042721a53f"
            ]
        ]
    },
    {
        "id": "fb4a60e5d145c094",
        "type": "debug",
        "z": "db17a995a09e80d5",
        "g": "847899c9c153b13a",
        "name": "post_SAP_Fechar",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 518,
        "y": 1480,
        "wires": []
    },
    {
        "id": "07e6d4a101079a25",
        "type": "debug",
        "z": "db17a995a09e80d5",
        "g": "c3a65364ba478214",
        "name": "body",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 550,
        "y": 220,
        "wires": []
    },
    {
        "id": "e0f3c5f9d4a5f982",
        "type": "debug",
        "z": "db17a995a09e80d5",
        "g": "c3a65364ba478214",
        "name": "json",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 550,
        "y": 260,
        "wires": []
    },
    {
        "id": "7564baec94258c76",
        "type": "debug",
        "z": "db17a995a09e80d5",
        "g": "c3a65364ba478214",
        "name": "orderWebHook",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 580,
        "y": 300,
        "wires": []
    },
    {
        "id": "50eb21b9f678c77c",
        "type": "debug",
        "z": "db17a995a09e80d5",
        "g": "c3a65364ba478214",
        "name": "get_Order",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 340,
        "wires": []
    },
    {
        "id": "842b2a23a7b39b20",
        "type": "debug",
        "z": "db17a995a09e80d5",
        "g": "c3a65364ba478214",
        "name": "orderRequest",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 580,
        "y": 380,
        "wires": []
    },
    {
        "id": "59e2abc8575e2f1a",
        "type": "debug",
        "z": "db17a995a09e80d5",
        "g": "1dc7c2499547b265",
        "name": "get_User_1",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 680,
        "wires": []
    },
    {
        "id": "04d42251bbee0f88",
        "type": "debug",
        "z": "db17a995a09e80d5",
        "g": "1dc7c2499547b265",
        "name": "user",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 720,
        "wires": []
    },
    {
        "id": "a0c307d284401ec3",
        "type": "debug",
        "z": "db17a995a09e80d5",
        "g": "1dc7c2499547b265",
        "name": "Switch Fechar",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 320,
        "y": 640,
        "wires": []
    },
    {
        "id": "a9d9d73f30d836ed",
        "type": "debug",
        "z": "db17a995a09e80d5",
        "g": "1dc7c2499547b265",
        "name": "payload_SAP_Criar",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 600,
        "wires": []
    },
    {
        "id": "cfdd64a07739c594",
        "type": "debug",
        "z": "db17a995a09e80d5",
        "g": "1dc7c2499547b265",
        "name": "payload_SAP_Fechar",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 620,
        "y": 760,
        "wires": []
    },
    {
        "id": "2bea327854a95299",
        "type": "debug",
        "z": "db17a995a09e80d5",
        "g": "847899c9c153b13a",
        "name": "json Fechar",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 498,
        "y": 1520,
        "wires": []
    },
    {
        "id": "9ac50c232d8be377",
        "type": "json",
        "z": "db17a995a09e80d5",
        "g": "1560058f244ee20c",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 300,
        "y": 1170,
        "wires": [
            [
                "24a4914024c7a2c8",
                "a6f4998136899eae",
                "93364db42ab509e9"
            ]
        ]
    },
    {
        "id": "a6f4998136899eae",
        "type": "debug",
        "z": "db17a995a09e80d5",
        "g": "1560058f244ee20c",
        "name": "json Criar",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 798,
        "y": 1170,
        "wires": []
    },
    {
        "id": "93364db42ab509e9",
        "type": "function",
        "z": "db17a995a09e80d5",
        "g": "1560058f244ee20c",
        "name": "converter_Criar",
        "func": "\n//inicio da avaria\n\n    function converterDataHora(data, horario) {\n        const dataPartes = data.split('/');\n        const dia = dataPartes[0];\n        const mes = dataPartes[1];\n        const ano = dataPartes[2];\n\n        const novaDataHora = `${ano}-${mes}-${dia} ${horario}`;\n\n        return novaDataHora;\n    }\n\n    const dataOriginal = msg.payloadSQL.data_inicio_avaria;\n    const horaOriginal = msg.payloadSQL.hora_inicio_avaria;\n\n    const novaDataHora = converterDataHora(dataOriginal, horaOriginal);\n\n    msg.payloadSQL.inicio_avaria = novaDataHora;\n\n\n// regra\n\nmsg.payloadSQL.nota_pm = \"\";\nmsg.payloadSQL.ordem_pm = \"\";\n\n    if (msg.payload.nota_pm) {\n        msg.payloadSQL.statusSAP = \"Ok\";\n        msg.payloadSQL.summary = \"Nota e Ordem PM criada no SAP\";\n        msg.payloadSQL.nota_pm = parseInt(msg.payload.nota_pm);\n        msg.payloadSQL.ordem_pm = parseInt(msg.payload.ordem_pm);\n    };\n\n    if (msg.payload.mensagens) {\n\n        if (msg.payload.mensagens.item.mensagem) {\n            if (msg.payload.mensagens.item.mensagem.tipo == \"E\") {\n                msg.payloadSQL.statusSAP = \"Erro na Integração: \" + msg.payload.mensagens.item.mensagem;\n                msg.payloadSQL.summary = \"Erro na Integração: \" + msg.payload.mensagens.item.mensagem;\n            };\n        };\n\n        if (msg.payload.mensagens.item[0]) {\n            if (msg.payload.mensagens.item[0].tipo == \"E\") {\n                msg.payloadSQL.statusSAP = \"Erro na Integração: \" + msg.payload.mensagens.item[0].mensagem;\n                msg.payloadSQL.summary = \"Erro na Integração: \" + msg.payload.mensagens.item[0].mensagem;\n            };\n        };\n\n        if (msg.payload.mensagens.item[1]) {\n            if (msg.payload.mensagens.item[1].tipo == \"E\") {\n                msg.payloadSQL.statusSAP = \"Erro na Integração: \" + msg.payload.mensagens.item[0].mensagem + \". \" + msg.payload.mensagens.item[1].mensagem;\n                msg.payloadSQL.summary = \"Erro na Integração: \" + msg.payload.mensagens.item[0].mensagem + \". \" + msg.payload.mensagens.item[1].mensagem;\n            };\n        };\n\n        if (msg.payload.mensagens.item[2]) {\n            if (msg.payload.mensagens.item[2].tipo == \"E\") {\n                msg.payloadSQL.statusSAP = \"Erro na Integração: \" + msg.payload.mensagens.item[0].mensagem + \". \" + msg.payload.mensagens.item[1].mensagem + \". \" + msg.payload.mensagens.item[2].mensagem;\n                msg.payloadSQL.summary = \"Erro na Integração: \" + msg.payload.mensagens.item[0].mensagem + \". \" + msg.payload.mensagens.item[1].mensagem + \". \" + msg.payload.mensagens.item[2].mensagem;\n            };\n        };\n\n    };\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 504,
        "y": 1300,
        "wires": [
            [
                "78568c7a1f075228",
                "a19bf4dd68956226",
                "de733619add88692"
            ]
        ]
    },
    {
        "id": "78568c7a1f075228",
        "type": "debug",
        "z": "db17a995a09e80d5",
        "g": "1560058f244ee20c",
        "name": "converter Criar",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 1300,
        "wires": []
    },
    {
        "id": "bab1cf069f168b28",
        "type": "debug",
        "z": "db17a995a09e80d5",
        "g": "1e353503c7d5a7f5",
        "name": "erro",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 1780,
        "wires": []
    },
    {
        "id": "de795e3e561ff543",
        "type": "http request",
        "z": "db17a995a09e80d5",
        "g": "1560058f244ee20c",
        "name": "put_OrdemPM",
        "method": "PUT",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://mwm.arkmeds.com/api/v4/ordem_servico/{{orderWebHook.id}}/",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "other",
                "keyValue": "Authorization",
                "valueType": "other",
                "valueValue": "JWT eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImZlcm5hbmRvLnZlbnR1cm9zb0BuYXZpc3Rhci5jb20uYnIiLCJ1c2VyX2lkIjo1LCJlbWFpbCI6ImZlcm5hbmRvLnZlbnR1cm9zb0BuYXZpc3Rhci5jb20uYnIiLCJleHAiOjE2NjUwNzE3OTN9.kV1bgUSxx15B1LjyAEmeis3vGwdtoUuJZzirwY_YY0g"
            }
        ],
        "x": 522,
        "y": 1250,
        "wires": [
            [
                "942f6e90501e1364",
                "18b385342493ad2c"
            ]
        ]
    },
    {
        "id": "24a4914024c7a2c8",
        "type": "function",
        "z": "db17a995a09e80d5",
        "g": "1560058f244ee20c",
        "name": "function_OrdemPM",
        "func": "msg.payload = {\n\n    \"campo_extra\": msg.payload.ordem_pm\n\n}\n\nmsg.topic = 'put_OrdemPM'; \n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 1210,
        "wires": [
            [
                "de795e3e561ff543",
                "07f4989453fdc148"
            ]
        ]
    },
    {
        "id": "07f4989453fdc148",
        "type": "debug",
        "z": "db17a995a09e80d5",
        "g": "1560058f244ee20c",
        "name": "function_OrdemPM",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 828,
        "y": 1210,
        "wires": []
    },
    {
        "id": "942f6e90501e1364",
        "type": "debug",
        "z": "db17a995a09e80d5",
        "g": "1560058f244ee20c",
        "name": "put_OrdemPM",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 818,
        "y": 1250,
        "wires": []
    },
    {
        "id": "a19bf4dd68956226",
        "type": "MSSQL",
        "z": "db17a995a09e80d5",
        "g": "1560058f244ee20c",
        "mssqlCN": "df8c0b88.91b0a8",
        "name": "sql",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": "0",
        "query": "\r\n\tINSERT INTO [Indicadores].[DBO].[tbNM_Arkmeds] (statusSAP, causador, nota_pm, ordem_pm, os_arkmeds, id_os_arkmeds, tipo_de_nota, texto_breve, notificador, equipamento, grupo_planejamento, centro_grupo_planejamento, centro_trabalho, centro_centro_trabalho, prioridade, parada, inicio_avaria, tipo_ordem, numero_pessoal, rBy, rDt, rSt)\r\n\r\n\t     VALUES ('{{payloadSQL.summary}}',\r\n                 '-',\r\n             IIF('{{payloadSQL.nota_pm}}'='',NULL,'{{payloadSQL.nota_pm}}'),\r\n             IIF('{{payloadSQL.ordem_pm}}'='',NULL,'{{payloadSQL.ordem_pm}}'),\r\n                 '{{payloadSQL.numero}}',\r\n                 '{{payloadSQL.id}}',\r\n                 '{{payloadSQL.tipo_de_nota}}', \r\n REPLACE(REPLACE('{{payloadSQL.texto_breve}}','&#x2F;','/'),'&#39;',''''),\r\n                 '{{payloadSQL.notificador}}', \r\n                 '{{payloadSQL.equipamento}}', \r\n                 '{{payloadSQL.grupo_planejamento}}', \r\n                 '{{payloadSQL.centro_grupo_planejamento}}', \r\n                 '{{payloadSQL.centro_trabalho}}', \r\n                 '{{payloadSQL.centro_centro_trabalho}}', \r\n                 '{{payloadSQL.prioridade}}', \r\n                 '{{payloadSQL.parada}}', \r\n                 '{{payloadSQL.inicio_avaria}}',\r\n                 '{{payloadSQL.tipo_ordem}}',\r\n                 '{{payloadSQL.numero_pessoal}}',\r\n                 '{{payloadSQL.notificador}}',\r\n                  GETDATE(),\r\n                 'spnodered');",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "parseMustache": true,
        "params": [],
        "x": 474,
        "y": 1340,
        "wires": [
            [
                "ccaefa7822bcb7f2"
            ]
        ]
    },
    {
        "id": "1a9382724de651ed",
        "type": "function",
        "z": "db17a995a09e80d5",
        "g": "c3a65364ba478214",
        "name": "orderWebHook Editado",
        "func": "\n//data criação da avaria\n\n    var data_criacao = msg.orderWebHook.data_criacao;\n\n        msg.orderWebHook.data_criacao = data_criacao.split(' ')[0];\n        msg.orderWebHook.hora_criacao = data_criacao.split(' ')[1];\n\n\n//data fim da avaria\n\n    var data_fim = msg.orderWebHook.data_conclusao;\n\n        msg.orderWebHook.data_fim_avaria = data_fim.split(' ')[0];\n        msg.orderWebHook.hora_fim_avaria = data_fim.split(' ')[1];\n\n\n//grupo planejamento\n\n         if (msg.orderWebHook.tipo_servico == \"Manutenção Corretiva\") { msg.orderWebHook.tipo_servico = \"210\"; }\n    else if (msg.orderWebHook.tipo_servico == \"Manutenção Preventiva\") { msg.orderWebHook.tipo_servico = \"200\"; }\n\n\n//prioridade\n\n         if (msg.orderRequest.prioridade.descricao == \"Não urgente\") { msg.orderRequest.prioridade.descricao = \"3\"; }   // Baixa=3 // Reincidência=4\n    else if (msg.orderRequest.prioridade.descricao == \"Pouco urgente\") { msg.orderRequest.prioridade.descricao = \"3\"; } // Média=2\n    else if (msg.orderRequest.prioridade.descricao == \"Urgente\") { msg.orderRequest.prioridade.descricao = \"1\"; }       //  Alta=1\n    else if (msg.orderRequest.prioridade.descricao == \"Muito urgente\") { msg.orderRequest.prioridade.descricao = \"1\"; } //  Alta=1\n    else if (msg.orderRequest.prioridade.descricao == \"Emergente\") { msg.orderRequest.prioridade.descricao = \"1\"; }     //  Alta=1\n\n\n//criticidade (parada)\n\n         if (msg.orderRequest.tipo_criticidade == \"1\") { msg.orderRequest.tipo_criticidade = \"X\"; }\n    else if (msg.orderRequest.tipo_criticidade == \"2\") { msg.orderRequest.tipo_criticidade = \"0\"; }\n    else if (msg.orderRequest.tipo_criticidade == null) { msg.orderRequest.tipo_criticidade = \"\"; }\n    else { msg.orderRequest.tipo_criticidade = \"\"; }\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 420,
        "wires": [
            [
                "2153157473422fca",
                "eeed2d1a0a259b8d"
            ]
        ]
    },
    {
        "id": "2153157473422fca",
        "type": "debug",
        "z": "db17a995a09e80d5",
        "g": "c3a65364ba478214",
        "name": "orderWebHook Editado",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 420,
        "wires": []
    },
    {
        "id": "ccaefa7822bcb7f2",
        "type": "debug",
        "z": "db17a995a09e80d5",
        "g": "1560058f244ee20c",
        "name": "sql Criar",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 800,
        "y": 1340,
        "wires": []
    },
    {
        "id": "eeed2d1a0a259b8d",
        "type": "function",
        "z": "db17a995a09e80d5",
        "g": "c3a65364ba478214",
        "name": "informacaoPadrao",
        "func": "\nmsg.informacaoPadrao = {\n\n                      \"tipo_de_nota\": \"M2\",\n                        \"texto_acao\": \"Histórico\",\n                        \"tipo_ordem\": \"PM01\",\n         \"centro_grupo_planejamento\": \"M100\",\n            \"centro_centro_trabalho\": \"M100\",\n    \"confirm_centro_centro_trabalho\": \"M100\",\n                               \"rBy\": \"\"\n    \n    };\n\nmsg.topic = 'get_User_1';  \n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 460,
        "wires": [
            [
                "3b598c4b1f4bde48",
                "67ad5ac869474599"
            ]
        ]
    },
    {
        "id": "67ad5ac869474599",
        "type": "debug",
        "z": "db17a995a09e80d5",
        "g": "c3a65364ba478214",
        "name": "informacaoPadrao",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 460,
        "wires": []
    },
    {
        "id": "ded54106f6023e63",
        "type": "debug",
        "z": "db17a995a09e80d5",
        "g": "847899c9c153b13a",
        "name": "sql Fechar",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 1600,
        "wires": []
    },
    {
        "id": "d5d440de230b3b98",
        "type": "debug",
        "z": "db17a995a09e80d5",
        "g": "1d5633e00cc525b0",
        "name": "payload SQL",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1052,
        "y": 880,
        "wires": []
    },
    {
        "id": "5dd0263b7cf89901",
        "type": "debug",
        "z": "db17a995a09e80d5",
        "g": "1d5633e00cc525b0",
        "name": "pré_post_SAP_Fechar",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 752,
        "y": 1010,
        "wires": []
    },
    {
        "id": "aae46db9be628f16",
        "type": "debug",
        "z": "db17a995a09e80d5",
        "g": "1d5633e00cc525b0",
        "name": "get_User_2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 612,
        "y": 860,
        "wires": []
    },
    {
        "id": "59ba2ec1a2f362b3",
        "type": "debug",
        "z": "db17a995a09e80d5",
        "g": "1d5633e00cc525b0",
        "name": "payloadApontamentos",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 832,
        "y": 860,
        "wires": []
    },
    {
        "id": "c2d46ced07fe8625",
        "type": "debug",
        "z": "db17a995a09e80d5",
        "g": "bd94eaecd1098066",
        "name": "function_Error",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 612,
        "y": 1880,
        "wires": []
    },
    {
        "id": "255657b8ba2a04d6",
        "type": "MSSQL",
        "z": "db17a995a09e80d5",
        "g": "93cb7c5296db8bb3",
        "mssqlCN": "df8c0b88.91b0a8",
        "name": "sql",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": "0",
        "query": "\r\n\tINSERT INTO [Indicadores].[DBO].[tbNM_Arkmeds_Logs] (tipo, dt, node, payload)\r\n\r\n\t     VALUES (\r\n\r\n'Integração Arkmeds <> SAP',\r\n\r\nGETDATE(),\r\n\r\n'{{topic}}',\r\n\r\nREPLACE(REPLACE(REPLACE(REPLACE(REPLACE('{{payload}}','&quot;','\"'),'&#x2F;','/'),'&#39;',''''),'&#x3D;','='),', &#x2F;n','')\r\n\r\n\t\t \t\t);",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "parseMustache": true,
        "params": [],
        "x": 1070,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "7bc1e117f262c327",
        "type": "json",
        "z": "db17a995a09e80d5",
        "g": "93cb7c5296db8bb3",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": true,
        "x": 930,
        "y": 180,
        "wires": [
            [
                "255657b8ba2a04d6"
            ]
        ]
    },
    {
        "id": "a243abd2d866f1a0",
        "type": "link in",
        "z": "db17a995a09e80d5",
        "g": "93cb7c5296db8bb3",
        "name": "link in log OS 2",
        "links": [
            "18b385342493ad2c",
            "1e1c10d2161f2f04",
            "35b3454c4c10de1c",
            "6dd750488e297ca9",
            "fdc413dc2317b4da"
        ],
        "x": 825,
        "y": 180,
        "wires": [
            [
                "7bc1e117f262c327"
            ]
        ]
    },
    {
        "id": "fdc413dc2317b4da",
        "type": "link out",
        "z": "db17a995a09e80d5",
        "g": "c3a65364ba478214",
        "name": "link out log OS 2.01",
        "mode": "link",
        "links": [
            "a243abd2d866f1a0"
        ],
        "x": 515,
        "y": 140,
        "wires": []
    },
    {
        "id": "6dd750488e297ca9",
        "type": "link out",
        "z": "db17a995a09e80d5",
        "g": "c3a65364ba478214",
        "name": "link out log OS 2.02",
        "mode": "link",
        "links": [
            "a243abd2d866f1a0"
        ],
        "x": 455,
        "y": 320,
        "wires": []
    },
    {
        "id": "1e1c10d2161f2f04",
        "type": "link out",
        "z": "db17a995a09e80d5",
        "g": "1dc7c2499547b265",
        "name": "link out log OS 2.03",
        "mode": "link",
        "links": [
            "a243abd2d866f1a0"
        ],
        "x": 535,
        "y": 640,
        "wires": []
    },
    {
        "id": "35b3454c4c10de1c",
        "type": "link out",
        "z": "db17a995a09e80d5",
        "g": "1d5633e00cc525b0",
        "name": "link out log OS 2.04",
        "mode": "link",
        "links": [
            "a243abd2d866f1a0"
        ],
        "x": 557,
        "y": 960,
        "wires": []
    },
    {
        "id": "ac7b93be9728a08a",
        "type": "link out",
        "z": "db17a995a09e80d5",
        "g": "1560058f244ee20c",
        "name": "link out log OS 1.01",
        "mode": "link",
        "links": [
            "37d73d71dfa9d42d"
        ],
        "x": 675,
        "y": 1150,
        "wires": []
    },
    {
        "id": "18b385342493ad2c",
        "type": "link out",
        "z": "db17a995a09e80d5",
        "g": "1560058f244ee20c",
        "name": "link out log OS 2.05",
        "mode": "link",
        "links": [
            "a243abd2d866f1a0"
        ],
        "x": 675,
        "y": 1270,
        "wires": []
    },
    {
        "id": "b279171d10da1723",
        "type": "link out",
        "z": "db17a995a09e80d5",
        "g": "847899c9c153b13a",
        "name": "link out log OS 1.02",
        "mode": "link",
        "links": [
            "37d73d71dfa9d42d"
        ],
        "x": 445,
        "y": 1440,
        "wires": []
    },
    {
        "id": "9cb9ebaa30da80db",
        "type": "link in",
        "z": "db17a995a09e80d5",
        "g": "c8f0f8bce80d5401",
        "name": "link in log Real Time 2",
        "links": [
            "b4d018291ef29b0f"
        ],
        "x": 1295,
        "y": 550,
        "wires": [
            [
                "7e31536ff1732f03"
            ]
        ]
    },
    {
        "id": "7e31536ff1732f03",
        "type": "json",
        "z": "db17a995a09e80d5",
        "g": "c8f0f8bce80d5401",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": true,
        "x": 1400,
        "y": 550,
        "wires": [
            [
                "80db7fcc2e9223f5"
            ]
        ]
    },
    {
        "id": "80db7fcc2e9223f5",
        "type": "MSSQL",
        "z": "db17a995a09e80d5",
        "g": "c8f0f8bce80d5401",
        "mssqlCN": "df8c0b88.91b0a8",
        "name": "sql",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": "0",
        "query": "\r\n\tINSERT INTO [Indicadores].[DBO].[tbNM_Arkmeds_Logs] (tipo, dt, node, payload)\r\n\r\n\t     VALUES (\r\n\r\n'Integração Arkmeds <> SQL Server',\r\n\r\nGETDATE(),\r\n\r\n'{{topic}}',\r\n\r\nREPLACE(REPLACE(REPLACE(REPLACE(REPLACE('{{payload}}','&quot;','\"'),'&#x2F;','/'),'&#39;',''''),'&#x3D;','='),', &#x2F;n','')\r\n\r\n\t\t \t\t);",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "parseMustache": true,
        "params": [],
        "x": 1550,
        "y": 510,
        "wires": [
            []
        ]
    },
    {
        "id": "c3e68591c0c228dc",
        "type": "link out",
        "z": "db17a995a09e80d5",
        "g": "f1b091c120a3648f",
        "name": "link out log Real Time 1.01",
        "mode": "link",
        "links": [
            "c165123647228aed"
        ],
        "x": 1925,
        "y": 190,
        "wires": []
    },
    {
        "id": "b4d018291ef29b0f",
        "type": "link out",
        "z": "db17a995a09e80d5",
        "g": "f1b091c120a3648f",
        "name": "link out log Real Time 2.01",
        "mode": "link",
        "links": [
            "9cb9ebaa30da80db",
            "d741df559ad7a29c"
        ],
        "x": 1925,
        "y": 390,
        "wires": []
    },
    {
        "id": "c165123647228aed",
        "type": "link in",
        "z": "db17a995a09e80d5",
        "g": "c8f0f8bce80d5401",
        "name": "link in log Real Time 1",
        "links": [
            "c3e68591c0c228dc"
        ],
        "x": 1295,
        "y": 510,
        "wires": [
            [
                "80db7fcc2e9223f5"
            ]
        ]
    },
    {
        "id": "37d73d71dfa9d42d",
        "type": "link in",
        "z": "db17a995a09e80d5",
        "g": "93cb7c5296db8bb3",
        "name": "link in log OS 1",
        "links": [
            "ac7b93be9728a08a",
            "b279171d10da1723"
        ],
        "x": 825,
        "y": 140,
        "wires": [
            [
                "255657b8ba2a04d6"
            ]
        ]
    },
    {
        "id": "ac4220f3a9f53107",
        "type": "function",
        "z": "db17a995a09e80d5",
        "g": "c3a65364ba478214",
        "name": "webhookrelay",
        "func": "\nmsg.topic = 'webhookrelay'; \n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 140,
        "wires": [
            [
                "fdc413dc2317b4da"
            ]
        ]
    },
    {
        "id": "102bc5a9f659026b",
        "type": "function",
        "z": "db17a995a09e80d5",
        "g": "f1b091c120a3648f",
        "name": "websocket",
        "func": "\nmsg.topic = 'websocket';\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1800,
        "y": 190,
        "wires": [
            [
                "c3e68591c0c228dc"
            ]
        ]
    },
    {
        "id": "6aee48081a887b17",
        "type": "delay",
        "z": "db17a995a09e80d5",
        "g": "f1b091c120a3648f",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1520,
        "y": 190,
        "wires": [
            [
                "94ad1891c3a7c24c",
                "89fc7ec86b89e887",
                "102bc5a9f659026b"
            ]
        ]
    },
    {
        "id": "dde31913093c8747",
        "type": "link in",
        "z": "db17a995a09e80d5",
        "g": "fc88ae2fa290fc8c",
        "name": "link in log Real Time 1",
        "links": [
            "2da30dba0e83c128"
        ],
        "x": 2415,
        "y": 120,
        "wires": [
            [
                "dca237285d12b6a6"
            ]
        ]
    },
    {
        "id": "dca237285d12b6a6",
        "type": "exec",
        "z": "db17a995a09e80d5",
        "g": "fc88ae2fa290fc8c",
        "command": "C:\\Node-RED\\IA_Maintenance\\doc\\logsArkmeds\\logsArkmeds.py",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Logs Arkmeds",
        "x": 2560,
        "y": 120,
        "wires": [
            [
                "1a5df243ef709f02"
            ],
            [
                "4586a1fc7e46c18c"
            ],
            [
                "099372498ccb1992"
            ]
        ]
    },
    {
        "id": "c1744dadba35c776",
        "type": "inject",
        "z": "db17a995a09e80d5",
        "g": "fc88ae2fa290fc8c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2370,
        "y": 70,
        "wires": [
            [
                "dca237285d12b6a6"
            ]
        ]
    },
    {
        "id": "1a5df243ef709f02",
        "type": "debug",
        "z": "db17a995a09e80d5",
        "g": "fc88ae2fa290fc8c",
        "name": "debug 12",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2740,
        "y": 80,
        "wires": []
    },
    {
        "id": "4586a1fc7e46c18c",
        "type": "debug",
        "z": "db17a995a09e80d5",
        "g": "fc88ae2fa290fc8c",
        "name": "debug 13",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2740,
        "y": 120,
        "wires": []
    },
    {
        "id": "099372498ccb1992",
        "type": "debug",
        "z": "db17a995a09e80d5",
        "g": "fc88ae2fa290fc8c",
        "name": "debug 14",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2740,
        "y": 160,
        "wires": []
    },
    {
        "id": "9dedcf3bf32a65b2",
        "type": "MSSQL",
        "z": "8d95a7b948833323",
        "g": "6c38c6d6d627b2fe",
        "mssqlCN": "df8c0b88.91b0a8",
        "name": "delete -30",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": "0",
        "query": "DELETE FROM [bfc].[dbo].[tb_BFC_Eixos_Analise] WHERE dt>=DATEADD(DAY, -30, CAST(GETDATE() AS DATE))",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "parseMustache": true,
        "params": [],
        "x": 360,
        "y": 1020,
        "wires": [
            [
                "81bc2b2c91deea08"
            ]
        ]
    },
    {
        "id": "5d241a6ec037c168",
        "type": "debug",
        "z": "8d95a7b948833323",
        "g": "6c38c6d6d627b2fe",
        "name": "debug -30",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "bfc.qtd",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 1020,
        "wires": []
    },
    {
        "id": "f055f07b0ea3a07c",
        "type": "MSSQL",
        "z": "8d95a7b948833323",
        "g": "7ebbd73b8eb97286",
        "mssqlCN": "df8c0b88.91b0a8",
        "name": "delete P",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": "0",
        "query": "\r\n    DELETE FROM [bfc].[dbo].[tb_BFC_Eixos_Analise]\r\n          WHERE CAST(dt as DATE) NOT IN ( SELECT DATEADD(DAY, CAST(RIGHT(PRD_PR, 2) as INT) - 1, CONVERT(DATE, PRD_DMES, 103)) as DIA\r\n                                            FROM [Indicadores].[DBO].[tbPrdDia] UNPIVOT (PRD FOR PRD_PR IN (PRD_PR01,PRD_PR02,PRD_PR03,PRD_PR04,PRD_PR05,PRD_PR06,PRD_PR07,PRD_PR08,PRD_PR09,PRD_PR10,PRD_PR11,PRD_PR12,PRD_PR13,PRD_PR14,PRD_PR15,PRD_PR16,PRD_PR17,PRD_PR18,PRD_PR19,PRD_PR20,PRD_PR21,PRD_PR22,PRD_PR23,PRD_PR24,PRD_PR25,PRD_PR26,PRD_PR27,PRD_PR28,PRD_PR29,PRD_PR30,PRD_PR31)) as UnpivotedData\r\n                                           WHERE PRD>0\r\n                                             and PRD_DPTM='Bloco Acteon/X10/X12'\r\n                                             and CONVERT(DATE, PRD_DMES, 103)>='2022-10-01')",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "parseMustache": true,
        "params": [],
        "x": 360,
        "y": 1180,
        "wires": [
            [
                "97fd8041d640dfe5"
            ]
        ]
    },
    {
        "id": "7cafbca0e23e8014",
        "type": "MSSQL",
        "z": "8d95a7b948833323",
        "g": "7ebbd73b8eb97286",
        "mssqlCN": "df8c0b88.91b0a8",
        "name": "insert -0",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": "0",
        "query": "INSERT INTO [bfc].[dbo].[tb_BFC_Eixos_Analise]\r\n\r\n\t  SELECT CAST(DATEADD(HOUR, -4, E.BFC_TIMESTAMP) as DATE) as 'timestamp-4h',\r\n\t\t     (SELECT RIGHT(M.BFC_CLIENT_ID,6) FROM [bfc].[dbo].[bfc_sources] M WHERE M.ID=E.BFC_SOURCE_ID) as maquina,\r\n\t\t     '{{bfc.eixo}}' as eixo, \r\n\t\t     AVG(E.DATAPOINT_Torque) as torque,\r\n\t\t     AVG(E.DATAPOINT_TemperaturaMotor) as temperatura,\r\n\t\t     '{{bfc.rBy}}' as rBy,\r\n  \t\t     GETDATE() as rDt\r\n\t    FROM [bfc].[DBO].[DATASET_Eixo_{{bfc.eixo}}] E\r\n\t   WHERE E.DATAPOINT_Torque>0.3\r\n\t     and CAST(DATEADD(HOUR, -4, E.BFC_TIMESTAMP) as DATE)>=DATEADD(DAY, -0, CAST(GETDATE() as DATE))\r\n\tGROUP BY CAST(DATEADD(HOUR, -4, E.BFC_TIMESTAMP) as DATE), E.BFC_SOURCE_ID",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "parseMustache": true,
        "params": [],
        "x": 850,
        "y": 1180,
        "wires": [
            [
                "12cd515cda97e8ed",
                "19863325513562b9"
            ]
        ]
    },
    {
        "id": "35346f01d6bc8c43",
        "type": "inject",
        "z": "8d95a7b948833323",
        "g": "6c38c6d6d627b2fe",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "bfc.qtd",
                "v": "0",
                "vt": "num"
            },
            {
                "p": "bfc.rBy",
                "v": "Manual",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 1020,
        "wires": [
            [
                "9dedcf3bf32a65b2"
            ]
        ]
    },
    {
        "id": "e289c1b828bd8c1c",
        "type": "inject",
        "z": "8d95a7b948833323",
        "g": "7ebbd73b8eb97286",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "bfc.qtd",
                "v": "0",
                "vt": "num"
            },
            {
                "p": "bfc.rBy",
                "v": "Manual",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 1180,
        "wires": [
            [
                "f055f07b0ea3a07c"
            ]
        ]
    },
    {
        "id": "12cd515cda97e8ed",
        "type": "debug",
        "z": "8d95a7b948833323",
        "g": "7ebbd73b8eb97286",
        "name": "debug -0",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "bfc.qtd",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1020,
        "y": 1180,
        "wires": []
    },
    {
        "id": "97fd8041d640dfe5",
        "type": "MSSQL",
        "z": "8d95a7b948833323",
        "g": "7ebbd73b8eb97286",
        "mssqlCN": "df8c0b88.91b0a8",
        "name": "delete -0",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": "0",
        "query": "DELETE FROM [bfc].[dbo].[tb_BFC_Eixos_Analise] WHERE dt=CAST(GETDATE() AS DATE)",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "parseMustache": true,
        "params": [],
        "x": 520,
        "y": 1180,
        "wires": [
            [
                "99f33592778fc1e0"
            ]
        ]
    },
    {
        "id": "6d1d5bbdd60f2a6b",
        "type": "function",
        "z": "8d95a7b948833323",
        "g": "2db2cacba23cb898",
        "name": "telegram",
        "func": "\nvar content = \"\";\n\n//content += '<b>!!! EM TESTE !!!</b>\\n\\n'\n\ncontent += '<b>' + msg.info.critico.title + '</b>\\n\\n'\n\ncontent += msg.info.critico.descr + '\\n\\n'\n\nfor (var i = 0; i < msg.payload.length; i++) {\n\n    if (msg.payload[i]) {\n\n        content += '<b>' + msg.payload[i].maquina + '</b>\\n' +\n                   'Torque do ' + msg.payload[i].eixo + ': ' + msg.payload[i].torque.toFixed(3).replace(\".\", \",\") + ' N.m\\n\\n'\n\n    }\n};\n\nmsg.payload = {\n    type: \"message\",\n    chatId: -1001938983435,\n    content: content,\n    options: {\n        parse_mode: \"HTML\"\n    }\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 530,
        "wires": [
            [
                "d9c57225bce8f72c"
            ]
        ]
    },
    {
        "id": "e4c2922081a3b86f",
        "type": "function",
        "z": "8d95a7b948833323",
        "g": "5b672f0b267ad4d9",
        "name": "telegram",
        "func": "\nvar content = \"\";\n\n//content += '<b>!!! EM TESTE !!!</b>\\n\\n'\n\ncontent += '<b>' + msg.info.emAtencao.title + '</b>\\n\\n'\n\ncontent += msg.info.emAtencao.descr + '\\n\\n'\n\nfor (var i = 0; i < msg.payload.length; i++) {\n\n    if (msg.payload[i]) {\n\n        content += '<b>' + msg.payload[i].maquina + '</b>\\n' +\n                   'Torque do ' + msg.payload[i].eixo + ': ' + msg.payload[i].torque.toFixed(3).replace(\".\", \",\") + ' N.m\\n\\n'\n\n    }\n};\n\nmsg.payload = {\n    type: \"message\",\n    chatId: -1001938983435,\n    content: content,\n    options: {\n        parse_mode: \"HTML\"\n    }\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 710,
        "wires": [
            [
                "6c925db3da475408"
            ]
        ]
    },
    {
        "id": "54e1ad945ea5b379",
        "type": "switch",
        "z": "8d95a7b948833323",
        "g": "2db2cacba23cb898",
        "name": "",
        "property": "payload[0].torque",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "false",
        "repair": true,
        "outputs": 1,
        "x": 980,
        "y": 570,
        "wires": [
            [
                "01e7a752af3bd7dc",
                "6d1d5bbdd60f2a6b",
                "409acffb7e211c8c"
            ]
        ]
    },
    {
        "id": "21ce7c1aaf5de215",
        "type": "switch",
        "z": "8d95a7b948833323",
        "g": "5b672f0b267ad4d9",
        "name": "",
        "property": "payload[0].torque",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "false",
        "repair": true,
        "outputs": 1,
        "x": 980,
        "y": 670,
        "wires": [
            [
                "82c0e052b19673c4",
                "e4c2922081a3b86f",
                "cff80d70cc20995f"
            ]
        ]
    },
    {
        "id": "82c0e052b19673c4",
        "type": "function",
        "z": "8d95a7b948833323",
        "g": "5b672f0b267ad4d9",
        "name": "microsoft",
        "func": "\nvar facts = [];\n\nfor (var i = 0; i < msg.payload.length; i++) {\n\n    if (msg.payload[i]) {\n\n        var item = {};\n\n        item.name = (i + 1) + \") \" + msg.payload[i].maquina + \"\";\n        item.value = msg.payload[i].eixo + ' = ' + msg.payload[i].torque.toFixed(3).replace(\".\", \",\") + ' N.m';\n        facts.push(item);                \n\n    }\n};\n\nmsg.payload = {\n    \"@type\": \"MessageCard\",\n    \"@context\": \"http://schema.org/extensions\",\n    \"themeColor\": \"FFD966\",\n    \"summary\": msg.info.emAtencao.title.trim(),\n    \"sections\": [{\n        \"activityTitle\": msg.info.emAtencao.title.trim(),\n        \"activitySubtitle\": msg.info.emAtencao.descr,\n        \"facts\": facts,\n        \"markdown\": true\n    }],\n    \"potentialAction\": [{\n            \"@type\": \"OpenUri\",\n            \"name\": \"Power BI\",\n            \"targets\": [{\n                \"os\": \"default\",\n                \"uri\": \"https://app.powerbi.com/reportEmbed?reportId=ef0c2fe4-2841-4821-87c9-75523a52fe58&autoAuth=true&ctid=a30a5e3a-3f99-4177-acce-19a1705d07e5\"\n            }]\n                        }, {\n            \"@type\": \"OpenUri\",\n            \"name\": \"Brownfield\",\n            \"targets\": [{\n                \"os\": \"default\",\n                \"uri\": \"https://172.17.1.53:9877\"\n            }]\n                        }, {\n            \"@type\": \"OpenUri\",\n            \"name\": \"CMMS (Arkmeds)\",\n            \"targets\": [{\n                \"os\": \"default\",\n                \"uri\": \"https://mwm.arkmeds.com\"\n            }]\n        }]\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 670,
        "wires": [
            [
                "f2437abf214f00e9"
            ]
        ]
    },
    {
        "id": "01e7a752af3bd7dc",
        "type": "function",
        "z": "8d95a7b948833323",
        "g": "2db2cacba23cb898",
        "name": "microsoft",
        "func": "\nvar facts = [];\n\nfor (var i = 0; i < msg.payload.length; i++) {\n\n    if (msg.payload[i]) {\n\n        var item = {};\n\n        item.name = (i + 1) + \") \" + msg.payload[i].maquina + \"\";\n        item.value = msg.payload[i].eixo + ' = ' + msg.payload[i].torque.toFixed(3).replace(\".\", \",\") + ' N.m';\n        facts.push(item);                \n\n    }\n};\n\nmsg.payload = {\n    \"@type\": \"MessageCard\",\n    \"@context\": \"http://schema.org/extensions\",\n    \"themeColor\": \"E81123\",\n    \"summary\": msg.info.critico.title.trim(),\n    \"sections\": [{\n        \"activityTitle\": msg.info.critico.title.trim(),\n        \"activitySubtitle\": msg.info.critico.descr,\n        \"facts\": facts,\n        \"markdown\": true\n    }],\n    \"potentialAction\": [{\n        \"@type\": \"OpenUri\",\n        \"name\": \"Power BI\",\n        \"targets\": [{\n            \"os\": \"default\",\n            \"uri\": \"https://app.powerbi.com/reportEmbed?reportId=ef0c2fe4-2841-4821-87c9-75523a52fe58&autoAuth=true&ctid=a30a5e3a-3f99-4177-acce-19a1705d07e5\"\n        }]\n    }, {\n        \"@type\": \"OpenUri\",\n        \"name\": \"Brownfield\",\n        \"targets\": [{\n            \"os\": \"default\",\n            \"uri\": \"https://172.17.1.53:9877\"\n        }]\n    }, {\n        \"@type\": \"OpenUri\",\n        \"name\": \"CMMS (Arkmeds)\",\n        \"targets\": [{\n            \"os\": \"default\",\n            \"uri\": \"https://mwm.arkmeds.com\"\n        }]\n    }]\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 570,
        "wires": [
            [
                "f2437abf214f00e9"
            ]
        ]
    },
    {
        "id": "d9c57225bce8f72c",
        "type": "link out",
        "z": "8d95a7b948833323",
        "g": "73a12f5b27a97da1",
        "name": "telegram sender out",
        "mode": "link",
        "links": [
            "cd6a6f484bc47ce0"
        ],
        "x": 1255,
        "y": 530,
        "wires": []
    },
    {
        "id": "6c925db3da475408",
        "type": "link out",
        "z": "8d95a7b948833323",
        "g": "73a12f5b27a97da1",
        "name": "telegram sender out",
        "mode": "link",
        "links": [
            "cd6a6f484bc47ce0"
        ],
        "x": 1255,
        "y": 710,
        "wires": []
    },
    {
        "id": "f2437abf214f00e9",
        "type": "link out",
        "z": "8d95a7b948833323",
        "g": "73a12f5b27a97da1",
        "name": "link out ia/bfc",
        "mode": "link",
        "links": [
            "046bf9e939f94f6c"
        ],
        "x": 1255,
        "y": 620,
        "wires": []
    },
    {
        "id": "409acffb7e211c8c",
        "type": "MSSQL",
        "z": "8d95a7b948833323",
        "g": "2db2cacba23cb898",
        "mssqlCN": "df8c0b88.91b0a8",
        "name": "insert",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": "0",
        "query": "\r\nINSERT INTO [BFC].[dbo].[tb_BFC_Eixos_Analise_SFM]\r\n\r\n    SELECT *\r\n\t\r\n      FROM ( SELECT dt, maquina, eixo, AVG(torque) AS torque, stts='Crítico', rBy='Node-RED', rDt=GETDATE()\r\n               FROM [BFC].[DBO].[tb_BFC_Eixos_Analise]  \r\n              WHERE torque>0\r\n                and dt=CAST(GETDATE() AS DATE) -- '2023-07-04'\r\n           GROUP BY dt, maquina, eixo) c\r\n\r\n     WHERE c.torque<=1.6  ",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "parseMustache": true,
        "params": [],
        "x": 1120,
        "y": 490,
        "wires": [
            []
        ]
    },
    {
        "id": "cff80d70cc20995f",
        "type": "MSSQL",
        "z": "8d95a7b948833323",
        "g": "5b672f0b267ad4d9",
        "mssqlCN": "df8c0b88.91b0a8",
        "name": "insert",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": "0",
        "query": "\r\nINSERT INTO [BFC].[dbo].[tb_BFC_Eixos_Analise_SFM]\r\n\r\n    SELECT *\r\n\t\r\n      FROM ( SELECT dt, maquina, eixo, AVG(torque) AS torque, stts='Em Atenção', rBy='Node-RED', rDt=GETDATE()\r\n               FROM [BFC].[DBO].[tb_BFC_Eixos_Analise]  \r\n              WHERE torque>0\r\n                and dt=CAST(GETDATE() AS DATE) -- '2023-07-04'\r\n           GROUP BY dt, maquina, eixo) c\r\n\r\n     WHERE c.torque> 1.6\r\n       and c.torque<=2.0       ",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "parseMustache": true,
        "params": [],
        "x": 1120,
        "y": 750,
        "wires": [
            []
        ]
    },
    {
        "id": "231e5c59a185a65c",
        "type": "MSSQL",
        "z": "8d95a7b948833323",
        "g": "2db2cacba23cb898",
        "mssqlCN": "df8c0b88.91b0a8",
        "name": "select",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": "0",
        "query": "\r\n    SELECT *\r\n\t\r\n      FROM ( SELECT dt, maquina, ('Eixo ' + eixo) as eixo, AVG(torque) AS torque --, AVG(temperaturaMotor) AS temperaturaMotor, AVG(IIF(corrente < 0, corrente * -1, corrente)) as corrente\r\n               FROM [BFC].[DBO].[tb_BFC_Eixos_Analise]  \r\n              WHERE torque>0\r\n                and dt=CAST(GETDATE() AS DATE) -- '2023-07-04'\r\n           GROUP BY dt, maquina, eixo) c\r\n\r\n     WHERE c.torque<=1.6",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "parseMustache": true,
        "params": [],
        "x": 860,
        "y": 570,
        "wires": [
            [
                "54e1ad945ea5b379"
            ]
        ]
    },
    {
        "id": "b377e7cce68c25e4",
        "type": "MSSQL",
        "z": "8d95a7b948833323",
        "g": "5b672f0b267ad4d9",
        "mssqlCN": "df8c0b88.91b0a8",
        "name": "select",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": "0",
        "query": "\r\n    SELECT *\r\n\t\r\n      FROM ( SELECT dt, maquina, ('Eixo ' + eixo) as eixo, AVG(torque) AS torque --, AVG(temperaturaMotor) AS temperaturaMotor, AVG(IIF(corrente < 0, corrente * -1, corrente)) as corrente\r\n               FROM [BFC].[DBO].[tb_BFC_Eixos_Analise]  \r\n              WHERE torque>0\r\n                and dt=CAST(GETDATE() AS DATE) -- '2023-07-04'\r\n           GROUP BY dt, maquina, eixo) c\r\n\r\n     WHERE c.torque> 1.6\r\n       and c.torque<=2.0",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "parseMustache": true,
        "params": [],
        "x": 860,
        "y": 670,
        "wires": [
            [
                "21ce7c1aaf5de215"
            ]
        ]
    },
    {
        "id": "7a70066f86c06821",
        "type": "function",
        "z": "8d95a7b948833323",
        "g": "ddf5bf871e97d8c5",
        "name": "infoStandard",
        "func": "\nmsg.info = {\n    critico: {\n        title: 'Monitoramento de Eixo - ALERTA CRÍTICO!',\n        descr: 'Torque do Eixo da Máquina está menor que o limite mínimo aceitável de 1,6 N.m'\n    },\n    emAtencao: {\n        title: 'Monitoramento de Eixo',\n        descr: 'Torque do Eixo da Máquina está no intervalo de atenção: Maior que 1,6 N.m e Menor ou Igual a 2,0 N.m'\n    }\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 620,
        "wires": [
            [
                "b377e7cce68c25e4",
                "231e5c59a185a65c"
            ]
        ]
    },
    {
        "id": "74a0eda06b86e321",
        "type": "MSSQL",
        "z": "8d95a7b948833323",
        "g": "ddf5bf871e97d8c5",
        "mssqlCN": "df8c0b88.91b0a8",
        "name": "delete -0",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": "0",
        "query": "DELETE FROM [bfc].[dbo].[tb_BFC_Eixos_Analise] WHERE dt=CAST(GETDATE() AS DATE)",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "parseMustache": true,
        "params": [],
        "x": 240,
        "y": 550,
        "wires": [
            [
                "3eb2779ba9c273db"
            ]
        ]
    },
    {
        "id": "47b3c16ad07d79cd",
        "type": "MSSQL",
        "z": "8d95a7b948833323",
        "g": "ddf5bf871e97d8c5",
        "mssqlCN": "df8c0b88.91b0a8",
        "name": "insert -0",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": "0",
        "query": "INSERT INTO [bfc].[dbo].[tb_BFC_Eixos_Analise]\r\n\r\n\t  SELECT CAST(DATEADD(HOUR, -4, E.BFC_TIMESTAMP) as DATE) as 'timestamp-4h',\r\n\t\t     (SELECT RIGHT(M.BFC_CLIENT_ID,6) FROM [bfc].[dbo].[bfc_sources] M WHERE M.ID=E.BFC_SOURCE_ID) as maquina,\r\n\t\t     '{{bfc.eixo}}' as eixo, \r\n\t\t     AVG(E.DATAPOINT_Torque) as torque,\r\n\t\t     AVG(E.DATAPOINT_TemperaturaMotor) as temperatura,\r\n\t\t     '{{bfc.rBy}}' as rBy,\r\n  \t\t     GETDATE() as rDt\r\n\t    FROM [bfc].[DBO].[DATASET_Eixo_{{bfc.eixo}}] E\r\n\t   WHERE E.DATAPOINT_Torque>0.3\r\n\t     and CAST(DATEADD(HOUR, -4, E.BFC_TIMESTAMP) as DATE)>=DATEADD(DAY, -0, CAST(GETDATE() as DATE))\r\n\tGROUP BY CAST(DATEADD(HOUR, -4, E.BFC_TIMESTAMP) as DATE), E.BFC_SOURCE_ID",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "parseMustache": true,
        "params": [],
        "x": 570,
        "y": 550,
        "wires": [
            [
                "070f245056124caa"
            ]
        ]
    },
    {
        "id": "497e56d1e1d9b6b0",
        "type": "MSSQL",
        "z": "8d95a7b948833323",
        "g": "c0d48184165b7341",
        "mssqlCN": "df8c0b88.91b0a8",
        "name": "delete -1",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": "0",
        "query": "DELETE FROM [bfc].[dbo].[tb_BFC_Eixos_Analise] WHERE dt>=DATEADD(DAY, -1, CAST(GETDATE() AS DATE))",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "parseMustache": true,
        "params": [],
        "x": 240,
        "y": 210,
        "wires": [
            [
                "a75b78c59e9d7222"
            ]
        ]
    },
    {
        "id": "4cacd576c28ead7f",
        "type": "MSSQL",
        "z": "8d95a7b948833323",
        "g": "c0d48184165b7341",
        "mssqlCN": "df8c0b88.91b0a8",
        "name": "insert -1",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": "0",
        "query": "INSERT INTO [bfc].[dbo].[tb_BFC_Eixos_Analise]\r\n\r\n\t  SELECT CAST(DATEADD(HOUR, -4, E.BFC_TIMESTAMP) as DATE) as 'timestamp-4h',\r\n\t\t     (SELECT RIGHT(M.BFC_CLIENT_ID,6) FROM [bfc].[dbo].[bfc_sources] M WHERE M.ID=E.BFC_SOURCE_ID) as maquina,\r\n\t\t     '{{bfc.eixo}}' as eixo, \r\n\t\t     AVG(E.DATAPOINT_Torque) as torque,\r\n\t\t     AVG(E.DATAPOINT_TemperaturaMotor) as temperatura,\r\n\t\t     '{{bfc.rBy}}' as rBy,\r\n  \t\t     GETDATE() as rDt\r\n\t    FROM [bfc].[DBO].[DATASET_Eixo_{{bfc.eixo}}] E\r\n\t   WHERE E.DATAPOINT_Torque>0.3\r\n\t     and CAST(DATEADD(HOUR, -4, E.BFC_TIMESTAMP) as DATE)=DATEADD(DAY, -1, CAST(GETDATE() as DATE))\r\n\tGROUP BY CAST(DATEADD(HOUR, -4, E.BFC_TIMESTAMP) as DATE), E.BFC_SOURCE_ID",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "parseMustache": true,
        "params": [],
        "x": 570,
        "y": 210,
        "wires": [
            [
                "5ba75b8c442a0c20",
                "4f65489ce1232e59"
            ]
        ]
    },
    {
        "id": "3c8820ad99ee3db1",
        "type": "link in",
        "z": "8d95a7b948833323",
        "g": "c0d48184165b7341",
        "name": "link in 1h",
        "links": [
            "abad12cebc25b9cf",
            "865e7c18ad4687ba"
        ],
        "x": 135,
        "y": 210,
        "wires": [
            [
                "497e56d1e1d9b6b0"
            ]
        ]
    },
    {
        "id": "ef112969a0e90c86",
        "type": "link in",
        "z": "8d95a7b948833323",
        "g": "ddf5bf871e97d8c5",
        "name": "link in 07h55-16h55",
        "links": [
            "2da30dba0e83c128"
        ],
        "x": 135,
        "y": 550,
        "wires": [
            [
                "74a0eda06b86e321"
            ]
        ],
        "info": "SEG-SEX\r\n6H55-22H55\r\nA CADA HORA"
    },
    {
        "id": "5ba75b8c442a0c20",
        "type": "debug",
        "z": "8d95a7b948833323",
        "g": "c0d48184165b7341",
        "name": "debug -1",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 210,
        "wires": []
    },
    {
        "id": "ba2cf73d0d78aeb1",
        "type": "MSSQL",
        "z": "8d95a7b948833323",
        "g": "35261a274d126ca8",
        "mssqlCN": "df8c0b88.91b0a8",
        "name": "delete sp",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": "0",
        "query": "\r\n    DELETE FROM [bfc].[dbo].[tb_BFC_Eixos_Analise]\r\n          WHERE CAST(dt as DATE) NOT IN ( SELECT DATEADD(DAY, CAST(RIGHT(PRD_PR, 2) as INT) - 1, CONVERT(DATE, PRD_DMES, 103)) as DIA\r\n                                            FROM [Indicadores].[DBO].[tbPrdDia] UNPIVOT (PRD FOR PRD_PR IN (PRD_PR01,PRD_PR02,PRD_PR03,PRD_PR04,PRD_PR05,PRD_PR06,PRD_PR07,PRD_PR08,PRD_PR09,PRD_PR10,PRD_PR11,PRD_PR12,PRD_PR13,PRD_PR14,PRD_PR15,PRD_PR16,PRD_PR17,PRD_PR18,PRD_PR19,PRD_PR20,PRD_PR21,PRD_PR22,PRD_PR23,PRD_PR24,PRD_PR25,PRD_PR26,PRD_PR27,PRD_PR28,PRD_PR29,PRD_PR30,PRD_PR31)) as UnpivotedData\r\n                                           WHERE PRD>0\r\n                                             and PRD_DPTM='Bloco Acteon/X10/X12'\r\n                                             and CONVERT(DATE, PRD_DMES, 103)>='2022-10-01')",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "parseMustache": true,
        "params": [],
        "x": 240,
        "y": 380,
        "wires": [
            [
                "1e5a029b2e415bdb"
            ]
        ]
    },
    {
        "id": "063afd3e386a68c9",
        "type": "link in",
        "z": "8d95a7b948833323",
        "g": "35261a274d126ca8",
        "name": "link in 07h50-08h50",
        "links": [
            "8670a8eab73710c5"
        ],
        "x": 135,
        "y": 380,
        "wires": [
            [
                "ba2cf73d0d78aeb1"
            ]
        ]
    },
    {
        "id": "3eb2779ba9c273db",
        "type": "function",
        "z": "8d95a7b948833323",
        "g": "ddf5bf871e97d8c5",
        "name": "function",
        "func": "\nif (msg.bfc.qtd == 6) { msg.bfc.qtd = 7 }\nif (msg.bfc.qtd == 5) { msg.bfc.qtd = 6 }\nif (msg.bfc.qtd == 4) { msg.bfc.qtd = 5 }\nif (msg.bfc.qtd == 3) { msg.bfc.qtd = 4 }\nif (msg.bfc.qtd == 2) { msg.bfc.qtd = 3 }\nif (msg.bfc.qtd == 1) { msg.bfc.qtd = 2 }\nif (msg.bfc.qtd == 0) { msg.bfc.qtd = 1 }\n\nif (msg.bfc.qtd == 1) { msg.bfc.eixo = \"B\" }\nif (msg.bfc.qtd == 2) { msg.bfc.eixo = \"Magazine\" }\nif (msg.bfc.qtd == 3) { msg.bfc.eixo = \"Spindle\" }\nif (msg.bfc.qtd == 4) { msg.bfc.eixo = \"X\" }\nif (msg.bfc.qtd == 5) { msg.bfc.eixo = \"Y\" }\nif (msg.bfc.qtd == 6) { msg.bfc.eixo = \"Z\" }\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 550,
        "wires": [
            [
                "47b3c16ad07d79cd"
            ]
        ]
    },
    {
        "id": "070f245056124caa",
        "type": "switch",
        "z": "8d95a7b948833323",
        "g": "ddf5bf871e97d8c5",
        "name": "",
        "property": "bfc.qtd",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lte",
                "v": "5",
                "vt": "num"
            },
            {
                "t": "gte",
                "v": "6",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 490,
        "y": 620,
        "wires": [
            [
                "3eb2779ba9c273db"
            ],
            [
                "7a70066f86c06821"
            ]
        ]
    },
    {
        "id": "51d215a0c6cb8442",
        "type": "MSSQL",
        "z": "8d95a7b948833323",
        "g": "35261a274d126ca8",
        "mssqlCN": "df8c0b88.91b0a8",
        "name": "insert -0",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": "0",
        "query": "INSERT INTO [bfc].[dbo].[tb_BFC_Eixos_Analise]\r\n\r\n\t  SELECT CAST(DATEADD(HOUR, -4, E.BFC_TIMESTAMP) as DATE) as 'timestamp-4h',\r\n\t\t     (SELECT RIGHT(M.BFC_CLIENT_ID,6) FROM [bfc].[dbo].[bfc_sources] M WHERE M.ID=E.BFC_SOURCE_ID) as maquina,\r\n\t\t     '{{bfc.eixo}}' as eixo, \r\n\t\t     AVG(E.DATAPOINT_Torque) as torque,\r\n\t\t     AVG(E.DATAPOINT_TemperaturaMotor) as temperatura,\r\n\t\t     '{{bfc.rBy}}' as rBy,\r\n  \t\t     GETDATE() as rDt\r\n\t    FROM [bfc].[DBO].[DATASET_Eixo_{{bfc.eixo}}] E\r\n\t   WHERE E.DATAPOINT_Torque>0.3\r\n\t     and CAST(DATEADD(HOUR, -4, E.BFC_TIMESTAMP) as DATE)>=DATEADD(DAY, -0, CAST(GETDATE() as DATE))\r\n\tGROUP BY CAST(DATEADD(HOUR, -4, E.BFC_TIMESTAMP) as DATE), E.BFC_SOURCE_ID",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "parseMustache": true,
        "params": [],
        "x": 570,
        "y": 380,
        "wires": [
            [
                "4494d74c78d1d0ed"
            ]
        ]
    },
    {
        "id": "1e5a029b2e415bdb",
        "type": "function",
        "z": "8d95a7b948833323",
        "g": "35261a274d126ca8",
        "name": "function",
        "func": "\nif (msg.bfc.qtd == 6) { msg.bfc.qtd = 7 };\nif (msg.bfc.qtd == 5) { msg.bfc.qtd = 6 };\nif (msg.bfc.qtd == 4) { msg.bfc.qtd = 5 };\nif (msg.bfc.qtd == 3) { msg.bfc.qtd = 4 };\nif (msg.bfc.qtd == 2) { msg.bfc.qtd = 3 };\nif (msg.bfc.qtd == 1) { msg.bfc.qtd = 2 };\nif (msg.bfc.qtd == 0) { msg.bfc.qtd = 1 };\n\nif (msg.bfc.qtd == 1) { msg.bfc.eixo = \"B\" };\nif (msg.bfc.qtd == 2) { msg.bfc.eixo = \"Magazine\" };\nif (msg.bfc.qtd == 3) { msg.bfc.eixo = \"Spindle\" };\nif (msg.bfc.qtd == 4) { msg.bfc.eixo = \"X\" };\nif (msg.bfc.qtd == 5) { msg.bfc.eixo = \"Y\" };\nif (msg.bfc.qtd == 6) { msg.bfc.eixo = \"Z\" };\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 380,
        "wires": [
            [
                "51d215a0c6cb8442"
            ]
        ]
    },
    {
        "id": "4494d74c78d1d0ed",
        "type": "switch",
        "z": "8d95a7b948833323",
        "g": "35261a274d126ca8",
        "name": "",
        "property": "bfc.qtd",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lte",
                "v": "5",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 490,
        "y": 450,
        "wires": [
            [
                "1e5a029b2e415bdb"
            ]
        ]
    },
    {
        "id": "99f33592778fc1e0",
        "type": "function",
        "z": "8d95a7b948833323",
        "g": "7ebbd73b8eb97286",
        "name": "function",
        "func": "\nif (msg.bfc.qtd == 6) { msg.bfc.qtd = 7 }\nif (msg.bfc.qtd == 5) { msg.bfc.qtd = 6 }\nif (msg.bfc.qtd == 4) { msg.bfc.qtd = 5 }\nif (msg.bfc.qtd == 3) { msg.bfc.qtd = 4 }\nif (msg.bfc.qtd == 2) { msg.bfc.qtd = 3 }\nif (msg.bfc.qtd == 1) { msg.bfc.qtd = 2 }\nif (msg.bfc.qtd == 0) { msg.bfc.qtd = 1 }\n\nif (msg.bfc.qtd == 1) { msg.bfc.eixo = \"B\" }\nif (msg.bfc.qtd == 2) { msg.bfc.eixo = \"Magazine\" }\nif (msg.bfc.qtd == 3) { msg.bfc.eixo = \"Spindle\" }\nif (msg.bfc.qtd == 4) { msg.bfc.eixo = \"X\" }\nif (msg.bfc.qtd == 5) { msg.bfc.eixo = \"Y\" }\nif (msg.bfc.qtd == 6) { msg.bfc.eixo = \"Z\" }\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 1180,
        "wires": [
            [
                "7cafbca0e23e8014"
            ]
        ]
    },
    {
        "id": "19863325513562b9",
        "type": "switch",
        "z": "8d95a7b948833323",
        "g": "7ebbd73b8eb97286",
        "name": "",
        "property": "bfc.qtd",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lte",
                "v": "5",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 760,
        "y": 1240,
        "wires": [
            [
                "99f33592778fc1e0"
            ]
        ]
    },
    {
        "id": "81bc2b2c91deea08",
        "type": "function",
        "z": "8d95a7b948833323",
        "g": "6c38c6d6d627b2fe",
        "name": "function",
        "func": "\nif (msg.bfc.qtd == 6) { msg.bfc.qtd = 7 }\nif (msg.bfc.qtd == 5) { msg.bfc.qtd = 6 }\nif (msg.bfc.qtd == 4) { msg.bfc.qtd = 5 }\nif (msg.bfc.qtd == 3) { msg.bfc.qtd = 4 }\nif (msg.bfc.qtd == 2) { msg.bfc.qtd = 3 }\nif (msg.bfc.qtd == 1) { msg.bfc.qtd = 2 }\nif (msg.bfc.qtd == 0) { msg.bfc.qtd = 1 }\n\nif (msg.bfc.qtd == 1) { msg.bfc.eixo = \"B\" }\nif (msg.bfc.qtd == 2) { msg.bfc.eixo = \"Magazine\" }\nif (msg.bfc.qtd == 3) { msg.bfc.eixo = \"Spindle\" }\nif (msg.bfc.qtd == 4) { msg.bfc.eixo = \"X\" }\nif (msg.bfc.qtd == 5) { msg.bfc.eixo = \"Y\" }\nif (msg.bfc.qtd == 6) { msg.bfc.eixo = \"Z\" }\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 1020,
        "wires": [
            [
                "94afafd8b29e24a5"
            ]
        ]
    },
    {
        "id": "105e66d5b9b52d8d",
        "type": "switch",
        "z": "8d95a7b948833323",
        "g": "6c38c6d6d627b2fe",
        "name": "",
        "property": "bfc.qtd",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lte",
                "v": "5",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 600,
        "y": 1080,
        "wires": [
            [
                "81bc2b2c91deea08"
            ]
        ]
    },
    {
        "id": "94afafd8b29e24a5",
        "type": "MSSQL",
        "z": "8d95a7b948833323",
        "g": "6c38c6d6d627b2fe",
        "mssqlCN": "df8c0b88.91b0a8",
        "name": "insert -30",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": "0",
        "query": "INSERT INTO [bfc].[dbo].[tb_BFC_Eixos_Analise]\r\n\r\n\t  SELECT CAST(DATEADD(HOUR, -4, E.BFC_TIMESTAMP) as DATE) as 'timestamp-4h',\r\n\t\t     (SELECT RIGHT(M.BFC_CLIENT_ID,6) FROM [bfc].[dbo].[bfc_sources] M WHERE M.ID=E.BFC_SOURCE_ID) as maquina,\r\n\t\t     '{{bfc.eixo}}' as eixo, \r\n\t\t     AVG(E.DATAPOINT_Torque) as torque,\r\n\t\t     AVG(E.DATAPOINT_TemperaturaMotor) as temperatura,\r\n\t\t     '{{bfc.rBy}}' as rBy,\r\n  \t\t     GETDATE() as rDt\r\n\t    FROM [bfc].[DBO].[DATASET_Eixo_{{bfc.eixo}}] E\r\n\t   WHERE E.DATAPOINT_Torque>0.3\r\n\t     and CAST(DATEADD(HOUR, -4, E.BFC_TIMESTAMP) as DATE)>=DATEADD(DAY, -30, CAST(GETDATE() as DATE))\r\n\tGROUP BY CAST(DATEADD(HOUR, -4, E.BFC_TIMESTAMP) as DATE), E.BFC_SOURCE_ID",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "parseMustache": true,
        "params": [],
        "x": 680,
        "y": 1020,
        "wires": [
            [
                "5d241a6ec037c168",
                "105e66d5b9b52d8d"
            ]
        ]
    },
    {
        "id": "a75b78c59e9d7222",
        "type": "function",
        "z": "8d95a7b948833323",
        "g": "c0d48184165b7341",
        "name": "function",
        "func": "\nif (msg.bfc.qtd == 6) { msg.bfc.qtd = 7 };\nif (msg.bfc.qtd == 5) { msg.bfc.qtd = 6 };\nif (msg.bfc.qtd == 4) { msg.bfc.qtd = 5 };\nif (msg.bfc.qtd == 3) { msg.bfc.qtd = 4 };\nif (msg.bfc.qtd == 2) { msg.bfc.qtd = 3 };\nif (msg.bfc.qtd == 1) { msg.bfc.qtd = 2 };\nif (msg.bfc.qtd == 0) { msg.bfc.qtd = 1 };\n\nif (msg.bfc.qtd == 1) { msg.bfc.eixo = \"B\" };\nif (msg.bfc.qtd == 2) { msg.bfc.eixo = \"Magazine\" };\nif (msg.bfc.qtd == 3) { msg.bfc.eixo = \"Spindle\" };\nif (msg.bfc.qtd == 4) { msg.bfc.eixo = \"X\" };\nif (msg.bfc.qtd == 5) { msg.bfc.eixo = \"Y\" };\nif (msg.bfc.qtd == 6) { msg.bfc.eixo = \"Z\" };\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 210,
        "wires": [
            [
                "4cacd576c28ead7f"
            ]
        ]
    },
    {
        "id": "4f65489ce1232e59",
        "type": "switch",
        "z": "8d95a7b948833323",
        "g": "c0d48184165b7341",
        "name": "",
        "property": "bfc.qtd",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lte",
                "v": "5",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 490,
        "y": 280,
        "wires": [
            [
                "a75b78c59e9d7222"
            ]
        ]
    },
    {
        "id": "453e0b843fc15f18",
        "type": "inject",
        "z": "8d95a7b948833323",
        "g": "73a12f5b27a97da1",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "bfc.qtd",
                "v": "0",
                "vt": "num"
            },
            {
                "p": "bfc.rBy",
                "v": "Manual",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 130,
        "wires": [
            []
        ]
    },
    {
        "id": "291ba03c40b8240c",
        "type": "comment",
        "z": "8d95a7b948833323",
        "g": "73a12f5b27a97da1",
        "name": "Sistema de Notificação dos Dados Coletados pelo Brownfield",
        "info": "",
        "x": 280,
        "y": 70,
        "wires": []
    },
    {
        "id": "f95c7a84acb38afe",
        "type": "MSSQL",
        "z": "8d95a7b948833323",
        "g": "4b48a58bc4aeeb24",
        "mssqlCN": "df8c0b88.91b0a8",
        "name": "delete -0",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": "0",
        "query": "DELETE FROM [bfc].[dbo].[tb_BFC_Eixos_Analise] WHERE dt>=DATEADD(DAY, -0, CAST(GETDATE() AS DATE))",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "parseMustache": true,
        "params": [],
        "x": 360,
        "y": 860,
        "wires": [
            [
                "e44db20fbabf8456"
            ]
        ]
    },
    {
        "id": "70f45a2f1ba1dd51",
        "type": "debug",
        "z": "8d95a7b948833323",
        "g": "4b48a58bc4aeeb24",
        "name": "debug -0",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "bfc.qtd",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 860,
        "wires": []
    },
    {
        "id": "054e00923b449c7f",
        "type": "inject",
        "z": "8d95a7b948833323",
        "g": "4b48a58bc4aeeb24",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "bfc.qtd",
                "v": "0",
                "vt": "num"
            },
            {
                "p": "bfc.rBy",
                "v": "Manual",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 860,
        "wires": [
            [
                "f95c7a84acb38afe"
            ]
        ]
    },
    {
        "id": "e44db20fbabf8456",
        "type": "function",
        "z": "8d95a7b948833323",
        "g": "4b48a58bc4aeeb24",
        "name": "function",
        "func": "\nif (msg.bfc.qtd == 6) { msg.bfc.qtd = 7 }\nif (msg.bfc.qtd == 5) { msg.bfc.qtd = 6 }\nif (msg.bfc.qtd == 4) { msg.bfc.qtd = 5 }\nif (msg.bfc.qtd == 3) { msg.bfc.qtd = 4 }\nif (msg.bfc.qtd == 2) { msg.bfc.qtd = 3 }\nif (msg.bfc.qtd == 1) { msg.bfc.qtd = 2 }\nif (msg.bfc.qtd == 0) { msg.bfc.qtd = 1 }\n\nif (msg.bfc.qtd == 1) { msg.bfc.eixo = \"B\" }\nif (msg.bfc.qtd == 2) { msg.bfc.eixo = \"Magazine\" }\nif (msg.bfc.qtd == 3) { msg.bfc.eixo = \"Spindle\" }\nif (msg.bfc.qtd == 4) { msg.bfc.eixo = \"X\" }\nif (msg.bfc.qtd == 5) { msg.bfc.eixo = \"Y\" }\nif (msg.bfc.qtd == 6) { msg.bfc.eixo = \"Z\" }\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 860,
        "wires": [
            [
                "7f1ebf0394b0723d"
            ]
        ]
    },
    {
        "id": "579d82fa607fb815",
        "type": "switch",
        "z": "8d95a7b948833323",
        "g": "4b48a58bc4aeeb24",
        "name": "",
        "property": "bfc.qtd",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lte",
                "v": "5",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 600,
        "y": 920,
        "wires": [
            [
                "e44db20fbabf8456"
            ]
        ]
    },
    {
        "id": "7f1ebf0394b0723d",
        "type": "MSSQL",
        "z": "8d95a7b948833323",
        "g": "4b48a58bc4aeeb24",
        "mssqlCN": "df8c0b88.91b0a8",
        "name": "insert -0",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": "0",
        "query": "INSERT INTO [bfc].[dbo].[tb_BFC_Eixos_Analise]\r\n\r\n\t  SELECT CAST(DATEADD(HOUR, -4, E.BFC_TIMESTAMP) as DATE) as 'timestamp-4h',\r\n\t\t     (SELECT RIGHT(M.BFC_CLIENT_ID,6) FROM [bfc].[dbo].[bfc_sources] M WHERE M.ID=E.BFC_SOURCE_ID) as maquina,\r\n\t\t     '{{bfc.eixo}}' as eixo, \r\n\t\t     AVG(E.DATAPOINT_Torque) as torque,\r\n\t\t     AVG(E.DATAPOINT_TemperaturaMotor) as temperatura,\r\n\t\t     '{{bfc.rBy}}' as rBy,\r\n  \t\t     GETDATE() as rDt\r\n\t    FROM [bfc].[DBO].[DATASET_Eixo_{{bfc.eixo}}] E\r\n\t   WHERE E.DATAPOINT_Torque>0.3\r\n\t     and CAST(DATEADD(HOUR, -4, E.BFC_TIMESTAMP) as DATE)>=DATEADD(DAY, -0, CAST(GETDATE() as DATE))\r\n\tGROUP BY CAST(DATEADD(HOUR, -4, E.BFC_TIMESTAMP) as DATE), E.BFC_SOURCE_ID",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "parseMustache": true,
        "params": [],
        "x": 680,
        "y": 860,
        "wires": [
            [
                "70f45a2f1ba1dd51",
                "579d82fa607fb815"
            ]
        ]
    },
    {
        "id": "b1e5fc71229cd32e",
        "type": "chatbot-telegram-receive",
        "z": "da850aca2b690860",
        "bot": "3deb2ea155d454a2",
        "botProduction": "3deb2ea155d454a2",
        "x": 130,
        "y": 60,
        "wires": [
            [
                "85071eb92baf4d67"
            ]
        ]
    },
    {
        "id": "fb763210eb1017e9",
        "type": "MSSQL",
        "z": "da850aca2b690860",
        "mssqlCN": "df8c0b88.91b0a8",
        "name": "select_SQL",
        "outField": "payload.valor",
        "returnType": 0,
        "throwErrors": "0",
        "query": "SELECT ('FTT = ' + Format({{payload.coluna}},'0.00%')) as resultado\r\n  FROM [Indicadores].[DBO].[vwTabFTT] \r\n WHERE depart='{{payload.linha}}'",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "parseMustache": true,
        "params": [],
        "x": 690,
        "y": 140,
        "wires": [
            [
                "dcbfe6242f35b99e"
            ]
        ]
    },
    {
        "id": "eecb5ee164645bf4",
        "type": "function",
        "z": "da850aca2b690860",
        "name": "function",
        "func": "\nvar erro, erroDesc\n\n    erro = 0\n    erroDesc = 0\n\nmsg.payload.mes = new Date().getUTCMonth() + 1;\nmsg.payload.ano = new Date().getFullYear();\n\n\n// VERIFICAR INDICADOR\n\nif (msg.originalMessage.text.toUpperCase().match(\"FTT\")) { \n          msg.payload.indicador = \"FTT\"; \n          msg.payload.coluna = 'a' + msg.payload.ano + 'm' + (msg.payload.mes).toString().padStart(2, '0'); \n     }\n     else if (msg.originalMessage.text.toUpperCase().match(\"OEE\".toUpperCase())) {\n          msg.payload.indicador = \"OEE\";\n     }\n     else { erro = 1;\n            erroDesc = \"Indicador não encontrado!\";}\n\n\n// VERIFICAR LINHA DE PRODUÇÃO\n\nif (msg.originalMessage.text.toUpperCase().match(\"D08\")) { msg.payload.linha = \"Montagem D08\"; msg.payload.cel = 4; }\nelse if (msg.originalMessage.text.toUpperCase().match(\"D26\")) { msg.payload.linha = \"Montagem D26\"; msg.payload.cel = 14; }\nelse if (msg.originalMessage.text.toUpperCase().match(\"BBB\")) { msg.payload.linha = \"Bloco Big Bore\"; msg.payload.cel = 13; }\nelse if (msg.originalMessage.text.toUpperCase().match(\"BAC\")) { msg.payload.linha = \"Bloco Acteon\"; msg.payload.cel = 6; }\nelse if (msg.originalMessage.text.toUpperCase().match(\"BX1\")) { msg.payload.linha = \"Bloco X10\"; msg.payload.cel = 2; }\nelse if (msg.originalMessage.text.toUpperCase().match(\"CAB\")) { msg.payload.linha = \"Cabeçote\"; msg.payload.cel = 9; }\nelse if (msg.originalMessage.text.toUpperCase().match(\"GER\")) { msg.payload.linha = \"Gerador\"; msg.payload.cel = 12; }\n     else { erro = 1;\n               if (erroDesc == 0) { erroDesc = \"Linha de Produção não encontrada!\"; } else { erroDesc = erroDesc + \"\\n\" + \"Linha de Produção não encontrada!\";};}\n\n\n// VERIFICAR NÍVEL DE ACESSO\n\n       if (msg.payload.acesso != '') {\n          erro = erro;\n          }\n     else {\n          erro = 2;\n          erroDesc = \"Acesso restrito!\" + \"\\n\" + \"Favor contate o administrador!\";\n          msg.logs = {\n                     id: \"0002\",\n               mensagem: \"Acesso restrito.\",\n               pesquisa: msg.originalMessage.text}\n          };\n\n// MENSAGEM DE ERRO\n\n     msg.erro = {\n          id: erro,\n          desc: erroDesc\n     };\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 260,
        "wires": [
            [
                "c8d0c3ac1f51d244"
            ]
        ]
    },
    {
        "id": "bd6181233eec60c2",
        "type": "switch",
        "z": "da850aca2b690860",
        "name": "",
        "property": "payload.indicador",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "FTT",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "OEE",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": true,
        "outputs": 2,
        "x": 510,
        "y": 200,
        "wires": [
            [
                "fb763210eb1017e9"
            ],
            [
                "a6627eefb9c7a8a9"
            ]
        ]
    },
    {
        "id": "dcbfe6242f35b99e",
        "type": "function",
        "z": "da850aca2b690860",
        "name": "payload",
        "func": "\nmsg.payload = {\n    type: \"message\",\n    chatId: msg.originalMessage.from.id,\n    content: \"<b>\" + msg.payload.linha + \"</b>\" + \"\\n\" + msg.payload.valor[0].resultado,\n    options: {\n        parse_mode: \"HTML\"\n    }\n};\n\nmsg.logs = {\n    id: \"0000\",\n    mensagem: \"Consulta realizada com sucesso.\",\n    pesquisa: msg.originalMessage.text,\n    resultado: msg.payload.content\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 140,
        "wires": [
            [
                "4b11adfc89f61c76"
            ]
        ]
    },
    {
        "id": "845a79b9b8e366ba",
        "type": "function",
        "z": "da850aca2b690860",
        "name": "erro",
        "func": "\nmsg.payload = {\n    type: \"message\",\n    chatId: msg.originalMessage.from.id,\n    content: msg.erro.desc,\n    options: {\n        parse_mode: \"HTML\"\n    }\n};\n\nmsg.logs = {\n    id: \"0001\",\n    mensagem: \"Pesquisa com erro.\",\n    pesquisa: msg.originalMessage.text,\n    resultado: msg.payload.content\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 260,
        "wires": [
            [
                "585f9733247b6064"
            ]
        ]
    },
    {
        "id": "a6627eefb9c7a8a9",
        "type": "MSSQL",
        "z": "da850aca2b690860",
        "mssqlCN": "df8c0b88.91b0a8",
        "name": "select_SQL",
        "outField": "payload.valor",
        "returnType": 0,
        "throwErrors": "0",
        "query": "\r\nSELECT ('OEE CORP = ' + OEE_CORP + CHAR(10) + 'OEE OPER = ' + OEE_OPER) as resultado\r\n\r\n  FROM (SELECT Format((D.DISP  *(IIF (D.PERF>1,1,D.PERF))*D.QUAL),'0.00%') AS OEE_CORP, \r\n\t\t\t   Format((D.DISP_C*(IIF (D.PERF>1,1,D.PERF))*D.QUAL),'0.00%') AS OEE_OPER\r\n\r\n\t\t  FROM (SELECT (SUM(HP)/SUM(HD)) AS DISP, (SUM(HP)+SUM(HVR))/SUM(HP) AS PERF, (SUM(PROD)-SUM(REJ))/SUM(PROD) AS QUAL, SUM(HP)/(SUM(HD)-ISNULL(SUM(PNO),0)) AS DISP_C\r\n\t\t\t\t  FROM vwPCP_STP_CON_M\r\n\t\t\t\t WHERE CEL IN ({{payload.cel}}) AND MES={{payload.mes}} AND ANO={{payload.ano}}) D ) R",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "parseMustache": true,
        "params": [],
        "x": 690,
        "y": 200,
        "wires": [
            [
                "dcbfe6242f35b99e"
            ]
        ]
    },
    {
        "id": "c8d0c3ac1f51d244",
        "type": "switch",
        "z": "da850aca2b690860",
        "name": "",
        "property": "erro.id",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": true,
        "outputs": 3,
        "x": 370,
        "y": 260,
        "wires": [
            [
                "bd6181233eec60c2"
            ],
            [
                "845a79b9b8e366ba"
            ],
            [
                "51d9fcca44bc4696"
            ]
        ]
    },
    {
        "id": "60583e6ef59c4d97",
        "type": "debug",
        "z": "da850aca2b690860",
        "name": "debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1170,
        "y": 740,
        "wires": []
    },
    {
        "id": "93450a3bb4d25db2",
        "type": "function",
        "z": "da850aca2b690860",
        "name": "logsAcesso",
        "func": "msg.payload = {\n    type: \"message\",\n    chatId: 919886719,\n    content: \"Acesso restrito!\" + \"\\n\" +\n             \"ID: \" + msg.originalMessage.from.id + \"\\n\" +\n             \"Is Bot: \" + msg.originalMessage.from.is_bot + \"\\n\" +\n             \"Usuário: \" + msg.originalMessage.from.username + \"\\n\" +\n             \"Nome: \" + msg.originalMessage.from.first_name + \" \" + msg.originalMessage.from.last_name,\n    options: {\n        parse_mode: \"HTML\"\n    }\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 300,
        "wires": [
            [
                "ecbb6cd1c57713f7"
            ]
        ]
    },
    {
        "id": "4b11adfc89f61c76",
        "type": "link out",
        "z": "da850aca2b690860",
        "name": "sender e log out 1",
        "mode": "link",
        "links": [
            "77a24a935a66d3e7",
            "cd6a6f484bc47ce0",
            "35d78362f3b7ad60"
        ],
        "x": 965,
        "y": 140,
        "wires": []
    },
    {
        "id": "ecbb6cd1c57713f7",
        "type": "link out",
        "z": "da850aca2b690860",
        "name": "sender out 3",
        "mode": "link",
        "links": [
            "cd6a6f484bc47ce0",
            "35d78362f3b7ad60"
        ],
        "x": 815,
        "y": 300,
        "wires": []
    },
    {
        "id": "57d32b44ae955d49",
        "type": "MSSQL",
        "z": "da850aca2b690860",
        "mssqlCN": "df8c0b88.91b0a8",
        "name": "insert",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": "0",
        "query": "\r\n    INSERT INTO [INDICADORES].[DBO].[tb_Telegram_Logs] (code, mensagem, pesquisa, resultado, userID, isBot, nome, rBy, rDt, rSt)\r\n    VALUES (\r\n        '{{logs.id}}',\r\n        REPLACE(REPLACE(REPLACE(REPLACE('{{logs.mensagem}}','&#x3D;','='),'&#x2F;','/'),'&lt;b&gt;','*'),'&lt;/b&gt;','*'),\r\n        REPLACE(REPLACE(REPLACE(REPLACE('{{logs.pesquisa}}','&#x3D;','='),'&#x2F;','/'),'&lt;b&gt;','*'),'&lt;/b&gt;','*'),\r\n        REPLACE(REPLACE(REPLACE(REPLACE('{{logs.resultado}}','&#x3D;','='),'&#x2F;','/'),'&lt;b&gt;','*'),'&lt;/b&gt;','*'),\r\n        '{{originalMessage.from.id}}',\r\n        UPPER(LEFT('{{originalMessage.from.is_bot}}', 1)) + LOWER(RIGHT('{{originalMessage.from.is_bot}}', LEN('{{originalMessage.from.is_bot}}') - 1)),\r\n        '{{originalMessage.from.first_name}} {{originalMessage.from.last_name}}',\r\n        'Servidor Node-RED',\r\n        GETDATE(),\r\n        'spnodered');    ",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "parseMustache": true,
        "params": [],
        "x": 670,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "77a24a935a66d3e7",
        "type": "link in",
        "z": "da850aca2b690860",
        "name": "log in 2",
        "links": [
            "4b11adfc89f61c76",
            "c9863ec6aa7ee670",
            "376968a7654905bf"
        ],
        "x": 545,
        "y": 340,
        "wires": [
            [
                "57d32b44ae955d49"
            ]
        ]
    },
    {
        "id": "6ec32a07575ebc3e",
        "type": "link out",
        "z": "da850aca2b690860",
        "name": "sender out 2",
        "mode": "link",
        "links": [
            "cd6a6f484bc47ce0",
            "35d78362f3b7ad60"
        ],
        "x": 895,
        "y": 240,
        "wires": []
    },
    {
        "id": "585f9733247b6064",
        "type": "switch",
        "z": "da850aca2b690860",
        "name": "",
        "property": "erro.id",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": true,
        "outputs": 2,
        "x": 790,
        "y": 260,
        "wires": [
            [
                "c9863ec6aa7ee670",
                "6ec32a07575ebc3e"
            ],
            [
                "6ec32a07575ebc3e"
            ]
        ]
    },
    {
        "id": "c9863ec6aa7ee670",
        "type": "link out",
        "z": "da850aca2b690860",
        "name": "log out ",
        "mode": "link",
        "links": [
            "77a24a935a66d3e7"
        ],
        "x": 895,
        "y": 280,
        "wires": []
    },
    {
        "id": "7163584e3f56f38e",
        "type": "chatbot-telegram-menu",
        "z": "da850aca2b690860",
        "bot": "3deb2ea155d454a2",
        "items": [
            {
                "command": "fttd08",
                "description": "FTT D08"
            },
            {
                "command": "fttd26",
                "description": "FTT D26"
            },
            {
                "command": "oeebac",
                "description": "OEE Bloco Acteon"
            },
            {
                "command": "oeebbb",
                "description": "OEE Bloco Big Bore"
            },
            {
                "command": "oeebx1",
                "description": "OEE Bloco X10"
            },
            {
                "command": "oeecab",
                "description": "OEE Cabeçote"
            },
            {
                "command": "oeed08",
                "description": "OEE D08"
            },
            {
                "command": "oeed26",
                "description": "OEE D26"
            },
            {
                "command": "oeeger",
                "description": "OEE Gerador"
            }
        ],
        "x": 240,
        "y": 140,
        "wires": []
    },
    {
        "id": "c5106ced2af2139b",
        "type": "chatbot-ask",
        "z": "da850aca2b690860",
        "name": "",
        "buttons": [
            {
                "type": "keyboardButton",
                "label": "FTT D08"
            },
            {
                "type": "keyboardButton",
                "label": "FTT D26"
            },
            {
                "type": "newline"
            },
            {
                "type": "keyboardButton",
                "label": "OEE BBB"
            },
            {
                "type": "keyboardButton",
                "label": "OEE BX1"
            },
            {
                "type": "keyboardButton",
                "label": "OEE CAB"
            },
            {
                "type": "newline"
            },
            {
                "type": "keyboardButton",
                "label": "OEE D08"
            },
            {
                "type": "keyboardButton",
                "label": "OEE D26"
            },
            {
                "type": "keyboardButton",
                "label": "OEE Gerador"
            }
        ],
        "message": "Resultado:",
        "isPersistent": false,
        "oneTimeKeyboard": true,
        "placeholder": "Pesquisa:",
        "x": 260,
        "y": 200,
        "wires": [
            [
                "e81a27e58ba0aec2"
            ]
        ]
    },
    {
        "id": "85071eb92baf4d67",
        "type": "function",
        "z": "da850aca2b690860",
        "name": "function",
        "func": "\n// VERIFICAR PLATAFORMA\n\nif (msg.originalMessage.text.toUpperCase().match(\"8D\")) { \n          msg.payload.plataforma = \"8D\";\n          msg.payload.consulta = msg.originalMessage.text.toUpperCase().replace(\"8D \",\"\");\n     }\nelse { \n     msg.payload.plataforma = \"Indicador\";\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 60,
        "wires": [
            [
                "6d3b09cc34a97f4d"
            ]
        ]
    },
    {
        "id": "125a47d858cf7b2a",
        "type": "switch",
        "z": "da850aca2b690860",
        "name": "",
        "property": "payload.plataforma",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Indicador",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "8D",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": true,
        "outputs": 2,
        "x": 590,
        "y": 60,
        "wires": [
            [
                "66aa59483774229b"
            ],
            [
                "60c1e5492a73ec64"
            ]
        ]
    },
    {
        "id": "60c1e5492a73ec64",
        "type": "link out",
        "z": "da850aca2b690860",
        "name": "8D out 1",
        "mode": "link",
        "links": [
            "1907215cf4052de8"
        ],
        "x": 685,
        "y": 80,
        "wires": []
    },
    {
        "id": "66aa59483774229b",
        "type": "link out",
        "z": "da850aca2b690860",
        "name": "indicador out 1",
        "mode": "link",
        "links": [
            "66923e17cac69844"
        ],
        "x": 685,
        "y": 40,
        "wires": []
    },
    {
        "id": "66923e17cac69844",
        "type": "link in",
        "z": "da850aca2b690860",
        "name": "indicador in 1",
        "links": [
            "66aa59483774229b"
        ],
        "x": 105,
        "y": 200,
        "wires": [
            [
                "7163584e3f56f38e",
                "c5106ced2af2139b",
                "eecb5ee164645bf4"
            ]
        ]
    },
    {
        "id": "1907215cf4052de8",
        "type": "link in",
        "z": "da850aca2b690860",
        "name": "8D in 1",
        "links": [
            "60c1e5492a73ec64"
        ],
        "x": 105,
        "y": 460,
        "wires": [
            [
                "a7bdfde760ef01fd"
            ]
        ]
    },
    {
        "id": "5be1abe0e1fc76e3",
        "type": "MSSQL",
        "z": "da850aca2b690860",
        "mssqlCN": "df8c0b88.91b0a8",
        "name": "select_SQL",
        "outField": "payload.valor",
        "returnType": 0,
        "throwErrors": "0",
        "query": "\r\n\tSELECT TOP 3 q.dtoc, q.id8d, q.id0d, q.title, q.descr, q.act0, q.act1, q.cli, q.ncomp, q.nqm, q.detec, q.classf, q.pts, q.tdoc, a.dtC, a.descr AS descr2\r\n\tFROM (\r\n\t\tSELECT id8d, id0d, (comp + ' ' + eft + ' ' + mdf) AS title, descr, act0, act1, (cli + '-' + fam) AS cli, ncomp, nqm, detec, classf, pts, tdoc, dtoc,\r\n\t\t\t   ROW_NUMBER() OVER (PARTITION BY id8d ORDER BY id0d DESC) AS rn\r\n\t\tFROM [QPortal].[dbo].[vw0D]\r\n\t\tWHERE id8d IS NOT NULL\r\n\t\t  AND status >= 4\r\n\t\t  AND (comp + ' ' + eft + ' ' + mdf) LIKE '%{{payload.consulta}}%'\r\n\t) AS q\r\n\tINNER JOIN (\r\n\t\tSELECT a.id8d, a.d, a.status, ISNULL(a.dtr, a.dtp) AS dtC, a.descr, a.tcausa, a.tstr, a.bp\r\n\t\tFROM [QPortal].[dbo].[tbAct] a\r\n\t\tWHERE a.[show] = 1\r\n\t\t  AND a.d = 4\r\n\t) AS a ON q.id8d = a.id8d\r\n\tWHERE q.rn = 1\r\n\tORDER BY q.dtoc DESC",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "parseMustache": true,
        "params": [],
        "x": 530,
        "y": 480,
        "wires": [
            [
                "812aabcb96733598"
            ]
        ]
    },
    {
        "id": "a7bdfde760ef01fd",
        "type": "function",
        "z": "da850aca2b690860",
        "name": "function",
        "func": "\nvar erro, erroDesc\n\n    erro = 0\n    erroDesc = 0\n\n// VERIFICAR NÍVEL DE ACESSO\n\n       if (msg.payload.acesso != '') {\n          erro = erro;\n          }\n     else {\n          erro = 2;\n          erroDesc = \"Acesso restrito!\" + \"\\n\" + \"Favor contate o administrador!\";\n          msg.logs = {\n                     id: \"0002\",\n               mensagem: \"Acesso restrito.\",\n               pesquisa: msg.originalMessage.text\n          }\n          };\n\n// MENSAGEM DE ERRO\n\n     msg.erro = {\n          id: erro,\n          desc: erroDesc\n     };\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 460,
        "wires": [
            [
                "5ae17739af5f6905"
            ]
        ]
    },
    {
        "id": "5ae17739af5f6905",
        "type": "switch",
        "z": "da850aca2b690860",
        "name": "",
        "property": "erro.id",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": true,
        "outputs": 2,
        "x": 370,
        "y": 460,
        "wires": [
            [
                "4f1f7facef208578"
            ],
            [
                "5be1abe0e1fc76e3"
            ]
        ]
    },
    {
        "id": "40f023d695347607",
        "type": "link in",
        "z": "da850aca2b690860",
        "name": "erro in 2",
        "links": [
            "4f1f7facef208578",
            "51d9fcca44bc4696"
        ],
        "x": 545,
        "y": 300,
        "wires": [
            [
                "845a79b9b8e366ba",
                "93450a3bb4d25db2",
                "57d32b44ae955d49"
            ]
        ]
    },
    {
        "id": "51d9fcca44bc4696",
        "type": "link out",
        "z": "da850aca2b690860",
        "name": "erro out 2",
        "mode": "link",
        "links": [
            "40f023d695347607"
        ],
        "x": 475,
        "y": 300,
        "wires": []
    },
    {
        "id": "4f1f7facef208578",
        "type": "link out",
        "z": "da850aca2b690860",
        "name": "erro out 2",
        "mode": "link",
        "links": [
            "40f023d695347607"
        ],
        "x": 475,
        "y": 440,
        "wires": []
    },
    {
        "id": "812aabcb96733598",
        "type": "function",
        "z": "da850aca2b690860",
        "name": "payload",
        "func": "\nvar content = \"\";\n\nfor (var i = 0; i < 5; i++) {\n\n    if (msg.payload.valor[i]) {\n\n        var dtC = msg.payload.valor[i].dtC;\n        if (dtC instanceof Date) {\n            var dia = String(dtC.getDate()).padStart(2, \"0\");\n            var mes = String(dtC.getMonth() + 1).padStart(2, \"0\");\n            var ano = dtC.getFullYear();\n            dtC = dia + \"/\" + mes + \"/\" + ano;\n        }\n\n        var dtoc = msg.payload.valor[i].dtoc;\n        if (dtoc instanceof Date) {\n            var dia = String(dtoc.getDate()).padStart(2, \"0\");\n            var mes = String(dtoc.getMonth() + 1).padStart(2, \"0\");\n            var ano = dtoc.getFullYear();\n            dtoc = dia + \"/\" + mes + \"/\" + ano;\n        }\n\n        var nqm = msg.payload.valor[i].nqm;\n        if (nqm == null) { nqm = \"Não associado.\" } else { nqm=msg.payload.valor[i].nqm }\n\n        content += '<b>-  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -</b>\\n' +\n                   '<b>                 8D:  ' + msg.payload.valor[i].id8d + '                 </b>\\n' +\n                   '<b>-  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -</b>\\n\\n' +\n            'D2 - OCORRÊNCIA' + \"\\n\\n\" +\n            '        ' + msg.payload.valor[i].title + \"\\n\" +\n            '        ' + msg.payload.valor[i].descr + \"\\n\" +\n            '        ' + msg.payload.valor[i].act0 + \"\\n\" +\n            '        ID: ' + msg.payload.valor[i].id0d + \"\\n\" +\n            '        Ocorrência: ' + dtoc + \"\\n\" +\n            '        Cliente: ' + msg.payload.valor[i].cli + \"\\n\" +\n            '        Componente: ' + msg.payload.valor[i].ncomp + \"\\n\" +\n            '        Nota QM: ' + nqm + \"\\n\" +\n            '        Nº Série: ' + msg.payload.valor[i].detec + \"\\n\\n\" +\n            'D4 - CAUSA RAIZ' + \"\\n\\n\" +\n            '        Concluído: ' + dtC + \"\\n\" +\n            '        Descrição: ' + msg.payload.valor[i].descr2 + \"\\n\\n\";\n}}\n\n     if (msg.payload.valor[2]) { content = \"TOP 3\" + \"\\n\\n\" + content }\nelse if (msg.payload.valor[1]) { content = \"TOP 2\" + \"\\n\\n\" + content }\nelse if (msg.payload.valor[0]) { content = \"TOP 1\" + \"\\n\\n\" + content }\nelse { content = \"Não foi encontrado ocorrências.\" }\n\nmsg.payload = {\n    type: \"message\",\n    chatId: msg.originalMessage.from.id,\n    content: content,\n    options: {\n        parse_mode: \"HTML\"\n    }\n};\n\nmsg.logs = {\n    id: \"0000\",\n    mensagem: \"Consulta realizada com sucesso.\",\n    pesquisa: msg.originalMessage.text,\n    resultado: msg.payload.content\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 480,
        "wires": [
            [
                "376968a7654905bf"
            ]
        ]
    },
    {
        "id": "376968a7654905bf",
        "type": "link out",
        "z": "da850aca2b690860",
        "name": "sender e log out 1",
        "mode": "link",
        "links": [
            "77a24a935a66d3e7",
            "cd6a6f484bc47ce0",
            "35d78362f3b7ad60"
        ],
        "x": 815,
        "y": 480,
        "wires": []
    },
    {
        "id": "e81a27e58ba0aec2",
        "type": "link out",
        "z": "da850aca2b690860",
        "name": "sender e log out 1",
        "mode": "link",
        "links": [
            "cd6a6f484bc47ce0",
            "35d78362f3b7ad60"
        ],
        "x": 415,
        "y": 200,
        "wires": []
    },
    {
        "id": "6d3b09cc34a97f4d",
        "type": "MSSQL",
        "z": "da850aca2b690860",
        "mssqlCN": "df8c0b88.91b0a8",
        "name": "acesso_SQL",
        "outField": "payload.acesso",
        "returnType": 0,
        "throwErrors": "0",
        "query": "SELECT telegramID \r\n  FROM [STANDARD].[DBO].[vwUserAcces] \r\n WHERE activeAccL='1' \r\n   and idPltf='58' \r\n   and telegramID='{{originalMessage.from.id}}'",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "parseMustache": true,
        "params": [],
        "x": 450,
        "y": 60,
        "wires": [
            [
                "125a47d858cf7b2a"
            ]
        ]
    },
    {
        "id": "2611a1c41780db94",
        "type": "http request",
        "z": "0ac66d5d81f31d24",
        "name": "Teams Teste",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://mwmmotores.webhook.office.com/webhookb2/cb4565f9-a839-4090-a5c5-6527706e3a00@a30a5e3a-3f99-4177-acce-19a1705d07e5/IncomingWebhook/a7ba971c33514d30a748621a5a65d84c/5fc65af6-23d3-48fa-a438-cdcd73aef0f0",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 870,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "997fb0edf05e6ceb",
        "type": "inject",
        "z": "0ac66d5d81f31d24",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 08 * * 1,2,3,4,5",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 80,
        "wires": [
            [
                "e9fa46bfd53d6323"
            ]
        ]
    },
    {
        "id": "e9fa46bfd53d6323",
        "type": "exec",
        "z": "0ac66d5d81f31d24",
        "command": "C:\\Node-RED\\IA_Maintenance\\doc\\email\\pendenciasNotaQM.py",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Pendências de Nota QM",
        "x": 350,
        "y": 80,
        "wires": [
            [
                "11806d44a7f16a99"
            ],
            [],
            []
        ]
    },
    {
        "id": "8532d3b2a2a0c86f",
        "type": "function",
        "z": "0ac66d5d81f31d24",
        "name": "error",
        "func": "\nmsg.payload =\n\n{\n    \"@type\": \"MessageCard\",\n    \"@context\": \"http://schema.org/extensions\",\n    \"themeColor\": \"E81123\",\n    \"summary\": \"Card\",\n    \"sections\": [{\n        \"activityTitle\": \"Erro ao enviar o e-mail de notificação de Pendência de Nota QM\",\n        \"facts\": [{\n            \"name\": \"\",\n            \"value\": msg.rc.message.split(\"\\n\")[0]\n        }, {\n            \"name\": \"\",\n            \"value\": msg.rc.message.split(\"\\n\")[1]\n        }, {\n            \"name\": \"\",\n            \"value\": msg.rc.message.split(\"\\n\")[2]\n        }, {\n            \"name\": \"\",\n            \"value\": msg.rc.message.split(\"\\n\")[3]\n        }, {\n            \"name\": \"\",\n            \"value\": msg.rc.message.split(\"\\n\")[4]\n        }],\n        \"markdown\": true\n    }]\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 100,
        "wires": [
            [
                "8bd2c87233c0d3d1"
            ]
        ]
    },
    {
        "id": "d3dd5ab130f6b3ec",
        "type": "function",
        "z": "0ac66d5d81f31d24",
        "name": "done",
        "func": "\nvar resultado = msg.payload.toString('latin1'); // Tente 'utf8', 'latin1', 'cp1252' ou outras codificações\n\nmsg.resultado = resultado;\n\nvar corDoTema;\n\n    if (resultado.startsWith(\"P\")) {\n        corDoTema = \"E81123\"; //vermelho\n    } else {\n        corDoTema = \"0076D7\"; //azul\n    }\n\nmsg.payload =\n{\n    \"@type\": \"MessageCard\",\n    \"@context\": \"http://schema.org/extensions\",\n    \"themeColor\": corDoTema,\n    \"summary\": \"Card\",\n    \"sections\": [{\n        \"activityTitle\": resultado,\n        \"markdown\": true\n    }]\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 60,
        "wires": [
            [
                "8bd2c87233c0d3d1"
            ]
        ]
    },
    {
        "id": "11806d44a7f16a99",
        "type": "switch",
        "z": "0ac66d5d81f31d24",
        "name": "",
        "property": "rc.code",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 550,
        "y": 80,
        "wires": [
            [
                "d3dd5ab130f6b3ec"
            ],
            [
                "8532d3b2a2a0c86f",
                "616c26eff5be8aaa"
            ]
        ]
    },
    {
        "id": "82259608689ff3b6",
        "type": "chatbot-telegram-send",
        "z": "0ac66d5d81f31d24",
        "bot": "3deb2ea155d454a2",
        "botProduction": "3deb2ea155d454a2",
        "track": false,
        "passThrough": false,
        "errorOutput": false,
        "outputs": 0,
        "x": 890,
        "y": 180,
        "wires": []
    },
    {
        "id": "616c26eff5be8aaa",
        "type": "function",
        "z": "0ac66d5d81f31d24",
        "name": "telegram",
        "func": "msg.payload = {\n    type: \"message\",\n    chatId: 919886719,\n    userId: 919886719,\n    chatbotId: \"\",\n    transport: \"telegram\",\n    content: \"Erro ao enviar o e-mail de notificação de Pendência de Nota QM\" + \"\\n\\n\" + msg.rc.message\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 140,
        "wires": [
            [
                "71f42105654097a4"
            ]
        ]
    },
    {
        "id": "71f42105654097a4",
        "type": "chatbot-conversation",
        "z": "0ac66d5d81f31d24",
        "name": "",
        "botDevelopment": "3deb2ea155d454a2",
        "botProduction": "",
        "chatId": "919886719",
        "userId": "",
        "transport": "telegram",
        "x": 870,
        "y": 140,
        "wires": [
            [
                "82259608689ff3b6"
            ]
        ]
    },
    {
        "id": "8bd2c87233c0d3d1",
        "type": "http request",
        "z": "0ac66d5d81f31d24",
        "name": "Teams Notas QM",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://mwmmotores.webhook.office.com/webhookb2/68572bac-adf4-42a8-9d65-5ea443ffd0ee@a30a5e3a-3f99-4177-acce-19a1705d07e5/IncomingWebhook/817484cc39e54a98a6dd9ab5090c3ec4/5fc65af6-23d3-48fa-a438-cdcd73aef0f0",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 890,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "37704ef1196e3610",
        "type": "debug",
        "z": "0ac66d5d81f31d24",
        "name": "debug 5",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 540,
        "y": 180,
        "wires": []
    },
    {
        "id": "e8fa736ca503cd43",
        "type": "http request",
        "z": "4775a8cea2097778",
        "name": "Microsoft Teams",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://mwmmotores.webhook.office.com/webhookb2/ab4a8636-e3a9-4e1f-888d-b724c28b3888@a30a5e3a-3f99-4177-acce-19a1705d07e5/IncomingWebhook/e5fec4d3dee4411891c3146df3342412/5fc65af6-23d3-48fa-a438-cdcd73aef0f0",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "basic",
        "senderr": false,
        "headers": [],
        "x": 340,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "f10d9d0e3f79efb7",
        "type": "http request",
        "z": "4775a8cea2097778",
        "name": "Microsoft Outlook",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://mwmmotores.webhook.office.com/webhookb2/8f9895e6-f106-415f-93dd-2b01088d2582@a30a5e3a-3f99-4177-acce-19a1705d07e5/IncomingWebhook/3e9442ea6141424cb098c9ef04c504ed/5fc65af6-23d3-48fa-a438-cdcd73aef0f0",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "basic",
        "senderr": false,
        "headers": [],
        "x": 350,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "12bc23f7dbf45611",
        "type": "comment",
        "z": "4775a8cea2097778",
        "name": "Canal > Brownfield Connectivity Gateway",
        "info": "# **Equipe**\n## Inteligência Artificial\n\n# **Canal**\n## Brownfield Connectivity Gateway",
        "x": 360,
        "y": 180,
        "wires": []
    },
    {
        "id": "046bf9e939f94f6c",
        "type": "link in",
        "z": "4775a8cea2097778",
        "name": "link in ia/bfc",
        "links": [
            "f24c3780e14db5cc",
            "7741ad516ab1fc0a",
            "c6843577ea641b20",
            "4a67ed79c9235f0b",
            "f2437abf214f00e9"
        ],
        "x": 215,
        "y": 220,
        "wires": [
            [
                "e8fa736ca503cd43",
                "f10d9d0e3f79efb7"
            ]
        ]
    },
    {
        "id": "cd6a6f484bc47ce0",
        "type": "link in",
        "z": "4775a8cea2097778",
        "name": "telegram sender in",
        "links": [
            "376968a7654905bf",
            "4b11adfc89f61c76",
            "6ec32a07575ebc3e",
            "e81a27e58ba0aec2",
            "ecbb6cd1c57713f7",
            "b1c6fad9280978d3",
            "0f65953c131c90fd",
            "b8d95353e36b4701",
            "434ac85082251ec6",
            "28be7dc621abb5e0",
            "4adffa0c0d8ffb43",
            "58a9e075495eaf2d",
            "d9c57225bce8f72c",
            "6c925db3da475408"
        ],
        "x": 215,
        "y": 100,
        "wires": [
            [
                "8a03c5b7697a7ba6"
            ]
        ]
    },
    {
        "id": "8a03c5b7697a7ba6",
        "type": "telegram sender",
        "z": "4775a8cea2097778",
        "name": "Telegram",
        "bot": "4cfddd026b08c0a4",
        "haserroroutput": false,
        "outputs": 1,
        "x": 320,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "18173909d21788ff",
        "type": "comment",
        "z": "4775a8cea2097778",
        "name": "Telegram",
        "info": "",
        "x": 260,
        "y": 60,
        "wires": []
    },
    {
        "id": "22f064c5141cab8f",
        "type": "http request",
        "z": "4775a8cea2097778",
        "name": "Microsoft Teams",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://mwmmotores.webhook.office.com/webhookb2/cb4565f9-a839-4090-a5c5-6527706e3a00@a30a5e3a-3f99-4177-acce-19a1705d07e5/IncomingWebhook/a7ba971c33514d30a748621a5a65d84c/5fc65af6-23d3-48fa-a438-cdcd73aef0f0",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "basic",
        "senderr": false,
        "headers": [],
        "x": 340,
        "y": 380,
        "wires": [
            []
        ],
        "info": "> # **Ambiente de Teste**\r\n\r\n---\r\n\r\n\r\n## **Equipe:**\r\n## Sistemas de Manufatura\r\n\r\n## **Canal:**\r\n## Teste Node-RED"
    },
    {
        "id": "2b2960f8893952fe",
        "type": "comment",
        "z": "4775a8cea2097778",
        "name": "Canal > Teste Node-RED",
        "info": "> # **Ambiente de Teste**\n\n---\n\n\n## **Equipe:**\n## Sistemas de Manufatura\n\n## **Canal:**\n## Teste Node-RED",
        "x": 310,
        "y": 340,
        "wires": []
    },
    {
        "id": "a80df77bff399117",
        "type": "link in",
        "z": "4775a8cea2097778",
        "name": "link in sm/teste",
        "links": [
            "7bd0f39ed263fd2d"
        ],
        "x": 215,
        "y": 380,
        "wires": [
            [
                "22f064c5141cab8f"
            ]
        ]
    },
    {
        "id": "5e52d8fdba0d826a",
        "type": "inject",
        "z": "6ade3aca4a2ae889",
        "name": "07h55",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "55 07 * * 1,2,3,4,5",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 320,
        "wires": [
            [
                "e16b9e704dddd3c4"
            ]
        ]
    },
    {
        "id": "c5973a4365787c41",
        "type": "inject",
        "z": "6ade3aca4a2ae889",
        "name": "08h55",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "55 08 * * 1,2,3,4,5",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 360,
        "wires": [
            [
                "e16b9e704dddd3c4"
            ]
        ]
    },
    {
        "id": "d3409461ac9ab0e0",
        "type": "inject",
        "z": "6ade3aca4a2ae889",
        "name": "09h55",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "55 09 * * 1,2,3,4,5",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 400,
        "wires": [
            [
                "e16b9e704dddd3c4"
            ]
        ]
    },
    {
        "id": "c8ebed9d75c6d87d",
        "type": "inject",
        "z": "6ade3aca4a2ae889",
        "name": "10h55",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "55 10 * * 1,2,3,4,5",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 440,
        "wires": [
            [
                "e16b9e704dddd3c4"
            ]
        ]
    },
    {
        "id": "4ec9e35e9f306939",
        "type": "inject",
        "z": "6ade3aca4a2ae889",
        "name": "11h55",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "55 11 * * 1,2,3,4,5",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 480,
        "wires": [
            [
                "e16b9e704dddd3c4"
            ]
        ]
    },
    {
        "id": "dd0ae3d991a6456e",
        "type": "inject",
        "z": "6ade3aca4a2ae889",
        "name": "12h55",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "55 12 * * 1,2,3,4,5",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 520,
        "wires": [
            [
                "e16b9e704dddd3c4"
            ]
        ]
    },
    {
        "id": "fb4198d9ee4cb90c",
        "type": "inject",
        "z": "6ade3aca4a2ae889",
        "name": "13h55",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "55 13 * * 1,2,3,4,5",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 560,
        "wires": [
            [
                "e16b9e704dddd3c4"
            ]
        ]
    },
    {
        "id": "e7fa00c15acf4b69",
        "type": "inject",
        "z": "6ade3aca4a2ae889",
        "name": "14h55",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "55 14 * * 1,2,3,4,5",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 600,
        "wires": [
            [
                "e16b9e704dddd3c4"
            ]
        ]
    },
    {
        "id": "ac3d8b895f7edded",
        "type": "inject",
        "z": "6ade3aca4a2ae889",
        "name": "15h55",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "55 15 * * 1,2,3,4,5",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 640,
        "wires": [
            [
                "e16b9e704dddd3c4"
            ]
        ]
    },
    {
        "id": "135bf5dbfc7f57c9",
        "type": "inject",
        "z": "6ade3aca4a2ae889",
        "name": "01h00",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "00 01 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 80,
        "wires": [
            [
                "af619d60c6f04a50"
            ]
        ]
    },
    {
        "id": "abad12cebc25b9cf",
        "type": "link out",
        "z": "6ade3aca4a2ae889",
        "name": "link out 01h",
        "mode": "link",
        "links": [
            "b4841183483264ba",
            "e34b6793028d81f0",
            "7dcec30252975f9e",
            "3c8820ad99ee3db1"
        ],
        "x": 455,
        "y": 80,
        "wires": []
    },
    {
        "id": "2da30dba0e83c128",
        "type": "link out",
        "z": "6ade3aca4a2ae889",
        "name": "link out 07h55-16h55",
        "mode": "link",
        "links": [
            "689f31272956ca85",
            "ef112969a0e90c86",
            "dde31913093c8747"
        ],
        "x": 455,
        "y": 320,
        "wires": []
    },
    {
        "id": "5698e2a9c3154ada",
        "type": "comment",
        "z": "6ade3aca4a2ae889",
        "name": "SEG-DOM / 1h00",
        "info": "",
        "x": 100,
        "y": 40,
        "wires": []
    },
    {
        "id": "360082d4690e2f28",
        "type": "comment",
        "z": "6ade3aca4a2ae889",
        "name": "SEG-SEX / 7H55-16H55 / A CADA HORA",
        "info": "",
        "x": 180,
        "y": 280,
        "wires": []
    },
    {
        "id": "deecb29a4a8f813d",
        "type": "inject",
        "z": "6ade3aca4a2ae889",
        "name": "07h50",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "50 07 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 180,
        "wires": [
            [
                "dcb81238315db23b"
            ]
        ]
    },
    {
        "id": "8670a8eab73710c5",
        "type": "link out",
        "z": "6ade3aca4a2ae889",
        "name": "link out 07h50-08h50",
        "mode": "link",
        "links": [
            "4dfb526527dda2bb",
            "943ab71e0eeeee5c",
            "c1e8412526423946",
            "063afd3e386a68c9"
        ],
        "x": 455,
        "y": 180,
        "wires": []
    },
    {
        "id": "a05394bf240b0bdb",
        "type": "comment",
        "z": "6ade3aca4a2ae889",
        "name": "SEG-SEX / 7h50-8h50",
        "info": "",
        "x": 120,
        "y": 140,
        "wires": []
    },
    {
        "id": "b906573ad973a871",
        "type": "inject",
        "z": "6ade3aca4a2ae889",
        "name": "08h50",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "50 08 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 220,
        "wires": [
            [
                "dcb81238315db23b"
            ]
        ]
    },
    {
        "id": "af619d60c6f04a50",
        "type": "function",
        "z": "6ade3aca4a2ae889",
        "name": "function",
        "func": "msg.bfc = {\n    \n    \"qtd\": 0,\n    \"rBy\": \"Node-RED\"\n\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 80,
        "wires": [
            [
                "abad12cebc25b9cf"
            ]
        ]
    },
    {
        "id": "dcb81238315db23b",
        "type": "function",
        "z": "6ade3aca4a2ae889",
        "name": "function",
        "func": "msg.bfc = {\n    \n    \"qtd\": 0,\n    \"rBy\": \"Node-RED\"\n\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 180,
        "wires": [
            [
                "8670a8eab73710c5"
            ]
        ]
    },
    {
        "id": "e16b9e704dddd3c4",
        "type": "function",
        "z": "6ade3aca4a2ae889",
        "name": "function",
        "func": "msg.bfc = {\n    \n    \"qtd\": 0,\n    \"rBy\": \"Node-RED\"\n\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 320,
        "wires": [
            [
                "2da30dba0e83c128"
            ]
        ]
    },
    {
        "id": "9fc83d2adfe1eb62",
        "type": "inject",
        "z": "6ade3aca4a2ae889",
        "name": "16h55",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "55 16 * * 1,2,3,4,5",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 680,
        "wires": [
            [
                "e16b9e704dddd3c4"
            ]
        ]
    }
]